var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.163,1,0.778]],["body/components/App.html",[0,0.27,1,1.617,2,1.233,3,0.216,4,0.185,5,1.065,6,1.065,7,1.065,8,0.185,9,3.314,10,0.94,11,1.936,12,1.907,13,1.397,14,4.849,15,1.397,16,5.12,17,1.682,18,5.12,19,0.315,20,0.658,21,5.712,22,3.855,23,0.725,24,3.904,25,4.36,26,0.658,27,3.904,28,0.63,29,0.024,30,0.512,31,0.369,32,0.586,33,0.543,34,0.775,35,0.677,36,3.836,37,5.12,38,3.904,39,0.62,40,0.386,41,1.551,42,3.904,43,1.206,44,0.216,45,0.423,46,1.551,47,1.065,48,1.397,49,1.397,50,1.065,51,1.655,52,1.065,53,1.065,54,0.94,55,1.065,56,0.94,57,1.397,58,0.94,59,1.065,60,1.397,61,0.94,62,1.065,63,0.94,64,1.065,65,0.828,66,1.065,67,0.94,68,1.085,69,1.559,70,0.94,71,1.397,72,0.883,73,1.001,74,1.065,75,0.94,76,1.313,77,0.94,78,0.883,79,1.065,80,0.94,81,1.001,82,0.94,83,1.065,84,1.065,85,0.94,86,1.085,87,0.94,88,1.001,89,1.001,90,1.065,91,0.017,92,0.017]],["title/guards/AuthGuard.html",[93,2.578,94,2.578]],["body/guards/AuthGuard.html",[3,0.263,4,0.225,8,0.225,12,1.774,19,0.384,23,0.884,26,0.746,28,0.769,29,0.024,30,0.427,31,0.343,32,0.715,39,0.679,40,0.471,41,1.891,43,1.47,44,0.263,45,0.516,46,1.891,91,0.02,92,0.02,94,4.349,95,3.568,96,4.042,97,0.871,98,5.77,99,3.568,100,3.308,101,4.235,102,4.762,103,4.762,104,0.715,105,2.634,106,1.23,107,3.568,108,1.891,109,2.695,110,1.382,111,4.762,112,4.762,113,1.685,114,2.019,115,2.019]],["title/injectables/AuthService.html",[100,1.675,106,0.729]],["body/injectables/AuthService.html",[3,0.185,4,0.159,8,0.159,12,1.249,19,0.271,20,0.594,23,0.858,26,0.814,28,0.746,29,0.025,30,0.414,31,0.381,32,0.694,33,0.911,34,0.666,35,0.581,39,0.67,40,0.332,41,1.332,44,0.185,45,0.364,86,0.98,91,0.016,92,0.016,97,0.694,100,2.249,101,3.804,104,0.897,105,2.097,106,0.98,108,1.332,110,1.535,113,1.901,114,1.422,116,1.422,117,5.477,118,1.422,119,1.382,120,3.255,121,5.7,122,5.7,123,5.7,124,4.838,125,4.838,126,3.354,127,5.289,128,5.289,129,2.77,130,2.985,131,3.923,132,3.354,133,3.354,134,5.7,135,3.354,136,3.354,137,3.255,138,2.513,139,4.622,140,2.77,141,3.354,142,0.915,143,3.463,144,3.354,145,1.036,146,1.756,147,2.064,148,1.632,149,3.354,150,3.923,151,2.847,152,1.173,153,1.102,154,1.756,155,3.354,156,3.354,157,3.354,158,3.354,159,1.196,160,4.622,161,3.354,162,3.354,163,3.354,164,0.86,165,3.354,166,2.064,167,3.354,168,5.7,169,3.354,170,3.354,171,3.354,172,4.489,173,2.847,174,2.574,175,2.847,176,3.354,177,3.354,178,2.847,179,2.847,180,1.756,181,1.756,182,3.354,183,3.354,184,3.354,185,2.513,186,3.354,187,4.622]],["title/injectables/CommonService.html",[106,0.729,188,1.131]],["body/injectables/CommonService.html",[0,0.122,3,0.143,4,0.122,8,0.122,12,0.962,19,0.208,20,0.493,23,0.479,26,0.826,28,0.972,29,0.025,30,0.54,31,0.463,32,0.903,33,0.969,34,1.004,35,0.981,39,0.653,40,0.255,44,0.143,45,0.28,46,1.026,72,1.033,73,1.172,78,0.584,81,0.983,86,0.813,91,0.013,92,0.013,97,0.575,104,0.923,106,0.813,108,1.026,110,1.701,113,1.748,116,1.095,118,1.095,119,1.376,120,1.59,129,2.008,130,2.649,140,2.965,142,1.247,143,1.935,146,1.353,148,1.257,152,0.903,153,0.849,159,1.325,164,0.662,166,1.59,185,1.935,188,1.26,189,5.513,190,3.834,191,3.79,192,4.572,193,5.058,194,3.834,195,3.834,196,3.834,197,3.834,198,3.834,199,1.462,200,6.15,201,5.058,202,2.587,203,3.834,204,2.583,205,1.935,206,2.583,207,2.583,208,2.401,209,4.572,210,2.583,211,3.254,212,2.583,213,1.935,214,2.583,215,2.146,216,2.583,217,3.834,218,2.485,219,2.583,220,3.834,221,6.258,222,2.583,223,3.484,224,3.254,225,2.872,226,3.834,227,2.583,228,2.872,229,3.834,230,1.743,231,1.935,232,3.834,233,3.834,234,3.254,235,3.834,236,3.834,237,3.834,238,2.583,239,1.452,240,3.425,241,2.583,242,2.192,243,2.192,244,2.192,245,2.583,246,1.935,247,2.192,248,2.192,249,2.583,250,2.583,251,2.583,252,2.583,253,2.583,254,2.583,255,2.583,256,3.834,257,2.583,258,2.583,259,2.583,260,2.583,261,2.583,262,2.583,263,2.583,264,2.583,265,2.583,266,2.583,267,2.583,268,3.834,269,4.572,270,2.587,271,3.834,272,3.834,273,3.834,274,2.583,275,3.834,276,3.834,277,2.587,278,3.834,279,2.583,280,1.865,281,2.583,282,2.192,283,0.962,284,2.583,285,3.414,286,2.192,287,3.254,288,2.008,289,2.583]],["title/injectables/CronService.html",[25,2.322,106,0.729]],["body/injectables/CronService.html",[3,0.158,4,0.135,8,0.135,12,1.065,19,0.231,20,0.531,23,0.767,25,2.788,26,0.778,28,0.667,29,0.025,30,0.37,31,0.405,32,0.62,34,0.82,35,0.716,39,0.656,40,0.283,43,1.497,44,0.158,45,0.31,65,0.606,68,0.876,76,1.243,91,0.014,92,0.014,97,0.62,104,0.797,106,0.876,108,1.136,110,1.86,113,1.199,114,1.752,116,1.213,118,1.213,119,1.302,142,1.127,152,1,159,1.467,202,2.788,215,2.46,218,2.752,223,1.76,225,2.143,230,1.93,239,1.552,247,2.428,248,2.428,282,4.116,283,2.098,285,1.93,286,2.428,288,1.498,290,5.259,291,4.982,292,5.311,293,4.131,294,5.311,295,5.311,296,2.86,297,3.073,298,3.169,299,3.425,300,2.86,301,4.131,302,2.86,303,2.86,304,4.131,305,2.428,306,2.428,307,2.428,308,4.131,309,3.506,310,2.143,311,4.131,312,2.86,313,2.86,314,2.86,315,2.86,316,2.788,317,3.192,318,4.131,319,2.86,320,4.131,321,4.131,322,4.131,323,4.131,324,3.095,325,4.131,326,3.506,327,2.86,328,4.116,329,2.428,330,2.86,331,3.095,332,2.86,333,2.86,334,2.428,335,2.86,336,2.86,337,2.86,338,3.506,339,2.86,340,2.86,341,2.86,342,2.86,343,2.428,344,2.428,345,2.143,346,2.86,347,2.86,348,2.86,349,2.428,350,2.143,351,1.619,352,2.428,353,3.095,354,2.428,355,1.392,356,2.428,357,2.143,358,2.86,359,1.93,360,1.93,361,2.428,362,2.143,363,2.86,364,2.428,365,2.86,366,3.506,367,2.428,368,2.86,369,2.428,370,2.86,371,2.86,372,4.131,373,2.86,374,2.86,375,2.86,376,2.86,377,2.86,378,2.86,379,2.86,380,2.86,381,2.86,382,4.131,383,2.86,384,2.86,385,2.86]],["title/components/DashboardComponent.html",[0,0.163,54,0.829]],["body/components/DashboardComponent.html",[0,0.167,1,1.442,2,0.675,3,0.095,4,0.082,5,0.965,6,0.471,7,0.471,8,0.082,10,0.416,11,1.728,13,0.764,15,0.764,19,0.226,20,0.36,22,1.89,23,0.52,26,0.8,28,0.657,29,0.025,30,0.401,31,0.427,32,0.671,33,0.622,34,1.079,35,1.055,39,0.652,40,0.171,43,1.257,44,0.095,45,0.187,47,0.471,48,0.764,49,0.764,50,0.471,51,1.11,52,0.471,53,0.471,54,0.98,55,0.471,56,0.416,57,0.764,58,0.416,59,0.471,60,0.764,61,0.416,62,0.471,63,0.416,64,0.471,65,0.366,66,0.471,67,0.416,68,0.594,69,0.965,70,0.416,71,0.764,72,0.39,73,0.443,74,0.471,75,0.416,76,0.718,77,0.416,78,0.39,79,0.471,80,0.416,81,0.718,82,0.416,83,0.471,84,0.471,85,0.416,86,0.594,87,0.416,88,0.443,89,0.443,90,0.471,91,0.009,92,0.009,97,0.42,104,0.719,105,1.271,110,1.806,113,1.181,114,1.897,115,1.897,119,1.297,142,1.308,145,0.533,147,2.504,152,0.604,153,1.728,154,0.904,159,0.799,174,1.98,188,1.659,205,2.099,208,1.499,213,2.099,215,2.353,218,2.513,239,0.718,240,2.649,270,1.165,277,2.746,288,1.851,297,2.644,298,2.644,306,1.465,307,1.465,309,2.378,310,1.293,316,1.165,317,2.718,331,1.293,343,1.465,344,1.465,345,1.293,353,2.099,386,1.293,387,5.33,388,5.33,389,1.165,390,2.099,391,2.099,392,4.464,393,1.724,394,1.236,395,4.474,396,1.162,397,2.099,398,2.649,399,2.099,400,5.436,401,4.792,402,3.001,403,3.001,404,3.77,405,3.536,406,3.536,407,4.069,408,3.536,409,4.069,410,3.049,411,2.303,412,2.801,413,1.726,414,2.712,415,2.386,416,2.801,417,1.726,418,1.726,419,4.069,420,1.726,421,2.649,422,1.726,423,1.726,424,1.726,425,2.801,426,2.754,427,3.454,428,1.726,429,0.84,430,2.801,431,2.801,432,2.801,433,1.726,434,1.726,435,1.726,436,1.726,437,4.069,438,1.726,439,1.726,440,1.726,441,1.726,442,1.726,443,1.293,444,1.165,445,2.801,446,1.726,447,1.465,448,1.465,449,2.378,450,1.465,451,0.783,452,1.726,453,0.732,454,1.165,455,1.165,456,1.726,457,2.378,458,1.726,459,1.465,460,1.726,461,1.165,462,1.726,463,1.726,464,1.165,465,1.726,466,1.726,467,3.798,468,1.726,469,2.801,470,1.726,471,1.726,472,1.726,473,1.726,474,1.726,475,1.726,476,1.726,477,4.069,478,3.019,479,4.069,480,1.726,481,1.726,482,1.726,483,3.536,484,1.726,485,1.726,486,1.726,487,1.726,488,1.726,489,1.726,490,1.726,491,1.726,492,1.726,493,2.801,494,2.801,495,2.801,496,3.536,497,1.726,498,1.726,499,2.801,500,1.726,501,1.465,502,1.465,503,2.801,504,2.801,505,2.746,506,1.726,507,2.099,508,3.049,509,1.293,510,1.293,511,1.293,512,1.293,513,1.293,514,1.465,515,2.386,516,3.352,517,2.649,518,1.293,519,0.977,520,2.649,521,1.165,522,1.293,523,3.001,524,1.293,525,2.649,526,3.536,527,4.069,528,2.801,529,4.069,530,2.801,531,1.726,532,1.726,533,1.726,534,3.536,535,2.649,536,2.099,537,1.726,538,3.352,539,2.649,540,1.726,541,2.099,542,1.726,543,2.378,544,1.726,545,2.099,546,1.293,547,1.726,548,1.465,549,1.465,550,1.726,551,1.726,552,1.726,553,1.726,554,1.726,555,1.726,556,1.726,557,0.977,558,2.801]],["title/pipes/DuedatePipe.html",[559,1.675,560,2.118]],["body/pipes/DuedatePipe.html",[3,0.241,4,0.206,8,0.206,10,1.051,26,0.561,28,0.704,29,0.025,30,0.54,31,0.314,32,0.655,33,0.906,35,0.953,39,0.473,40,0.432,44,0.241,45,0.473,91,0.019,92,0.019,97,0.655,104,0.655,109,2.47,113,1.748,159,1.429,239,1.41,283,2.354,316,3.711,317,3.325,328,4.667,329,3.704,338,3.704,353,3.269,369,3.704,559,2.676,560,3.384,561,2.945,562,4.667,563,3.269,564,3.384,565,3.269,566,4.667,567,4.363,568,4.667,569,4.363,570,4.363,571,4.363,572,4.363,573,4.363,574,4.363,575,4.363,576,4.363,577,6.321,578,4.363,579,3.269,580,5.499,581,4.363,582,4.363,583,4.12,584,3.269]],["title/components/Header.html",[0,0.163,56,0.829]],["body/components/Header.html",[0,0.248,1,1.581,2,1.099,3,0.182,4,0.156,5,0.898,6,0.898,7,0.898,8,0.156,10,0.793,11,1.902,13,1.245,15,1.245,17,1.499,19,0.266,22,4.007,26,0.826,29,0.024,30,0.409,31,0.442,33,0.786,34,1.122,35,0.98,39,0.613,40,0.325,44,0.182,45,0.357,47,0.898,48,1.245,49,1.245,50,0.898,51,1.543,52,0.898,53,0.898,54,0.793,55,0.898,56,1.48,57,1.245,58,0.793,59,0.898,60,1.245,61,0.793,62,0.898,63,0.793,64,0.898,65,0.697,66,0.898,67,0.793,68,0.967,69,1.429,70,0.793,71,1.245,72,0.744,73,1.45,74,0.898,75,0.793,76,1.17,77,0.793,78,0.744,79,0.898,80,0.793,81,0.844,82,0.793,83,0.898,84,0.898,85,0.793,86,0.967,87,0.793,88,0.844,89,0.844,90,0.898,91,0.015,92,0.015,97,0.685,104,0.685,105,2.565,114,2.398,119,1.22,142,1.245,145,1.016,239,1.45,283,1.699,285,3.079,367,4.799,394,1.831,396,1.72,453,1.395,585,2.793,586,3.223,587,3.872,588,3.872,589,5.654,590,4.562,591,5.236,592,5.236,593,4.562,594,3.877,595,5.236,596,3.291,597,3.291,598,3.291,599,3.291,600,5.938,601,3.291,602,3.291,603,3.291,604,3.291,605,5.04,606,5.236,607,1.395,608,3.291,609,3.291,610,3.291,611,3.418,612,3.872,613,3.079]],["title/components/HomeComponent.html",[0,0.163,58,0.829]],["body/components/HomeComponent.html",[0,0.282,1,1.582,2,1.105,3,0.183,4,0.157,5,0.905,6,0.905,7,0.905,8,0.157,10,0.799,11,1.904,13,1.252,14,4.464,15,1.252,17,1.507,19,0.268,20,0.59,23,0.616,26,0.729,28,0.536,29,0.025,30,0.472,31,0.379,32,0.498,34,0.659,35,0.575,39,0.698,40,0.328,41,1.318,44,0.183,45,0.36,46,1.318,47,0.905,48,1.252,49,1.252,50,0.905,51,1.548,52,0.905,53,0.905,54,0.799,55,0.905,56,1.105,57,1.252,58,1.366,59,1.723,60,1.252,61,0.799,62,0.905,63,0.799,64,0.905,65,1.203,66,0.905,67,0.799,68,0.972,69,1.435,70,0.799,71,1.252,72,0.75,73,0.851,74,0.905,75,0.799,76,1.176,77,0.799,78,0.75,79,0.905,80,1.366,81,0.851,82,0.799,83,0.905,84,0.905,85,0.799,86,0.972,87,0.799,88,0.851,89,0.851,90,0.905,91,0.016,92,0.016,97,0.688,104,0.498,105,2.081,114,1.407,115,2.23,119,1.044,142,0.905,145,1.024,153,1.507,215,1.822,389,2.239,392,3.894,394,1.839,396,1.728,398,3.437,399,3.437,411,3.211,429,1.614,444,2.239,453,1.407,557,1.878,614,5.055,615,5.055,616,3.94,617,5.259,618,5.259,619,3.317,620,5.673,621,4.587,622,4.587,623,3.317,624,3.317,625,5.259,626,4.587,627,3.317,628,3.317,629,3.317,630,2.486,631,3.317,632,3.317,633,3.317,634,3.317,635,4.587,636,3.317,637,4.587,638,3.894,639,4.587]],["title/injectables/HttpService.html",[106,0.729,640,2.578]],["body/injectables/HttpService.html",[3,0.258,4,0.221,8,0.221,12,1.74,19,0.377,20,0.737,23,0.867,26,0.798,28,0.754,29,0.024,30,0.419,31,0.413,32,0.701,33,0.65,34,0.927,35,0.809,39,0.622,40,0.462,44,0.258,45,0.507,46,1.855,91,0.019,92,0.019,97,0.861,104,0.701,106,1.216,108,1.855,116,1.981,118,1.981,119,1.343,129,3.004,130,3.391,146,2.446,159,1.056,199,2.644,291,5.271,305,3.965,326,3.965,640,4.298,641,5.497,642,5.271,643,6.476,644,5.737,645,5.737,646,2.446,647,4.671,648,4.671]],["title/interfaces/Kpis.html",[404,2.322,649,1.203]],["body/interfaces/Kpis.html",[3,0.29,4,0.248,8,0.248,19,0.424,20,0.791,29,0.024,31,0.443,33,0.908,35,1.167,44,0.29,91,0.021,92,0.021,404,4.154,426,4.018,467,5.716,649,1.837,650,2.75,651,4.458]],["title/injectables/LoaderService.html",[106,0.729,652,2.578]],["body/injectables/LoaderService.html",[3,0.292,4,0.25,8,0.25,12,1.969,23,1.215,26,0.679,29,0.024,39,0.573,40,0.523,44,0.292,45,0.573,91,0.021,92,0.021,106,1.31,108,2.099,116,2.242,118,2.242,652,4.629,653,5.244,654,5.286]],["title/components/LoginComponent.html",[0,0.163,61,0.829]],["body/components/LoginComponent.html",[0,0.233,1,1.561,2,1.013,3,0.162,4,0.139,5,0.8,6,0.8,7,0.8,8,0.139,10,0.706,11,1.877,13,1.148,15,1.148,17,1.382,19,0.237,20,0.541,26,0.802,29,0.025,30,0.377,33,0.585,34,1.21,35,1.056,39,0.689,40,0.29,41,1.165,43,1.299,44,0.162,45,0.318,47,0.8,48,1.148,49,1.148,50,0.8,51,1.466,52,0.8,53,0.8,54,0.706,55,0.8,56,0.706,57,1.148,58,0.706,59,0.8,60,1.148,61,1.294,62,0.8,63,0.706,64,0.8,65,0.622,66,0.8,67,0.706,68,0.891,69,1.342,70,0.706,71,1.148,72,0.663,73,0.752,74,0.8,75,0.706,76,1.078,77,0.706,78,0.663,79,0.8,80,0.706,81,0.752,82,0.706,83,0.8,84,0.8,85,0.706,86,0.891,87,0.706,88,0.752,89,0.752,90,0.8,91,0.014,92,0.014,97,0.631,100,2.614,101,3.306,104,0.44,107,2.197,110,1.958,113,0.851,115,1.783,119,1.261,124,5.175,137,3.306,142,1.148,145,0.905,148,1.427,150,2.489,152,1.025,159,0.663,175,2.489,180,1.535,181,1.535,188,1.765,239,1.078,280,2.046,362,2.197,390,3.151,391,3.151,393,2.588,394,1.72,396,1.616,443,2.197,451,1.33,453,1.243,559,1.427,607,1.243,655,5.39,656,2.489,657,2.575,658,4.206,659,4.206,660,4.917,661,3.318,662,4.917,663,5.372,664,3.625,665,2.932,666,3.57,667,2.932,668,3.57,669,2.932,670,4.206,671,2.932,672,4.206,673,2.932,674,2.838,675,2.783,676,3.625,677,2.932,678,4.206,679,2.932,680,4.206,681,2.932,682,1.979,683,1.979,684,2.932,685,2.932,686,2.489,687,2.932,688,2.932,689,2.932,690,2.932,691,2.932,692,2.932,693,2.932,694,2.932,695,2.932,696,2.932,697,2.932,698,2.932,699,2.932,700,2.932]],["title/components/NotFound.html",[0,0.163,63,0.829]],["body/components/NotFound.html",[0,0.275,1,1.613,2,1.265,3,0.225,4,0.192,5,1.108,6,1.108,7,1.108,8,0.192,10,0.978,11,1.943,13,1.433,15,1.433,17,1.725,29,0.024,30,0.471,39,0.57,40,0.402,41,1.612,44,0.225,45,0.44,47,1.108,48,1.433,49,1.433,50,1.108,51,1.679,52,1.108,53,1.108,54,0.978,55,1.108,56,0.978,57,1.433,58,0.978,59,1.588,60,1.433,61,0.978,62,1.108,63,1.482,64,1.108,65,0.86,66,1.108,67,0.978,68,1.113,69,1.588,70,0.978,71,1.433,72,0.918,73,1.041,74,1.108,75,0.978,76,1.347,77,0.978,78,0.918,79,1.108,80,0.978,81,1.041,82,0.978,83,1.108,84,1.108,85,0.978,86,1.113,87,0.978,88,1.041,89,1.041,90,1.108,91,0.018,92,0.018,616,4.361,701,3.446,702,3.446,703,3.446,704,5.251,705,5.251,706,5.251,707,5.251,708,4.457,709,3.934,710,4.06,711,5.251,712,5.251,713,4.457,714,5.251,715,4.06]],["title/components/Notification.html",[0,0.163,65,0.729]],["body/components/Notification.html",[0,0.235,1,1.564,2,1.028,3,0.166,4,0.142,5,0.817,6,0.817,7,0.817,8,0.142,10,0.721,11,1.881,13,1.165,15,1.165,17,1.402,19,0.242,20,0.549,26,0.788,28,0.483,29,0.025,30,0.446,31,0.358,32,0.449,34,1.138,35,0.993,39,0.68,40,0.296,43,1.318,44,0.166,45,0.325,47,0.817,48,1.165,49,1.165,50,0.817,51,1.48,52,0.817,53,0.817,54,0.721,55,0.817,56,0.721,57,1.165,58,0.721,59,0.817,60,1.165,61,0.721,62,0.817,63,0.721,64,0.817,65,1.263,66,0.817,67,0.721,68,0.905,69,1.357,70,0.721,71,1.165,72,0.677,73,0.768,74,0.817,75,0.721,76,1.094,77,0.721,78,0.677,79,0.817,80,0.721,81,0.768,82,0.721,83,0.817,84,0.817,85,0.721,86,0.905,87,0.721,88,0.768,89,0.768,90,0.817,91,0.014,92,0.014,97,0.64,104,0.64,109,2.416,110,1.852,113,0.869,115,1.81,119,1.267,140,3.002,142,1.48,145,0.924,148,1.457,151,2.541,152,1.047,188,1.781,234,2.541,242,2.541,283,1.59,299,3.069,317,1.457,390,3.198,391,3.198,393,2.627,394,1.739,396,1.634,411,3.069,443,2.243,579,3.198,668,3.623,686,2.541,716,2.541,717,4.222,718,4.268,719,4.268,720,4.222,721,4.031,722,4.974,723,4.268,724,2.993,725,4.268,726,2.993,727,2.993,728,2.993,729,4.268,730,2.993,731,2.993,732,4.268,733,2.993,734,4.268,735,2.993,736,2.993,737,2.541,738,2.541,739,2.993,740,4.268,741,2.541,742,2.993,743,4.268,744,4.268,745,2.993,746,4.268,747,2.993,748,2.993,749,2.993,750,2.993,751,2.993,752,2.993,753,2.993,754,2.993,755,2.993,756,2.993,757,4.268,758,4.268,759,4.268]],["title/injectables/NotificationService.html",[106,0.729,299,1.948]],["body/injectables/NotificationService.html",[3,0.231,4,0.198,8,0.198,12,1.556,19,0.337,20,0.688,23,0.775,26,0.827,28,1.004,29,0.025,30,0.558,31,0.463,32,0.934,33,0.93,34,0.829,35,0.724,39,0.64,40,0.413,44,0.231,45,0.453,46,1.659,65,1.134,91,0.018,92,0.018,97,0.803,104,0.885,106,1.134,108,1.659,110,1.713,113,1.713,115,1.771,116,1.771,118,1.771,119,1.358,129,2.801,130,3.258,138,3.13,146,2.187,164,1.071,199,2.364,202,2.819,299,3.027,350,4.007,351,2.364,359,2.819,360,2.819,642,5.008,721,3.829,737,3.546,760,5.584,761,5.349,762,5.349,763,4.54,764,5.349,765,3.546,766,5.349,767,5.349,768,5.349,769,4.177,770,4.177,771,4.177]],["title/interfaces/Notifications.html",[649,1.203,721,2.118]],["body/interfaces/Notifications.html",[3,0.257,4,0.22,8,0.22,19,0.376,20,0.736,29,0.024,31,0.51,32,1.014,33,1.005,44,0.257,91,0.019,92,0.019,105,2.812,164,1.658,223,3.98,351,3.661,355,3.147,357,4.846,359,4.364,360,4.364,649,1.627,650,2.437,721,3.523,772,3.95]],["title/components/ProjectForm.html",[0,0.163,67,0.829]],["body/components/ProjectForm.html",[0,0.19,1,1.491,2,0.788,3,0.116,4,0.099,5,0.572,6,0.572,7,0.572,8,0.099,10,0.505,11,1.789,13,0.892,15,0.892,17,1.075,19,0.169,20,0.42,23,0.607,26,0.799,28,0.528,29,0.025,30,0.489,31,0.435,32,0.491,33,0.455,34,0.978,35,0.854,39,0.643,40,0.207,43,1.242,44,0.116,45,0.227,47,0.572,48,0.892,49,0.892,50,0.572,51,1.24,52,0.572,53,0.572,54,0.505,55,0.572,56,0.505,57,0.892,58,0.505,59,0.572,60,0.892,61,0.505,62,0.572,63,0.505,64,0.572,65,0.444,66,0.572,67,1.094,68,1.347,69,1.097,70,0.505,71,0.892,72,0.474,73,0.538,74,0.572,75,0.505,76,0.839,77,0.505,78,0.474,79,0.572,80,0.505,81,0.538,82,0.505,83,0.572,84,0.572,85,0.505,86,0.693,87,0.505,88,0.538,89,0.538,90,0.572,91,0.011,92,0.011,97,0.491,104,0.682,110,1.805,114,0.889,119,1.348,142,1.344,145,0.647,148,1.02,153,1.321,159,1.027,164,1.398,174,1.957,179,2.776,180,1.713,181,1.713,188,1.791,208,2.089,213,1.571,215,2.073,223,2.013,224,2.776,225,2.45,228,1.571,239,1.338,280,1.592,283,1.944,288,1.713,297,2.854,299,3.085,317,1.592,349,1.78,350,1.571,351,1.187,352,1.78,355,2.744,356,1.78,359,1.415,360,1.415,361,1.78,362,1.571,394,1.406,396,1.321,426,2.013,429,1.02,451,0.951,453,0.889,454,1.415,461,1.415,478,2.207,583,2.45,594,2.013,607,0.889,638,1.78,646,1.713,657,2.106,661,2.207,664,3.066,674,1.415,676,3.324,682,3.066,683,1.415,773,4.245,774,4.712,775,1.415,776,2.45,777,3.013,778,2.579,779,2.45,780,2.45,781,3.413,782,2.579,783,4.021,784,3.413,785,3.856,786,3.856,787,3.271,788,1.571,789,3.69,790,2.45,791,1.78,792,2.097,793,3.271,794,2.097,795,2.097,796,1.78,797,2.45,798,1.78,799,1.78,800,3.013,801,2.097,802,1.78,803,1.78,804,3.324,805,1.78,806,1.78,807,1.571,808,1.098,809,2.097,810,1.571,811,2.776,812,3.856,813,2.097,814,1.78,815,1.571,816,2.097,817,1.571,818,2.097,819,2.097,820,1.78,821,2.097,822,1.571,823,3.271,824,2.097,825,2.276,826,2.097,827,2.097,828,3.066,829,2.097,830,1.78,831,1.78,832,1.571,833,2.097,834,2.097,835,1.571,836,2.097,837,1.571,838,2.097,839,2.097,840,2.097,841,1.571,842,1.571,843,1.415,844,1.571,845,1.78,846,2.097,847,2.097,848,3.271,849,2.097,850,4.021,851,2.097,852,1.415,853,1.851,854,1.78,855,2.776,856,2.45,857,2.776,858,2.776,859,2.45,860,1.78]],["title/components/ProjectListComponent.html",[0,0.163,70,0.829]],["body/components/ProjectListComponent.html",[0,0.16,1,1.423,2,0.638,3,0.089,4,0.076,5,0.44,6,0.44,7,0.44,8,0.076,10,0.388,11,1.704,13,0.723,15,0.723,19,0.13,20,0.34,22,1.087,23,0.492,26,0.803,28,0.631,29,0.025,30,0.512,31,0.382,32,0.586,33,0.712,34,0.973,35,0.804,39,0.671,40,0.159,41,0.64,43,0.818,44,0.089,45,0.175,47,0.44,48,0.723,49,0.723,50,0.44,51,1.066,52,0.44,53,0.44,54,0.388,55,0.44,56,1.039,57,0.723,58,0.388,59,0.44,60,0.723,61,0.388,62,0.44,63,0.388,64,0.44,65,0.341,66,0.44,67,0.941,68,1.27,69,0.92,70,0.941,71,0.723,72,0.364,73,0.413,74,0.44,75,0.388,76,0.679,77,0.388,78,0.364,79,0.44,80,0.388,81,0.679,82,0.388,83,0.44,84,0.44,85,0.388,86,0.561,87,0.388,88,0.865,89,0.413,90,0.44,91,0.009,92,0.009,97,0.397,101,3.017,104,0.819,109,1.499,110,1.828,114,1.43,115,1.123,119,1.282,142,1.689,145,0.498,147,2.404,152,0.563,153,1.682,154,0.844,159,0.599,164,1.4,174,2.1,180,0.844,181,0.844,188,1.611,205,1.984,208,1.656,215,2.222,218,0.683,231,1.207,239,1.001,240,2.526,270,1.787,277,2.275,280,1.289,283,1.455,288,1.387,297,2.567,310,1.207,317,1.289,324,2.526,331,2.526,355,0.784,386,1.207,393,1.63,394,1.179,396,1.108,397,1.984,402,2.862,403,2.862,410,2.926,411,2.21,415,2.275,421,1.207,426,2.855,429,1.289,444,1.087,451,0.731,453,0.683,454,1.087,457,1.368,459,1.368,461,1.087,464,1.087,501,1.368,502,1.368,507,1.984,508,2.526,509,1.207,510,1.207,511,2.526,512,1.984,513,2.526,514,1.368,515,2.275,516,2.526,517,2.926,518,1.984,519,1.499,520,2.526,521,1.787,522,1.207,524,1.207,525,1.207,535,1.207,536,1.207,538,2.526,539,1.207,541,3.476,543,1.368,545,1.984,546,1.207,548,1.368,557,2.21,559,1.289,560,2.075,564,1.63,584,1.207,586,2.075,607,0.683,611,2.926,646,0.844,657,1.766,675,1.499,717,2.862,773,4.249,774,1.207,778,0.844,782,0.844,786,3.315,808,0.844,814,1.368,817,1.984,822,1.984,825,2.21,852,1.787,853,1.908,856,1.984,857,3.315,861,5.344,862,1.087,863,3.372,864,2.275,865,2.526,866,1.984,867,2.862,868,2.862,869,2.862,870,3.905,871,3.315,872,3.315,873,2.248,874,1.984,875,2.648,876,3.315,877,1.207,878,2.635,879,2.648,880,1.787,881,1.611,882,1.368,883,1.611,884,1.368,885,1.611,886,1.611,887,2.648,888,3.905,889,1.611,890,2.248,891,1.611,892,1.087,893,2.648,894,1.611,895,1.611,896,2.862,897,1.611,898,1.611,899,2.648,900,2.926,901,1.368,902,1.207,903,2.862,904,2.248,905,1.611,906,1.611,907,2.862,908,2.248,909,1.611,910,1.368,911,1.368,912,1.368,913,1.207,914,1.368,915,1.611,916,1.611,917,1.611,918,2.648,919,1.368,920,2.248,921,3.372,922,1.611,923,1.368,924,1.368,925,1.368,926,1.368,927,1.368,928,2.248,929,2.248,930,1.368,931,1.368,932,1.368,933,1.611,934,1.368,935,1.611,936,1.611,937,2.648,938,1.787,939,1.087,940,1.611,941,1.984,942,1.611,943,1.207,944,1.611,945,1.611,946,2.248,947,2.648,948,2.648,949,3.905,950,2.648,951,1.984,952,2.248,953,1.984,954,2.648,955,2.648,956,2.648,957,2.526,958,1.984,959,1.368,960,2.248,961,1.368,962,1.368,963,1.368,964,1.368,965,1.368,966,2.248,967,1.368,968,1.368,969,1.611,970,1.611,971,2.862,972,2.862,973,3.315,974,1.368,975,1.368,976,1.611,977,1.611,978,1.611,979,1.368,980,1.368,981,1.611,982,1.611,983,1.368,984,1.611,985,1.611,986,2.648,987,1.611,988,1.611,989,1.611,990,1.611,991,1.611,992,1.611,993,1.368,994,1.368,995,1.368,996,1.368]],["title/injectables/ProjectService.html",[106,0.729,297,1.802]],["body/injectables/ProjectService.html",[3,0.202,4,0.173,8,0.173,12,1.361,19,0.295,20,0.63,23,0.678,26,0.832,28,0.994,29,0.025,30,0.552,31,0.474,32,0.924,33,0.508,34,0.725,35,0.633,39,0.641,40,0.361,44,0.202,45,0.396,46,1.451,68,1.252,91,0.017,92,0.017,97,0.735,104,0.924,106,1.038,108,1.451,113,1.788,116,1.55,118,1.55,119,1.395,120,3.402,129,2.566,130,3.093,140,3.558,146,1.913,152,1.278,159,1.108,164,1.579,199,2.068,215,2.572,230,2.466,239,1.256,297,2.566,426,4.103,454,2.466,519,2.773,773,4.442,785,4.159,871,5.013,997,4.899,998,4.899,999,4.899,1000,4.899,1001,4.899,1002,4.899,1003,3.654,1004,3.654,1005,4.899,1006,3.101,1007,4.899,1008,3.101,1009,4.899,1010,4.141,1011,3.101,1012,2.738,1013,4.425,1014,3.671,1015,2.738,1016,2.738,1017,2.738]],["title/interfaces/Projects.html",[215,1.367,649,1.203]],["body/interfaces/Projects.html",[3,0.265,4,0.227,8,0.227,19,0.387,20,0.749,29,0.024,30,0.586,31,0.496,33,0.997,44,0.265,91,0.02,92,0.02,164,1.675,174,3.179,215,2.314,283,2.535,649,1.675,650,2.508,817,4.894,820,5.544,822,4.894,825,3.697,1018,4.066]],["title/guards/RoleGuard.html",[93,2.578,1019,2.578]],["body/guards/RoleGuard.html",[3,0.208,4,0.178,8,0.178,12,1.399,19,0.303,23,0.697,26,0.799,28,1.004,29,0.025,30,0.557,31,0.447,32,0.933,33,0.889,39,0.608,40,0.371,41,1.491,43,1.159,44,0.208,45,0.407,46,1.491,91,0.017,92,0.017,95,2.813,97,0.749,98,5.068,99,2.813,100,3.109,101,4.013,104,0.896,105,3.004,106,1.057,107,2.813,108,1.491,109,2.125,110,1.733,113,1.922,114,2.376,115,2.116,159,0.849,1019,3.738,1020,3.187,1021,5.971,1022,5.971,1023,4.989,1024,3.755,1025,4.989,1026,6.521,1027,6.521,1028,6.521,1029,3.755,1030,5.535,1031,4.989,1032,3.755,1033,4.989,1034,5.603,1035,5.971,1036,3.755,1037,4.989,1038,3.755,1039,4.989,1040,4.989,1041,3.755,1042,3.755,1043,3.755,1044,3.755,1045,3.755,1046,4.989,1047,3.755,1048,3.755]],["title/components/SearchInput.html",[0,0.163,72,0.778]],["body/components/SearchInput.html",[0,0.262,1,1.598,2,1.182,3,0.203,4,0.173,5,1,6,1,7,1,8,0.173,10,0.883,11,1.924,13,1.34,15,1.34,17,1.613,19,0.296,23,0.68,26,0.631,28,0.793,29,0.024,30,0.53,31,0.353,32,0.737,33,0.77,39,0.688,40,0.363,43,1.132,44,0.203,45,0.397,46,1.455,47,1,48,1.34,49,1.34,50,1,51,1.614,52,1,53,1,54,0.883,55,1,56,0.883,57,1.34,58,0.883,59,1,60,1.34,61,0.883,62,1,63,0.883,64,1,65,0.777,66,1,67,0.883,68,1.041,69,1.511,70,0.883,71,1.34,72,1.337,73,1.711,74,1,75,0.883,76,1.259,77,0.883,78,0.828,79,1,80,0.883,81,0.94,82,0.883,83,1,84,1,85,0.883,86,1.041,87,0.883,88,0.94,89,0.94,90,1,91,0.017,92,0.017,97,0.737,104,0.55,119,1.099,142,1,188,2.085,211,3.111,451,1.663,586,3.407,605,4.167,607,1.554,1049,4.699,1050,4.699,1051,3.111,1052,4.699,1053,4.699,1054,4.148,1055,4.909,1056,4.909,1057,4.909,1058,3.665,1059,3.665,1060,4.909,1061,3.665,1062,3.665,1063,3.665,1064,3.111,1065,3.665,1066,3.665]],["title/components/TaskForm.html",[0,0.163,75,0.829]],["body/components/TaskForm.html",[0,0.211,1,1.528,2,0.896,3,0.137,4,0.117,5,0.677,6,0.677,7,0.677,8,0.117,10,0.598,11,1.836,13,1.015,15,1.015,17,1.222,19,0.2,20,0.478,23,0.691,26,0.782,28,0.401,29,0.025,30,0.5,31,0.428,32,0.372,33,0.517,34,0.984,35,0.859,39,0.672,40,0.245,43,1.149,44,0.137,45,0.269,47,0.677,48,1.015,49,1.015,50,0.677,51,1.353,52,0.677,53,0.677,54,0.598,55,0.677,56,0.598,57,1.015,58,0.598,59,0.677,60,1.015,61,0.598,62,0.677,63,0.598,64,0.677,65,0.526,66,0.677,67,0.598,68,0.788,69,1.218,70,0.598,71,1.015,72,0.561,73,0.636,74,0.677,75,1.194,76,1.652,77,0.598,78,0.561,79,0.677,80,0.598,81,0.636,82,0.598,83,0.677,84,0.677,85,0.598,86,0.788,87,0.598,88,0.636,89,0.636,90,0.677,91,0.013,92,0.013,97,0.558,104,0.372,110,1.296,119,1.362,142,1.015,145,0.766,148,1.207,153,1.466,159,1.121,164,0.636,174,2.172,180,1.299,181,1.299,188,1.9,208,2.253,218,2.253,223,1.527,239,0.954,280,1.207,288,1.948,298,3.029,355,1.207,357,4.333,394,1.561,396,1.466,429,1.207,451,1.126,453,1.052,455,1.674,478,2.511,564,2.747,583,2.787,594,2.29,607,1.052,613,3.012,646,1.948,657,2.337,661,2.511,664,3.346,674,1.674,676,3.346,682,3.346,683,1.674,775,1.674,778,2.782,779,2.787,780,2.787,782,2.782,784,3.789,788,1.859,789,3.98,790,1.859,791,2.106,797,2.787,798,3.158,800,3.344,807,1.859,808,1.299,810,1.859,815,1.859,825,2.526,828,1.674,835,1.859,837,1.859,841,1.859,842,1.859,843,1.674,844,1.859,845,2.106,853,2.106,854,2.106,855,3.158,859,2.787,860,2.106,1067,4.182,1068,4.642,1069,3.344,1070,3.789,1071,4.463,1072,2.481,1073,2.481,1074,2.787,1075,2.787,1076,3.344,1077,2.481,1078,2.106,1079,3.72,1080,3.72,1081,3.72,1082,2.481,1083,2.106,1084,2.481,1085,3.72,1086,5.312,1087,2.481,1088,2.481,1089,2.481,1090,2.481,1091,2.481,1092,2.481,1093,2.481,1094,2.481,1095,2.481,1096,2.481,1097,2.106,1098,3.158]],["title/components/TaskListComponent.html",[0,0.163,77,0.829]],["body/components/TaskListComponent.html",[0,0.152,1,1.403,2,0.602,3,0.083,4,0.071,5,0.41,6,0.41,7,0.41,8,0.071,10,0.362,11,1.68,13,0.682,15,0.682,19,0.202,20,0.321,23,0.464,26,0.745,28,0.768,29,0.025,30,0.502,31,0.403,32,0.713,33,0.871,34,0.825,35,0.72,39,0.607,40,0.149,41,0.597,43,0.772,44,0.083,45,0.163,47,0.41,48,0.682,49,0.682,50,0.41,51,1.021,52,0.41,53,0.41,54,0.362,55,0.41,56,1.199,57,0.682,58,0.362,59,0.41,60,0.682,61,0.362,62,0.41,63,0.362,64,0.41,65,0.319,66,0.41,67,0.362,68,0.681,69,0.876,70,0.362,71,0.682,72,0.34,73,0.386,74,0.41,75,0.602,76,1.627,77,0.901,78,0.34,79,0.41,80,0.362,81,0.386,82,0.362,83,0.41,84,0.41,85,0.362,86,0.53,87,0.362,88,0.96,89,0.386,90,0.41,91,0.008,92,0.008,97,0.375,104,0.747,110,1.588,113,0.436,119,1.267,142,1.297,145,0.464,147,2.303,159,0.726,164,0.641,174,2.423,188,1.562,208,0.638,215,0.993,218,2.372,239,0.96,270,2.804,277,3.36,283,0.932,285,1.688,287,2.123,298,2.49,316,1.688,317,2.594,334,2.123,345,1.874,354,2.123,355,2.022,386,1.126,394,1.123,396,1.055,397,1.874,411,2.118,415,2.167,421,3.36,427,1.276,451,0.682,453,0.638,455,1.015,464,1.015,507,1.874,508,3.872,509,2.406,510,1.126,511,3.36,512,2.406,513,3.113,515,1.688,516,4.099,517,4.41,518,2.406,519,2.352,520,3.562,521,1.688,522,1.874,523,4.226,524,3.73,525,3.562,535,1.874,536,1.874,538,3.36,539,3.36,541,4.273,545,2.804,546,4.191,549,2.726,557,2.118,564,2.303,565,1.126,579,1.126,584,1.874,586,1.976,594,1.539,607,0.638,612,1.276,613,3.027,646,1.96,657,1.682,778,0.787,782,0.787,808,0.787,812,2.726,825,1.416,843,1.015,852,1.015,853,1.818,862,1.015,865,2.406,866,1.874,874,1.874,877,1.126,878,2.526,880,1.688,884,1.276,892,1.015,900,1.874,902,1.126,913,1.126,938,1.015,939,1.015,941,2.406,943,1.126,951,1.874,953,1.874,957,2.406,958,1.874,959,1.276,960,1.276,961,4.226,962,3.527,963,2.726,964,2.123,965,2.123,967,1.276,968,1.276,971,3.527,972,3.527,973,3.177,974,2.726,975,3.807,979,3.177,980,1.276,983,1.276,993,2.123,994,2.123,995,1.276,996,1.276,1030,2.726,1067,3.972,1068,1.126,1074,1.126,1075,1.126,1076,1.126,1098,2.123,1099,4.996,1100,3.211,1101,3.211,1102,3.211,1103,3.211,1104,2.501,1105,2.123,1106,3.743,1107,2.501,1108,2.501,1109,2.501,1110,3.743,1111,2.501,1112,2.501,1113,1.503,1114,2.123,1115,1.503,1116,1.503,1117,2.501,1118,3.743,1119,1.503,1120,1.503,1121,2.501,1122,2.501,1123,1.503,1124,2.501,1125,2.501,1126,1.503,1127,1.503,1128,1.503,1129,1.276,1130,1.503,1131,1.503,1132,1.503,1133,1.503,1134,1.503,1135,3.211,1136,1.503,1137,3.211,1138,3.211,1139,2.501,1140,1.503,1141,1.503,1142,3.743,1143,2.501,1144,2.501,1145,1.503,1146,1.503,1147,1.503,1148,1.276,1149,1.503,1150,1.503,1151,1.503,1152,1.503,1153,1.503,1154,1.503,1155,1.503,1156,1.503,1157,1.503,1158,1.503,1159,1.503,1160,1.503,1161,1.503,1162,1.503,1163,2.501,1164,2.501,1165,2.501,1166,2.501,1167,2.501,1168,3.211,1169,1.503,1170,3.743,1171,3.211,1172,3.211,1173,3.211,1174,4.979,1175,2.501,1176,2.501,1177,3.743,1178,2.501,1179,1.503,1180,2.501,1181,2.501,1182,3.743,1183,2.501,1184,1.503,1185,2.501,1186,2.501,1187,2.501,1188,2.501,1189,1.503,1190,1.503,1191,1.503,1192,3.743,1193,1.503,1194,1.503,1195,2.501,1196,1.503,1197,1.503,1198,1.503,1199,1.503,1200,1.503,1201,1.503,1202,1.503,1203,1.503,1204,1.503,1205,1.503,1206,3.211,1207,1.503,1208,2.501,1209,1.503,1210,1.503,1211,1.503,1212,1.503,1213,1.503,1214,1.503,1215,1.503,1216,1.503]],["title/injectables/TaskService.html",[106,0.729,298,1.802]],["body/injectables/TaskService.html",[3,0.197,4,0.168,8,0.168,12,1.325,19,0.287,20,0.619,23,0.661,26,0.827,28,1.016,29,0.025,30,0.564,31,0.477,32,0.944,33,0.954,34,0.706,35,0.617,39,0.634,40,0.352,44,0.197,45,0.386,46,1.413,68,1.238,91,0.016,92,0.016,97,0.722,104,0.916,106,1.02,108,1.413,113,1.772,116,1.509,118,1.509,119,1.391,120,3.356,129,2.52,130,3.06,131,4.085,140,3.542,146,1.863,152,1.244,159,1.233,164,1.565,199,2.014,218,2.728,230,2.401,239,1.234,298,2.52,355,2.342,455,2.401,519,2.724,892,2.401,1006,3.02,1008,3.02,1010,4.086,1012,2.666,1013,4.377,1014,3.606,1015,2.666,1016,2.666,1017,2.666,1067,4.415,1105,4.085,1114,4.085,1217,4.813,1218,4.813,1219,4.813,1220,4.813,1221,4.813,1222,4.813,1223,3.558,1224,3.558,1225,4.813,1226,4.813,1227,4.813,1228,3.558,1229,3.558,1230,3.558,1231,3.558]],["title/interfaces/Tasks.html",[218,1.459,649,1.203]],["body/interfaces/Tasks.html",[3,0.254,4,0.218,8,0.218,19,0.371,20,0.731,29,0.024,30,0.578,31,0.492,33,0.993,44,0.254,91,0.019,92,0.019,164,1.652,174,3.135,218,2.41,288,3.23,355,3.135,478,4.162,564,3.965,613,4.347,649,1.609,650,2.409,825,3.646,1074,4.621,1075,4.621,1076,4.621,1232,3.905]],["title/components/ToasterComponent.html",[0,0.163,78,0.778]],["body/components/ToasterComponent.html",[0,0.291,1,1.597,2,1.179,3,0.202,4,0.173,5,0.996,6,0.996,7,0.996,8,0.173,10,0.879,11,1.923,13,1.336,15,1.336,17,1.608,19,0.294,20,0.629,23,0.677,26,0.71,28,0.589,29,0.024,30,0.495,31,0.352,32,0.548,39,0.668,40,0.361,44,0.202,45,0.396,47,0.996,48,1.336,49,1.336,50,0.996,51,1.611,52,0.996,53,0.996,54,0.879,55,0.996,56,0.879,57,1.336,58,0.879,59,0.996,60,1.336,61,0.879,62,0.996,63,0.879,64,0.996,65,0.773,66,0.996,67,0.879,68,1.037,69,1.507,70,0.879,71,1.336,72,0.825,73,0.936,74,0.996,75,0.879,76,1.255,77,0.879,78,1.334,79,1.767,80,0.879,81,0.936,82,0.879,83,0.996,84,0.996,85,0.879,86,1.037,87,0.879,88,0.936,89,0.936,90,0.996,91,0.017,92,0.017,97,0.735,104,0.548,115,2.076,119,1.258,142,0.996,145,1.127,148,1.775,208,2.503,243,3.097,244,3.097,246,4.422,389,2.462,393,3.012,394,1.931,398,3.667,399,3.667,429,1.775,1054,4.138,1064,3.097,1069,4.138,1083,3.097,1233,5.01,1234,5.902,1235,3.648,1236,3.648,1237,3.648,1238,3.648,1239,3.648,1240,3.648,1241,3.648,1242,3.648,1243,4.895,1244,4.895]],["title/components/TopHeader.html",[0,0.163,80,0.829]],["body/components/TopHeader.html",[0,0.248,1,1.581,2,1.098,3,0.182,4,0.155,5,0.897,6,0.897,7,0.897,8,0.155,10,0.792,11,1.902,13,1.244,15,1.244,17,1.497,19,0.265,23,0.846,26,0.673,28,0.531,29,0.025,30,0.469,31,0.237,32,0.493,39,0.696,40,0.325,43,1.407,44,0.182,45,0.356,47,0.897,48,1.244,49,1.244,50,0.897,51,1.542,52,0.897,53,0.897,54,0.792,55,0.897,56,1.26,57,1.244,58,0.792,59,0.897,60,1.244,61,0.792,62,0.897,63,0.792,64,0.897,65,1.198,66,0.897,67,0.792,68,1.198,69,1.428,70,0.792,71,1.244,72,0.743,73,0.843,74,0.897,75,0.792,76,1.169,77,0.792,78,0.743,79,0.897,80,1.361,81,1.615,82,0.792,83,0.897,84,0.897,85,1.098,86,0.966,87,0.792,88,0.843,89,0.843,90,0.897,91,0.015,92,0.015,97,0.684,99,2.462,100,2.989,104,0.684,110,1.519,114,1.394,119,1.219,125,5.45,142,1.244,145,1.015,159,1.03,164,0.843,173,2.789,185,2.462,188,2.069,208,1.394,228,2.462,394,1.83,396,1.719,450,2.789,557,1.86,587,3.869,588,3.869,630,4.234,720,2.789,738,2.789,741,2.789,778,1.721,782,1.721,808,1.721,878,3.813,880,3.531,938,2.218,939,2.218,1245,4.796,1246,2.789,1247,5.651,1248,3.286,1249,3.286,1250,3.286,1251,3.286,1252,3.286,1253,2.218,1254,3.286,1255,3.286,1256,4.558,1257,2.789,1258,2.462,1259,4.558,1260,4.558,1261,4.558,1262,4.558,1263,4.558]],["title/components/UnAuthorize.html",[0,0.163,82,0.829]],["body/components/UnAuthorize.html",[0,0.274,1,1.611,2,1.254,3,0.222,4,0.19,5,1.093,6,1.093,7,1.093,8,0.19,10,0.965,11,1.941,13,1.421,15,1.421,17,1.711,29,0.024,30,0.467,39,0.565,40,0.396,41,1.591,44,0.222,45,0.435,47,1.093,48,1.421,49,1.421,50,1.093,51,1.671,52,1.093,53,1.093,54,0.965,55,1.093,56,0.965,57,1.421,58,0.965,59,1.093,60,1.421,61,0.965,62,1.093,63,0.965,64,1.093,65,0.849,66,1.093,67,0.965,68,1.104,69,1.578,70,0.965,71,1.421,72,0.906,73,1.027,74,1.093,75,0.965,76,1.335,77,0.965,78,0.906,79,1.093,80,0.965,81,1.027,82,1.475,83,1.808,84,1.093,85,0.965,86,1.104,87,0.965,88,1.027,89,1.027,90,1.093,91,0.018,92,0.018,616,4.334,708,4.419,709,3.901,713,4.419,1264,3.401,1265,3.401,1266,3.401,1267,5.207,1268,5.207,1269,5.207,1270,5.207,1271,6.124,1272,5.207,1273,4.006,1274,5.207,1275,5.207,1276,4.006]],["title/components/UserForm.html",[0,0.163,85,0.829]],["body/components/UserForm.html",[0,0.203,1,1.514,2,0.854,3,0.129,4,0.11,5,0.636,6,0.636,7,0.636,8,0.11,10,0.561,11,1.819,13,0.968,15,0.968,17,1.166,19,0.188,20,0.456,23,0.659,26,0.784,28,0.376,29,0.025,30,0.385,31,0.408,32,0.35,33,0.494,34,1.026,35,0.896,39,0.672,40,0.23,43,1.096,44,0.129,45,0.253,47,0.636,48,0.968,49,0.968,50,0.636,51,1.311,52,0.636,53,0.636,54,0.561,55,0.636,56,0.561,57,0.968,58,0.561,59,0.636,60,0.968,61,0.561,62,0.636,63,0.561,64,0.636,65,0.494,66,0.636,67,0.561,68,1.018,69,1.172,70,0.561,71,0.968,72,0.527,73,0.597,74,0.636,75,0.561,76,0.91,77,0.561,78,0.527,79,0.636,80,0.561,81,0.597,82,0.561,83,0.636,84,0.636,85,1.157,86,1.348,87,0.561,88,0.597,89,0.597,90,0.636,91,0.012,92,0.012,97,0.532,104,0.532,105,1.61,110,1.644,115,1.822,119,1.352,137,2.644,140,1.858,142,1.172,145,0.719,148,1.134,152,0.815,153,1.578,154,1.22,159,0.802,164,0.597,166,2.644,172,1.978,180,1.22,181,1.22,188,1.86,208,2.192,239,1.325,280,1.726,283,1.925,351,3.205,394,1.502,396,1.412,414,3.205,429,1.134,451,1.057,453,0.988,594,2.956,607,0.988,646,1.858,657,2.25,661,2.394,664,3.241,674,1.572,675,2.432,676,3.241,682,3.241,683,1.572,775,1.572,776,2.658,777,3.219,778,2.707,779,2.658,780,2.658,781,3.647,782,2.25,788,1.746,789,3.599,790,1.746,796,1.978,797,2.658,799,1.978,800,3.219,802,1.978,803,1.978,804,2.899,805,1.978,806,1.978,807,1.746,808,1.22,810,1.746,811,3.011,815,1.746,828,3.675,830,1.978,831,1.978,832,1.746,835,1.746,837,1.746,841,1.746,842,1.746,843,1.572,853,2.008,859,2.658,1078,3.011,1097,1.978,1253,4.183,1258,3.873,1277,4.183,1278,4.296,1279,4.296,1280,4.077,1281,3.488,1282,2.33,1283,2.33,1284,3.548,1285,3.548,1286,3.548,1287,2.33,1288,4.803,1289,4.296,1290,3.548,1291,2.33,1292,2.33,1293,2.33,1294,2.33,1295,2.33,1296,2.33,1297,2.33,1298,2.33,1299,2.33,1300,2.33,1301,2.33,1302,2.33,1303,1.746,1304,2.33,1305,2.33,1306,2.33,1307,2.33,1308,2.33,1309,1.978,1310,2.33,1311,2.33,1312,3.548,1313,3.548,1314,2.33]],["title/components/UserList.html",[0,0.163,87,0.829]],["body/components/UserList.html",[0,0.191,1,1.491,2,0.789,3,0.116,4,0.099,5,0.574,6,0.574,7,0.574,8,0.099,10,0.506,11,1.789,13,0.894,15,0.894,17,1.077,19,0.17,20,0.421,23,0.608,26,0.809,28,0.65,29,0.025,30,0.52,31,0.406,32,0.604,33,0.785,34,0.903,35,0.698,39,0.69,40,0.208,43,1.012,44,0.116,45,0.228,47,0.574,48,0.894,49,0.894,50,0.574,51,1.241,52,0.574,53,0.574,54,0.506,55,0.574,56,1.096,57,0.894,58,0.506,59,0.574,60,0.894,61,0.506,62,0.574,63,0.506,64,0.574,65,0.446,66,0.574,67,0.506,68,0.695,69,1.099,70,0.506,71,0.894,72,0.475,73,0.539,74,0.574,75,0.506,76,0.84,77,0.506,78,0.475,79,0.574,80,0.506,81,0.539,82,0.506,83,0.574,84,0.574,85,0.789,86,1.257,87,1.096,88,1.033,89,0.539,90,0.574,91,0.011,92,0.011,97,0.492,104,0.819,110,1.806,119,1.262,137,3.035,142,1.54,145,0.649,147,2.8,152,0.735,153,1.854,154,1.101,159,0.741,164,1.487,166,3.035,180,1.101,181,1.101,188,1.793,191,3.408,208,0.891,231,1.575,239,0.84,280,1.023,283,1.694,351,1.19,394,1.409,396,1.323,410,3.408,411,2.575,414,3.088,415,2.718,429,1.595,444,1.418,451,0.954,453,0.891,461,2.718,464,2.212,521,1.418,557,1.19,559,1.023,560,2.479,586,2.479,607,0.891,611,3.408,646,1.101,657,2.109,675,2.791,778,1.101,782,1.101,804,1.418,808,1.101,828,2.212,832,1.575,844,2.455,852,2.212,853,1.855,862,1.418,865,2.455,866,2.455,867,3.419,868,3.419,869,3.419,872,3.861,873,2.782,874,2.455,876,3.861,877,1.575,878,3.07,880,2.212,882,1.784,890,2.782,892,1.418,896,1.784,900,3.408,901,1.784,902,1.575,903,3.419,904,2.782,907,3.419,908,2.782,910,1.784,911,1.784,912,1.784,913,1.575,914,1.784,919,1.784,920,2.782,923,1.784,924,1.784,925,1.784,926,1.784,927,1.784,928,2.782,929,2.782,930,1.784,931,1.784,932,1.784,934,1.784,938,1.418,939,1.418,941,2.455,943,1.575,946,2.782,951,2.455,952,2.782,953,2.455,957,2.455,1129,1.784,1253,1.418,1257,1.784,1277,4.291,1303,2.455,1309,2.782,1315,5.397,1316,4.028,1317,3.277,1318,2.102,1319,2.102,1320,2.102,1321,3.277,1322,2.102,1323,2.102,1324,3.277,1325,2.102,1326,4.028,1327,2.102,1328,2.102,1329,2.102,1330,2.102,1331,3.277,1332,4.028,1333,2.102,1334,2.102,1335,2.102,1336,2.102,1337,2.102,1338,3.277,1339,3.277,1340,3.277,1341,3.277,1342,3.277,1343,3.277]],["title/pipes/UserNamePipe.html",[559,1.675,864,2.322]],["body/pipes/UserNamePipe.html",[3,0.265,4,0.227,8,0.227,10,1.156,26,0.617,28,0.775,29,0.024,30,0.601,31,0.345,32,0.72,33,0.811,35,1.011,39,0.633,40,0.475,44,0.265,45,0.521,86,1.017,91,0.02,92,0.02,97,0.72,104,0.72,109,2.716,113,1.693,153,2.265,154,2.513,159,1.085,559,2.838,561,3.239,563,3.596,565,3.596,566,4.951,568,4.951,675,3.301,858,4.074,864,3.936,1344,4.951,1345,4.799,1346,4.799,1347,4.799,1348,4.799,1349,4.799]],["title/injectables/UserService.html",[106,0.729,414,1.948]],["body/injectables/UserService.html",[3,0.202,4,0.173,8,0.173,12,1.363,19,0.295,20,0.63,23,0.679,26,0.833,28,0.995,29,0.025,30,0.553,31,0.474,32,0.925,33,0.937,34,0.726,35,0.634,39,0.641,40,0.362,44,0.202,45,0.397,46,1.453,86,1.253,91,0.017,92,0.017,97,0.736,104,0.925,106,1.039,108,1.453,113,1.789,116,1.552,118,1.552,119,1.396,120,3.404,129,2.568,130,3.095,138,2.742,140,3.559,143,3.674,146,1.916,152,1.28,153,2.129,154,1.916,159,1.109,164,1.58,191,4.428,199,2.071,202,2.47,239,1.258,414,2.776,519,2.776,763,4.163,765,3.106,1010,4.144,1011,3.106,1012,2.742,1013,4.428,1014,3.674,1015,2.742,1016,2.742,1017,2.742,1277,4.443,1280,4.163,1350,4.904,1351,4.904,1352,4.904,1353,4.904,1354,4.904,1355,3.659,1356,4.904,1357,4.904,1358,3.659]],["title/interfaces/Users.html",[153,1.131,649,1.203]],["body/interfaces/Users.html",[3,0.27,4,0.231,8,0.231,19,0.393,20,0.757,29,0.024,31,0.492,33,0.999,44,0.27,91,0.02,92,0.02,137,4.044,153,1.935,164,1.685,166,4.044,283,2.357,649,1.705,650,2.553,675,3.719,804,4.435,1303,4.923,1359,4.139]],["title/coverage.html",[1360,3.993]],["body/coverage.html",[0,0.326,1,1.011,8,0.151,9,2.717,25,2.16,29,0.024,30,0.287,31,0.23,54,0.771,56,0.771,58,0.771,61,0.771,63,0.771,65,0.678,67,0.771,70,0.771,72,0.723,75,0.771,77,0.771,78,0.723,80,0.771,82,0.771,85,0.771,87,0.771,91,0.015,92,0.015,93,3.352,94,2.398,96,2.717,100,1.557,106,1.374,117,2.717,118,2.748,153,1.051,188,1.051,189,2.717,215,1.271,218,1.357,239,0.821,246,2.398,290,2.717,297,1.676,298,1.676,299,1.811,317,3.516,387,2.717,388,2.717,389,3.481,396,1.051,404,2.16,414,1.811,515,2.16,559,2.177,560,1.97,562,2.717,563,3.352,585,2.717,614,2.717,615,2.717,630,2.398,640,2.398,641,2.717,649,2.13,651,2.717,652,2.398,653,2.717,655,2.717,656,2.717,701,2.717,702,2.717,703,2.717,716,2.717,721,1.97,760,2.717,772,2.717,773,3.481,774,2.398,775,3.481,861,2.717,862,3.481,864,2.16,966,2.717,1018,2.717,1019,2.398,1020,2.717,1049,2.717,1050,2.717,1051,2.717,1067,3.481,1068,2.398,1099,2.717,1232,2.717,1233,2.717,1245,2.717,1246,2.717,1253,2.16,1264,2.717,1265,2.717,1266,2.717,1277,3.481,1281,2.16,1315,2.717,1344,2.717,1359,2.717,1360,2.717,1361,3.2,1362,3.2,1363,3.2,1364,3.798,1365,6.635,1366,2.717,1367,6.792,1368,2.717,1369,2.717,1370,2.717,1371,2.717,1372,2.717,1373,5.878,1374,6.379,1375,4.474,1376,5.159,1377,5.159,1378,2.717,1379,2.717,1380,2.717,1381,2.717,1382,2.717,1383,3.2,1384,3.2,1385,3.2,1386,3.2,1387,3.2,1388,3.2,1389,3.2,1390,3.2,1391,4.474,1392,3.2,1393,2.717,1394,2.717,1395,4.742,1396,2.717,1397,2.717,1398,2.717,1399,3.2,1400,3.2]],["title/dependencies.html",[1401,2.436,1402,3.515]],["body/dependencies.html",[29,0.024,40,0.499,41,2.004,91,0.02,92,0.02,145,1.558,152,1.765,447,4.283,448,4.283,449,4.283,607,2.14,1402,4.283,1403,6.963,1404,5.046,1405,5.046,1406,5.046,1407,6.012,1408,3.781,1409,4.504,1410,5.046,1411,4.283,1412,5.046,1413,4.283,1414,5.046,1415,5.046,1416,5.046,1417,5.046,1418,5.046,1419,5.046,1420,5.046,1421,5.046]],["title/index.html",[19,0.232,1422,2.87,1423,2.87]],["body/index.html",[0,0.282,2,1.031,4,0.202,29,0.018,34,1.078,36,4.703,68,1.265,88,1.097,89,1.097,91,0.018,92,0.018,239,1.097,364,3.632,366,4.611,505,2.888,561,2.888,709,3.206,856,3.206,958,3.206,1408,3.206,1409,4.471,1411,3.632,1424,4.279,1425,4.279,1426,5.432,1427,5.499,1428,3.632,1429,5.432,1430,4.279,1431,6.478,1432,6.62,1433,6.62,1434,4.279,1435,5.432,1436,4.279,1437,4.279,1438,4.279,1439,5.432,1440,4.279,1441,4.279,1442,4.279,1443,4.279,1444,4.279,1445,5.432,1446,5.432,1447,4.279,1448,4.279,1449,4.279,1450,5.967,1451,4.279,1452,4.279,1453,4.279,1454,4.279,1455,4.279,1456,5.065,1457,4.279,1458,4.279,1459,4.279,1460,4.279,1461,4.279,1462,4.279,1463,4.279,1464,4.279,1465,4.279,1466,4.279,1467,5.432,1468,5.967,1469,4.279,1470,4.279,1471,4.279,1472,4.279,1473,4.279,1474,5.967,1475,4.279,1476,6.62,1477,4.279,1478,4.279,1479,4.279,1480,4.279,1481,4.279,1482,4.279,1483,4.279,1484,4.279,1485,4.279,1486,4.279,1487,4.279,1488,4.279,1489,4.279,1490,4.279,1491,4.279,1492,4.279,1493,4.279]],["title/modules.html",[1494,3.993]],["body/modules.html",[29,0.022,91,0.022,92,0.022,1494,4.775]],["title/overview.html",[505,3.175]],["body/overview.html",[2,1.325,29,0.021,91,0.021,92,0.021,95,4.12,116,2.332,505,3.711,561,3.711,650,2.88,1148,5.366,1495,5.5,1496,5.5,1497,5.5]],["title/properties.html",[20,0.532,1401,2.436]],["body/properties.html",[20,0.718,29,0.023,91,0.022,92,0.022,1428,4.743,1498,5.587]],["title/interfaces/userDialogData.html",[649,1.203,1281,2.322]],["body/interfaces/userDialogData.html",[3,0.29,4,0.248,8,0.248,19,0.424,20,0.791,29,0.024,31,0.443,33,0.908,44,0.29,91,0.021,92,0.021,105,2.962,164,1.727,649,1.837,650,2.75,1258,5.045,1281,4.154,1381,4.458]],["title/miscellaneous/variables.html",[1499,2.436,1500,3.515]],["body/miscellaneous/variables.html",[1,1.136,19,0.306,29,0.025,31,0.449,34,1.357,35,1.185,36,2.844,91,0.017,92,0.017,100,1.847,113,1.635,159,1.273,178,3.222,239,0.973,280,1.847,324,2.844,396,1.651,666,3.222,776,3.765,777,2.844,1052,3.222,1053,3.222,1054,2.844,1069,2.844,1070,3.222,1364,3.222,1366,4.782,1368,4.782,1369,3.222,1370,4.265,1371,3.222,1372,4.265,1378,3.222,1379,4.265,1380,4.265,1382,3.222,1393,3.222,1394,4.265,1395,3.222,1396,4.265,1397,4.265,1398,4.265,1408,2.844,1409,2.844,1413,3.222,1427,3.222,1456,3.222,1499,3.222,1500,3.222,1501,5.996,1502,3.795,1503,3.795,1504,5.025,1505,3.795,1506,3.795,1507,3.795,1508,3.795,1509,3.795,1510,3.795,1511,3.795,1512,3.795,1513,3.795,1514,3.795,1515,3.795,1516,3.795,1517,3.795,1518,3.795,1519,5.025,1520,3.795,1521,3.795,1522,3.795,1523,3.795,1524,3.795,1525,3.795,1526,3.795,1527,3.795,1528,3.795,1529,3.795,1530,3.795,1531,3.795,1532,3.795,1533,5.633,1534,3.795,1535,3.795,1536,3.795,1537,3.795,1538,3.795,1539,3.795,1540,3.795,1541,3.795,1542,3.795,1543,3.795,1544,3.795,1545,3.795,1546,3.795,1547,3.795,1548,3.795,1549,3.795,1550,3.795,1551,3.795,1552,3.795,1553,3.795,1554,3.795,1555,3.795,1556,3.795,1557,3.795,1558,3.795,1559,3.795,1560,3.795,1561,3.795,1562,3.795]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/userDialogData.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":317,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1498,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1173,"title":{},"body":{"components/TaskListComponent.html":{}}}],["0.2",{"_index":1216,"title":{},"body":{"components/TaskListComponent.html":{}}}],["0.2s",{"_index":984,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["0.95",{"_index":1209,"title":{},"body":{"components/TaskListComponent.html":{}}}],["0/1",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":973,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["1",{"_index":316,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/TaskListComponent.html":{}}}],["1/1",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1203,"title":{},"body":{"components/TaskListComponent.html":{}}}],["100",{"_index":515,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["1000",{"_index":579,"title":{},"body":{"pipes/DuedatePipe.html":{},"components/Notification.html":{},"components/TaskListComponent.html":{}}}],["100px",{"_index":1189,"title":{},"body":{"components/TaskListComponent.html":{}}}],["10px",{"_index":1182,"title":{},"body":{"components/TaskListComponent.html":{}}}],["12px",{"_index":549,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskListComponent.html":{}}}],["14px",{"_index":540,"title":{},"body":{"components/DashboardComponent.html":{}}}],["16px",{"_index":535,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["17",{"_index":1495,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":547,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1c1a1a",{"_index":1186,"title":{},"body":{"components/TaskListComponent.html":{}}}],["1fr",{"_index":534,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1px",{"_index":974,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["2",{"_index":1148,"title":{},"body":{"components/TaskListComponent.html":{},"overview.html":{}}}],["2.1.0",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1202,"title":{},"body":{"components/TaskListComponent.html":{}}}],["20.0.0",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["20.0.1",{"_index":1411,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["20.0.3",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["20px",{"_index":524,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["24",{"_index":581,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["24px",{"_index":526,"title":{},"body":{"components/DashboardComponent.html":{}}}],["250ms",{"_index":1213,"title":{},"body":{"components/TaskListComponent.html":{}}}],["25px",{"_index":1197,"title":{},"body":{"components/TaskListComponent.html":{}}}],["27px",{"_index":1200,"title":{},"body":{"components/TaskListComponent.html":{}}}],["2a2929",{"_index":992,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["2e2eec",{"_index":1204,"title":{},"body":{"components/TaskListComponent.html":{}}}],["2px",{"_index":975,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["3",{"_index":1149,"title":{},"body":{"components/TaskListComponent.html":{}}}],["30).pipe",{"_index":748,"title":{},"body":{"components/Notification.html":{}}}],["30).pipe(map",{"_index":745,"title":{},"body":{"components/Notification.html":{}}}],["3000",{"_index":274,"title":{},"body":{"injectables/CommonService.html":{}}}],["3000000",{"_index":281,"title":{},"body":{"injectables/CommonService.html":{}}}],["300px",{"_index":554,"title":{},"body":{"components/DashboardComponent.html":{}}}],["30px",{"_index":1178,"title":{},"body":{"components/TaskListComponent.html":{}}}],["32a864",{"_index":484,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3432a8",{"_index":486,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3:21",{"_index":379,"title":{},"body":{"injectables/CronService.html":{}}}],["3:46",{"_index":375,"title":{},"body":{"injectables/CronService.html":{}}}],["4.5.0",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":938,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserList.html":{}}}],["401",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":1270,"title":{},"body":{"components/UnAuthorize.html":{}}}],["404",{"_index":707,"title":{},"body":{"components/NotFound.html":{}}}],["424242",{"_index":550,"title":{},"body":{"components/DashboardComponent.html":{}}}],["42px",{"_index":1185,"title":{},"body":{"components/TaskListComponent.html":{}}}],["46",{"_index":374,"title":{},"body":{"injectables/CronService.html":{}}}],["4b4bbb",{"_index":995,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["4px",{"_index":960,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["5.1.0",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["514f4f",{"_index":991,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["5c5757",{"_index":1188,"title":{},"body":{"components/TaskListComponent.html":{}}}],["5px",{"_index":1174,"title":{},"body":{"components/TaskListComponent.html":{}}}],["6",{"_index":1497,"title":{},"body":{"overview.html":{}}}],["60",{"_index":580,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["600",{"_index":548,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["600px",{"_index":969,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["66bb6a",{"_index":493,"title":{},"body":{"components/DashboardComponent.html":{}}}],["6px",{"_index":981,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["7.8.0",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":510,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["777",{"_index":542,"title":{},"body":{"components/DashboardComponent.html":{}}}],["7px",{"_index":1169,"title":{},"body":{"components/TaskListComponent.html":{}}}],["8.0.0",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["800px)']).subscribe((screensize",{"_index":633,"title":{},"body":{"components/HomeComponent.html":{}}}],["888",{"_index":1194,"title":{},"body":{"components/TaskListComponent.html":{}}}],["8ba832",{"_index":485,"title":{},"body":{"components/DashboardComponent.html":{}}}],["8px",{"_index":546,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["9",{"_index":1496,"title":{},"body":{"overview.html":{}}}],["9px",{"_index":1171,"title":{},"body":{"components/TaskListComponent.html":{}}}],["acc",{"_index":500,"title":{},"body":{"components/DashboardComponent.html":{}}}],["acc[key",{"_index":499,"title":{},"body":{"components/DashboardComponent.html":{}}}],["access",{"_index":1271,"title":{},"body":{"components/UnAuthorize.html":{}}}],["account_circle",{"_index":1260,"title":{},"body":{"components/TopHeader.html":{}}}],["action",{"_index":221,"title":{},"body":{"injectables/CommonService.html":{}}}],["actions",{"_index":900,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["activatedroute",{"_index":1110,"title":{},"body":{"components/TaskListComponent.html":{}}}],["activatedroutesnapshot",{"_index":1026,"title":{},"body":{"guards/RoleGuard.html":{}}}],["active",{"_index":932,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["actual_component",{"_index":90,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["add",{"_index":594,"title":{},"body":{"components/Header.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{}}}],["add'}}{{form.value.name",{"_index":854,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["add\\'}}{{form.value.name",{"_index":860,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["added",{"_index":1309,"title":{},"body":{"components/UserForm.html":{},"components/UserList.html":{}}}],["additional",{"_index":1485,"title":{},"body":{"index.html":{}}}],["addnew",{"_index":870,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["addproject",{"_index":997,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addproject(project",{"_index":1001,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addtasks",{"_index":1217,"title":{},"body":{"injectables/TaskService.html":{}}}],["addtasks(project",{"_index":1221,"title":{},"body":{"injectables/TaskService.html":{}}}],["adduser",{"_index":1350,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(user",{"_index":1353,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":1284,"title":{},"body":{"components/UserForm.html":{}}}],["again",{"_index":225,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/ProjectForm.html":{}}}],["alert('something",{"_index":944,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["alice",{"_index":1079,"title":{},"body":{"components/TaskForm.html":{}}}],["align",{"_index":520,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["already",{"_index":377,"title":{},"body":{"injectables/CronService.html":{}}}],["analytics",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular",{"_index":36,"title":{},"body":{"components/App.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk/drag",{"_index":1132,"title":{},"body":{"components/TaskListComponent.html":{}}}],["angular/cdk/layout",{"_index":631,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular/common",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":607,"title":{},"body":{"components/Header.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1083,"title":{},"body":{"components/TaskForm.html":{},"components/ToasterComponent.html":{}}}],["angular/material/core",{"_index":806,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["angular/material/dialog",{"_index":808,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["angular/material/form",{"_index":1062,"title":{},"body":{"components/SearchInput.html":{}}}],["angular/material/icon",{"_index":1064,"title":{},"body":{"components/SearchInput.html":{},"components/ToasterComponent.html":{}}}],["angular/material/input",{"_index":1065,"title":{},"body":{"components/SearchInput.html":{}}}],["angular/material/menu",{"_index":1084,"title":{},"body":{"components/TaskForm.html":{}}}],["angular/material/paginator",{"_index":911,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["angular/material/sidenav",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular/material/snack",{"_index":243,"title":{},"body":{"injectables/CommonService.html":{},"components/ToasterComponent.html":{}}}],["angular/material/sort",{"_index":912,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["angular/material/table",{"_index":910,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["angular/platform",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":41,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/ProjectListComponent.html":{},"guards/RoleGuard.html":{},"components/TaskListComponent.html":{},"components/UnAuthorize.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":1396,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularassesment",{"_index":1424,"title":{},"body":{"index.html":{}}}],["angularnodeappengine",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animating",{"_index":1212,"title":{},"body":{"components/TaskListComponent.html":{}}}],["apiurl",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.html",{"_index":16,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":1370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1439,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1014,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["applicationconfig",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(expectedroles",{"_index":1043,"title":{},"body":{"guards/RoleGuard.html":{}}}],["artifacts",{"_index":1460,"title":{},"body":{"index.html":{}}}],["asc",{"_index":930,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["ascending",{"_index":927,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["assesment",{"_index":37,"title":{},"body":{"components/App.html":{}}}],["assigned",{"_index":850,"title":{},"body":{"components/ProjectForm.html":{}}}],["assignedto",{"_index":822,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"interfaces/Projects.html":{}}}],["assignment",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{},"components/ProjectForm.html":{}}}],["assignto",{"_index":899,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["async",{"_index":291,"title":{},"body":{"injectables/CronService.html":{},"injectables/HttpService.html":{}}}],["auth",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["auth/authservice/auth",{"_index":1252,"title":{},"body":{"components/TopHeader.html":{}}}],["authguard",{"_index":94,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorize",{"_index":1267,"title":{},"body":{"components/UnAuthorize.html":{}}}],["authorize'},{'name",{"_index":84,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["authorize.html",{"_index":1268,"title":{},"body":{"components/UnAuthorize.html":{}}}],["authorize.scss",{"_index":1269,"title":{},"body":{"components/UnAuthorize.html":{}}}],["authorize.ts",{"_index":1266,"title":{},"body":{"components/UnAuthorize.html":{},"coverage.html":{}}}],["authorize/un",{"_index":1265,"title":{},"body":{"components/UnAuthorize.html":{},"coverage.html":{}}}],["authreq",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":100,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"guards/RoleGuard.html":{},"components/TopHeader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice.gettoken",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.logout",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice/auth",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"guards/RoleGuard.html":{}}}],["authtoken",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":513,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["automatically",{"_index":1440,"title":{},"body":{"index.html":{}}}],["available",{"_index":958,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"index.html":{}}}],["await",{"_index":326,"title":{},"body":{"injectables/CronService.html":{},"injectables/HttpService.html":{}}}],["b",{"_index":1144,"title":{},"body":{"components/TaskListComponent.html":{}}}],["back",{"_index":714,"title":{},"body":{"components/NotFound.html":{}}}],["background",{"_index":270,"title":{},"body":{"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["backgroundcolor",{"_index":483,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bar",{"_index":244,"title":{},"body":{"injectables/CommonService.html":{},"components/ToasterComponent.html":{}}}],["basechartdirective",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["baseurl",{"_index":642,"title":{},"body":{"injectables/HttpService.html":{},"injectables/NotificationService.html":{}}}],["bearer",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["behaviorsubject(null",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{}}}],["between",{"_index":965,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["bezier(0",{"_index":1215,"title":{},"body":{"components/TaskListComponent.html":{}}}],["block",{"_index":556,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bob",{"_index":1080,"title":{},"body":{"components/TaskForm.html":{}}}],["body",{"_index":1168,"title":{},"body":{"components/TaskListComponent.html":{}}}],["bold",{"_index":544,"title":{},"body":{"components/DashboardComponent.html":{}}}],["boolean",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"interfaces/Notifications.html":{},"guards/RoleGuard.html":{},"components/UserForm.html":{},"interfaces/userDialogData.html":{}}}],["bootstrap",{"_index":1394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":961,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["bottom",{"_index":959,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["box",{"_index":971,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["breakpointobserver",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["browser",{"_index":1408,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":1397,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["btn",{"_index":1183,"title":{},"body":{"components/TaskListComponent.html":{}}}],["build",{"_index":1456,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["builddashboard",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["buildthis",{"_index":1457,"title":{},"body":{"index.html":{}}}],["calc(100",{"_index":509,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["calc(50",{"_index":1177,"title":{},"body":{"components/TaskListComponent.html":{}}}],["canactivate",{"_index":98,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":1025,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivatechild",{"_index":1021,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivatechild(route",{"_index":1031,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canedit",{"_index":1258,"title":{},"body":{"components/TopHeader.html":{},"components/UserForm.html":{},"interfaces/userDialogData.html":{}}}],["canload",{"_index":1022,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canload(route",{"_index":1033,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canvas",{"_index":555,"title":{},"body":{"components/DashboardComponent.html":{}}}],["card",{"_index":536,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["case",{"_index":258,"title":{},"body":{"injectables/CommonService.html":{}}}],["catcherror",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["catcherror((err",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{}}}],["catcherror((error",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdd8ff",{"_index":1205,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cdk",{"_index":1206,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cdkdragdrop",{"_index":1118,"title":{},"body":{"components/TaskListComponent.html":{}}}],["cdr",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["center",{"_index":277,"title":{},"body":{"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["change",{"_index":1161,"title":{},"body":{"components/TaskListComponent.html":{}}}],["changedetection",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{}}}],["changedetectionstrategy",{"_index":443,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{}}}],["changedetectionstrategy.onpush",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{}}}],["changedetectorref",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["charlie",{"_index":1081,"title":{},"body":{"components/TaskForm.html":{}}}],["chars",{"_index":266,"title":{},"body":{"injectables/CommonService.html":{}}}],["chart",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chart.js",{"_index":447,"title":{},"body":{"components/DashboardComponent.html":{},"dependencies.html":{}}}],["chart.register(...registerables",{"_index":456,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartdataset",{"_index":445,"title":{},"body":{"components/DashboardComponent.html":{}}}],["chartoptions",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{}}}],["charts",{"_index":449,"title":{},"body":{"components/DashboardComponent.html":{},"dependencies.html":{}}}],["checkaccess",{"_index":1023,"title":{},"body":{"guards/RoleGuard.html":{}}}],["checkaccess(expectedroles",{"_index":1037,"title":{},"body":{"guards/RoleGuard.html":{}}}],["checkoverduetasks",{"_index":292,"title":{},"body":{"injectables/CronService.html":{}}}],["choose",{"_index":1481,"title":{},"body":{"index.html":{}}}],["class",{"_index":45,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1427,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":1313,"title":{},"body":{"components/UserForm.html":{}}}],["cloud",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1445,"title":{},"body":{"index.html":{}}}],["color",{"_index":541,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["column",{"_index":522,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["columns",{"_index":530,"title":{},"body":{"components/DashboardComponent.html":{}}}],["come",{"_index":1479,"title":{},"body":{"index.html":{}}}],["command",{"_index":1474,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["commonservice",{"_index":188,"title":{"injectables/CommonService.html":{}},"body":{"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["compare",{"_index":572,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["compile",{"_index":1458,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1452,"title":{},"body":{"index.html":{}}}],["completed",{"_index":954,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}},"body":{"components/App.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":60,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["component.html",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ToasterComponent.html":{}}}],["component.scss",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ToasterComponent.html":{}}}],["component.ts",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ToasterComponent.html":{},"coverage.html":{}}}],["component.ts:131",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:14",{"_index":1236,"title":{},"body":{"components/ToasterComponent.html":{}}}],["component.ts:143",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:15",{"_index":1239,"title":{},"body":{"components/ToasterComponent.html":{}}}],["component.ts:153",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:17",{"_index":1237,"title":{},"body":{"components/ToasterComponent.html":{}}}],["component.ts:24",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{}}}],["component.ts:26",{"_index":621,"title":{},"body":{"components/HomeComponent.html":{}}}],["component.ts:30",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{}}}],["component.ts:32",{"_index":442,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:33",{"_index":441,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:34",{"_index":439,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:35",{"_index":436,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:36",{"_index":435,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:38",{"_index":440,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:39",{"_index":438,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:41",{"_index":433,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:45",{"_index":434,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:47",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:57",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:78",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component.ts:82",{"_index":417,"title":{},"body":{"components/DashboardComponent.html":{}}}],["component/dashboard",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["component/home",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["component/login.component.ts",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["component/login.component.ts:25",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{}}}],["component/login.component.ts:26",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{}}}],["component/login.component.ts:27",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["component/login.component.ts:28",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{}}}],["component/login.component.ts:29",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{}}}],["component/login.component.ts:31",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{}}}],["component/login.component.ts:36",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{}}}],["component/login.component.ts:38",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{}}}],["component/toaster",{"_index":246,"title":{},"body":{"injectables/CommonService.html":{},"components/ToasterComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":52,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"index.html":{},"overview.html":{}}}],["components/notification/notification",{"_index":1251,"title":{},"body":{"components/TopHeader.html":{}}}],["config",{"_index":1366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.error('failed",{"_index":935,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["console.error(error",{"_index":832,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["console.log('skjsjsjj",{"_index":608,"title":{},"body":{"components/Header.html":{}}}],["console.log('something",{"_index":1336,"title":{},"body":{"components/UserList.html":{}}}],["console.log('status",{"_index":1160,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log(due.gettime",{"_index":337,"title":{},"body":{"injectables/CronService.html":{}}}],["console.log(err",{"_index":1162,"title":{},"body":{"components/TaskListComponent.html":{}}}],["console.log(result",{"_index":648,"title":{},"body":{"injectables/HttpService.html":{}}}],["console.log(task",{"_index":341,"title":{},"body":{"injectables/CronService.html":{}}}],["console.log(this.ismobile",{"_index":636,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.tasks",{"_index":330,"title":{},"body":{"injectables/CronService.html":{}}}],["const",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(mat_snack_bar_data",{"_index":1241,"title":{},"body":{"components/ToasterComponent.html":{}}}],["constructor(authservice",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"components/TopHeader.html":{}}}],["constructor(commonservice",{"_index":1058,"title":{},"body":{"components/SearchInput.html":{}}}],["constructor(cronservice",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["constructor(data",{"_index":1235,"title":{},"body":{"components/ToasterComponent.html":{}}}],["constructor(dialog",{"_index":877,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["constructor(fb",{"_index":788,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["constructor(http",{"_index":199,"title":{},"body":{"injectables/CommonService.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(observer",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(private",{"_index":46,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/CommonService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(projectservice",{"_index":296,"title":{},"body":{"injectables/CronService.html":{}}}],["constructor(router",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(userservice",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["container",{"_index":507,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["content",{"_index":519,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["core/components/notification/notification",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/models/dashboard.model",{"_index":452,"title":{},"body":{"components/DashboardComponent.html":{}}}],["core/models/dialogdata.model",{"_index":1287,"title":{},"body":{"components/UserForm.html":{}}}],["core/models/material.imports",{"_index":453,"title":{},"body":{"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["core/models/project.model",{"_index":454,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{}}}],["core/models/task.model",{"_index":455,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["core/models/user.model",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["core/services/commonservice/common",{"_index":451,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["core/services/cron",{"_index":42,"title":{},"body":{"components/App.html":{}}}],["core/services/notification",{"_index":809,"title":{},"body":{"components/ProjectForm.html":{}}}],["core/top",{"_index":629,"title":{},"body":{"components/HomeComponent.html":{}}}],["countbystatus",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{}}}],["countbystatus(items",{"_index":418,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coverage",{"_index":1360,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":350,"title":{},"body":{"injectables/CronService.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{}}}],["create(notification",{"_index":764,"title":{},"body":{"injectables/NotificationService.html":{}}}],["created",{"_index":844,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserList.html":{}}}],["createdat",{"_index":360,"title":{},"body":{"injectables/CronService.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{}}}],["createnoderequesthandler(app",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createnotification",{"_index":293,"title":{},"body":{"injectables/CronService.html":{}}}],["createnotification(task",{"_index":301,"title":{},"body":{"injectables/CronService.html":{}}}],["creationdate",{"_index":1303,"title":{},"body":{"components/UserForm.html":{},"components/UserList.html":{},"interfaces/Users.html":{}}}],["credentials",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["cronservice",{"_index":25,"title":{"injectables/CronService.html":{}},"body":{"components/App.html":{},"injectables/CronService.html":{},"coverage.html":{}}}],["cubic",{"_index":1214,"title":{},"body":{"components/TaskListComponent.html":{}}}],["currentdate",{"_index":781,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["currently",{"_index":1167,"title":{},"body":{"components/TaskListComponent.html":{}}}],["currentrole",{"_index":1040,"title":{},"body":{"guards/RoleGuard.html":{}}}],["currentuser",{"_index":720,"title":{},"body":{"components/Notification.html":{},"components/TopHeader.html":{}}}],["currentuser.id",{"_index":1256,"title":{},"body":{"components/TopHeader.html":{}}}],["cursor",{"_index":979,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["dashboard",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["dashboard'},{'name",{"_index":55,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["dashboardcomponent",{"_index":54,"title":{"components/DashboardComponent.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["data",{"_index":208,"title":{},"body":{"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["data.action",{"_index":1244,"title":{},"body":{"components/ToasterComponent.html":{}}}],["data.filter((item",{"_index":260,"title":{},"body":{"injectables/CommonService.html":{}}}],["data.message",{"_index":1243,"title":{},"body":{"components/ToasterComponent.html":{}}}],["datasets",{"_index":479,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datasource",{"_index":867,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["date",{"_index":283,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"interfaces/Projects.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{},"interfaces/Users.html":{}}}],["date().toisostring",{"_index":361,"title":{},"body":{"injectables/CronService.html":{},"components/ProjectForm.html":{}}}],["date(a.duedate).gettime",{"_index":1145,"title":{},"body":{"components/TaskListComponent.html":{}}}],["date(b.duedate).gettime",{"_index":1146,"title":{},"body":{"components/TaskListComponent.html":{}}}],["date(task.deadlinedate",{"_index":289,"title":{},"body":{"injectables/CommonService.html":{}}}],["date(task.duedate",{"_index":286,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{}}}],["date(value",{"_index":570,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["dates",{"_index":573,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["day",{"_index":325,"title":{},"body":{"injectables/CronService.html":{}}}],["day${diffdays",{"_index":582,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["dd",{"_index":951,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["deadline",{"_index":857,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{}}}],["deadlinedate",{"_index":820,"title":{},"body":{"components/ProjectForm.html":{},"interfaces/Projects.html":{}}}],["debounced",{"_index":250,"title":{},"body":{"injectables/CommonService.html":{}}}],["debouncetime",{"_index":241,"title":{},"body":{"injectables/CommonService.html":{}}}],["debouncetime(500",{"_index":233,"title":{},"body":{"injectables/CommonService.html":{}}}],["decorators",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/ToasterComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultdata",{"_index":1085,"title":{},"body":{"components/TaskForm.html":{}}}],["defaultdata.description",{"_index":1092,"title":{},"body":{"components/TaskForm.html":{}}}],["defaultdata.duedate",{"_index":1089,"title":{},"body":{"components/TaskForm.html":{}}}],["defaultdata.id",{"_index":1087,"title":{},"body":{"components/TaskForm.html":{}}}],["defaultdata.name",{"_index":1088,"title":{},"body":{"components/TaskForm.html":{}}}],["defaultdata.priority",{"_index":1091,"title":{},"body":{"components/TaskForm.html":{}}}],["defaultdata.status",{"_index":1090,"title":{},"body":{"components/TaskForm.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":382,"title":{},"body":{"injectables/CronService.html":{}}}],["delete",{"_index":957,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["deleted",{"_index":943,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["deleteproject",{"_index":998,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deleteproject(id",{"_index":1002,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deletetask",{"_index":1104,"title":{},"body":{"components/TaskListComponent.html":{}}}],["deletetask(id",{"_index":1112,"title":{},"body":{"components/TaskListComponent.html":{}}}],["deletetasks",{"_index":1218,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetasks(id",{"_index":1222,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteuser",{"_index":1351,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(id",{"_index":1354,"title":{},"body":{"injectables/UserService.html":{}}}],["denied",{"_index":1272,"title":{},"body":{"components/UnAuthorize.html":{}}}],["dependencies",{"_index":1402,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":825,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"interfaces/Projects.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"interfaces/Tasks.html":{}}}],["destroy",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["detailed",{"_index":1490,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developer",{"_index":1286,"title":{},"body":{"components/UserForm.html":{}}}],["development",{"_index":1429,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":880,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserList.html":{}}}],["dialogref",{"_index":782,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":939,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserList.html":{}}}],["diffdays",{"_index":577,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["diffms",{"_index":575,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["direction",{"_index":521,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["directive",{"_index":50,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["directives",{"_index":89,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"index.html":{}}}],["directory",{"_index":1462,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":1234,"title":{},"body":{"components/ToasterComponent.html":{}}}],["display",{"_index":516,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["displayedcolumns",{"_index":868,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["dist",{"_index":1461,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["don't",{"_index":1273,"title":{},"body":{"components/UnAuthorize.html":{}}}],["don\\'t",{"_index":1276,"title":{},"body":{"components/UnAuthorize.html":{}}}],["done",{"_index":288,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"interfaces/Tasks.html":{}}}],["drag",{"_index":1192,"title":{},"body":{"components/TaskListComponent.html":{}}}],["drag_handle",{"_index":1163,"title":{},"body":{"components/TaskListComponent.html":{}}}],["dragdropmodule",{"_index":1100,"title":{},"body":{"components/TaskListComponent.html":{}}}],["drop",{"_index":1133,"title":{},"body":{"components/TaskListComponent.html":{}}}],["due",{"_index":285,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/Header.html":{},"components/TaskListComponent.html":{}}}],["due.gettime",{"_index":339,"title":{},"body":{"injectables/CronService.html":{}}}],["due.sethours(0",{"_index":336,"title":{},"body":{"injectables/CronService.html":{}}}],["duedate",{"_index":564,"title":{},"body":{"pipes/DuedatePipe.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"interfaces/Tasks.html":{}}}],["duedatepipe",{"_index":560,"title":{"pipes/DuedatePipe.html":{}},"body":{"pipes/DuedatePipe.html":{},"components/ProjectListComponent.html":{},"components/UserList.html":{},"coverage.html":{}}}],["dummy",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["duration",{"_index":273,"title":{},"body":{"injectables/CommonService.html":{}}}],["during",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e0dada",{"_index":976,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["e2e",{"_index":1477,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1478,"title":{},"body":{"index.html":{}}}],["e34545",{"_index":996,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["e5e5e5",{"_index":1201,"title":{},"body":{"components/TaskListComponent.html":{}}}],["e7dddd",{"_index":1176,"title":{},"body":{"components/TaskListComponent.html":{}}}],["e9e3e3",{"_index":982,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["ease",{"_index":985,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["edit",{"_index":853,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["ef5350",{"_index":495,"title":{},"body":{"components/DashboardComponent.html":{}}}],["element",{"_index":49,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["email",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["emit",{"_index":367,"title":{},"body":{"injectables/CronService.html":{},"components/Header.html":{}}}],["emitadd",{"_index":589,"title":{},"body":{"components/Header.html":{}}}],["emitfilter",{"_index":595,"title":{},"body":{"components/Header.html":{}}}],["end",{"_index":1476,"title":{},"body":{"index.html":{}}}],["err",{"_index":852,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["error",{"_index":280,"title":{},"body":{"injectables/CommonService.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/UserForm.html":{},"components/UserList.html":{},"miscellaneous/variables.html":{}}}],["error.status",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errormsg",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{}}}],["escape",{"_index":264,"title":{},"body":{"injectables/CommonService.html":{}}}],["escapedterm",{"_index":254,"title":{},"body":{"injectables/CommonService.html":{}}}],["escaperegexp",{"_index":190,"title":{},"body":{"injectables/CommonService.html":{}}}],["escaperegexp(text",{"_index":203,"title":{},"body":{"injectables/CommonService.html":{}}}],["event",{"_index":1120,"title":{},"body":{"components/TaskListComponent.html":{}}}],["event.currentindex",{"_index":1154,"title":{},"body":{"components/TaskListComponent.html":{}}}],["event.previousindex",{"_index":1153,"title":{},"body":{"components/TaskListComponent.html":{}}}],["eventemitter",{"_index":600,"title":{},"body":{"components/Header.html":{}}}],["example",{"_index":1432,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1469,"title":{},"body":{"index.html":{}}}],["expectedroles",{"_index":1039,"title":{},"body":{"guards/RoleGuard.html":{}}}],["expectedroles.includes(currentrole",{"_index":1044,"title":{},"body":{"guards/RoleGuard.html":{}}}],["export",{"_index":44,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"interfaces/userDialogData.html":{}}}],["express",{"_index":1413,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["f5f7fa",{"_index":537,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fafafa",{"_index":963,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["failed",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{}}}],["failure",{"_index":279,"title":{},"body":{"injectables/CommonService.html":{}}}],["faketoken",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["false",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"guards/RoleGuard.html":{},"components/TopHeader.html":{}}}],["family",{"_index":988,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["fb",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["fefff9",{"_index":978,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["fetch",{"_index":936,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["fetchdata",{"_index":294,"title":{},"body":{"injectables/CronService.html":{}}}],["fetchprojects",{"_index":871,"title":{},"body":{"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{}}}],["fetchtasks",{"_index":1105,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["fetchtasks(projectid",{"_index":1114,"title":{},"body":{"components/TaskListComponent.html":{},"injectables/TaskService.html":{}}}],["fetchusers",{"_index":191,"title":{},"body":{"injectables/CommonService.html":{},"components/UserList.html":{},"injectables/UserService.html":{}}}],["ffa726",{"_index":494,"title":{},"body":{"components/DashboardComponent.html":{}}}],["field",{"_index":1063,"title":{},"body":{"components/SearchInput.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"interfaces/userDialogData.html":{}}}],["files",{"_index":1444,"title":{},"body":{"index.html":{}}}],["fill",{"_index":532,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filter",{"_index":591,"title":{},"body":{"components/Header.html":{}}}],["filterdata",{"_index":1106,"title":{},"body":{"components/TaskListComponent.html":{}}}],["filtered",{"_index":918,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["filtereddata",{"_index":1331,"title":{},"body":{"components/UserList.html":{}}}],["filteredsearchdata",{"_index":192,"title":{},"body":{"injectables/CommonService.html":{}}}],["filteredsearchdata(searchterm",{"_index":207,"title":{},"body":{"injectables/CommonService.html":{}}}],["filteredtasks",{"_index":1101,"title":{},"body":{"components/TaskListComponent.html":{}}}],["firebase",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":308,"title":{},"body":{"injectables/CronService.html":{}}}],["flex",{"_index":517,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["following",{"_index":1473,"title":{},"body":{"index.html":{}}}],["font",{"_index":538,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["forkjoin",{"_index":309,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{}}}],["form",{"_index":778,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["form'},{'name",{"_index":69,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["form.get('fullname')?.value",{"_index":1311,"title":{},"body":{"components/UserForm.html":{}}}],["form.get(\\'fullname\\')?.value",{"_index":1314,"title":{},"body":{"components/UserForm.html":{}}}],["form.html",{"_index":779,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["form.scss",{"_index":780,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["form.ts",{"_index":775,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{},"coverage.html":{}}}],["form.ts:108",{"_index":794,"title":{},"body":{"components/ProjectForm.html":{}}}],["form.ts:25",{"_index":801,"title":{},"body":{"components/ProjectForm.html":{}}}],["form.ts:26",{"_index":796,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["form.ts:27",{"_index":802,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["form.ts:28",{"_index":805,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["form.ts:29",{"_index":803,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["form.ts:30",{"_index":790,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["form.ts:31",{"_index":1078,"title":{},"body":{"components/TaskForm.html":{},"components/UserForm.html":{}}}],["form.ts:32",{"_index":1082,"title":{},"body":{"components/TaskForm.html":{}}}],["form.ts:33",{"_index":1077,"title":{},"body":{"components/TaskForm.html":{}}}],["form.ts:34",{"_index":798,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["form.ts:35",{"_index":799,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["form.ts:38",{"_index":1072,"title":{},"body":{"components/TaskForm.html":{}}}],["form.ts:39",{"_index":1073,"title":{},"body":{"components/TaskForm.html":{}}}],["form.ts:58",{"_index":791,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["form.ts:61",{"_index":1282,"title":{},"body":{"components/UserForm.html":{}}}],["form.ts:71",{"_index":792,"title":{},"body":{"components/ProjectForm.html":{}}}],["form.ts:74",{"_index":1283,"title":{},"body":{"components/UserForm.html":{}}}],["form.ts:77",{"_index":795,"title":{},"body":{"components/ProjectForm.html":{}}}],["form.value.name",{"_index":855,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["form/project",{"_index":774,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["form/task",{"_index":1068,"title":{},"body":{"components/TaskForm.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["form/user",{"_index":1253,"title":{},"body":{"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["formbuilder",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["formgroup",{"_index":800,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["formsmodule",{"_index":586,"title":{},"body":{"components/Header.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["forn",{"_index":365,"title":{},"body":{"injectables/CronService.html":{}}}],["found",{"_index":704,"title":{},"body":{"components/NotFound.html":{}}}],["found'},{'name",{"_index":64,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["found.html",{"_index":705,"title":{},"body":{"components/NotFound.html":{}}}],["found.scss",{"_index":706,"title":{},"body":{"components/NotFound.html":{}}}],["found.ts",{"_index":703,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["found/not",{"_index":702,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["framework",{"_index":1480,"title":{},"body":{"index.html":{}}}],["full",{"_index":1338,"title":{},"body":{"components/UserList.html":{}}}],["fullname",{"_index":804,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{},"components/UserList.html":{},"interfaces/Users.html":{}}}],["function",{"_index":363,"title":{},"body":{"injectables/CronService.html":{}}}],["functions",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":523,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskListComponent.html":{}}}],["generate",{"_index":1450,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1425,"title":{},"body":{"index.html":{}}}],["getcurrentuser",{"_index":193,"title":{},"body":{"injectables/CommonService.html":{}}}],["getnotifications",{"_index":761,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getnotifications(userid",{"_index":766,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getoverdueprojects",{"_index":194,"title":{},"body":{"injectables/CommonService.html":{}}}],["getoverdueprojects(projects",{"_index":214,"title":{},"body":{"injectables/CommonService.html":{}}}],["getoverduetasks",{"_index":195,"title":{},"body":{"injectables/CommonService.html":{}}}],["getoverduetasks(tasks",{"_index":217,"title":{},"body":{"injectables/CommonService.html":{}}}],["getproject",{"_index":785,"title":{},"body":{"components/ProjectForm.html":{},"injectables/ProjectService.html":{}}}],["getproject(id",{"_index":1005,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getprojects",{"_index":643,"title":{},"body":{"injectables/HttpService.html":{}}}],["gettasks",{"_index":1219,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettasks(id",{"_index":1225,"title":{},"body":{"injectables/TaskService.html":{}}}],["getting",{"_index":1422,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuser",{"_index":1280,"title":{},"body":{"components/UserForm.html":{},"injectables/UserService.html":{}}}],["getuser(id",{"_index":1356,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserrole",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":786,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{}}}],["go",{"_index":713,"title":{},"body":{"components/NotFound.html":{},"components/UnAuthorize.html":{}}}],["grabbing",{"_index":1181,"title":{},"body":{"components/TaskListComponent.html":{}}}],["gray",{"_index":1184,"title":{},"body":{"components/TaskListComponent.html":{}}}],["grey",{"_index":1180,"title":{},"body":{"components/TaskListComponent.html":{}}}],["grid",{"_index":529,"title":{},"body":{"components/DashboardComponent.html":{}}}],["guard",{"_index":93,"title":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":95,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["handle",{"_index":1193,"title":{},"body":{"components/TaskListComponent.html":{}}}],["handlehttpinterceptor",{"_index":1380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":56,"title":{"components/Header.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["header'},{'name",{"_index":57,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["header.html",{"_index":587,"title":{},"body":{"components/Header.html":{},"components/TopHeader.html":{}}}],["header.scss",{"_index":588,"title":{},"body":{"components/Header.html":{},"components/TopHeader.html":{}}}],["header.ts",{"_index":1246,"title":{},"body":{"components/TopHeader.html":{},"coverage.html":{}}}],["header.ts:16",{"_index":1248,"title":{},"body":{"components/TopHeader.html":{}}}],["header.ts:23",{"_index":1249,"title":{},"body":{"components/TopHeader.html":{}}}],["header.ts:28",{"_index":1250,"title":{},"body":{"components/TopHeader.html":{}}}],["header/top",{"_index":630,"title":{},"body":{"components/HomeComponent.html":{},"components/TopHeader.html":{},"coverage.html":{}}}],["headers",{"_index":1013,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["heading",{"_index":1187,"title":{},"body":{"components/TaskListComponent.html":{}}}],["height",{"_index":508,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["helpbuilding",{"_index":1455,"title":{},"body":{"index.html":{}}}],["here",{"_index":712,"title":{},"body":{"components/NotFound.html":{}}}],["hidden",{"_index":1179,"title":{},"body":{"components/TaskListComponent.html":{}}}],["high",{"_index":1074,"title":{},"body":{"components/TaskForm.html":{},"components/TaskListComponent.html":{},"interfaces/Tasks.html":{}}}],["home",{"_index":59,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["homecomponent",{"_index":58,"title":{"components/HomeComponent.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["homepage",{"_index":1275,"title":{},"body":{"components/UnAuthorize.html":{}}}],["horizontalposition",{"_index":276,"title":{},"body":{"injectables/CommonService.html":{}}}],["html",{"_index":48,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["http",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":645,"title":{},"body":{"injectables/HttpService.html":{}}}],["http://localhost:3000/notifications",{"_index":768,"title":{},"body":{"injectables/NotificationService.html":{}}}],["http://localhost:3000/projects",{"_index":1009,"title":{},"body":{"injectables/ProjectService.html":{}}}],["http://localhost:3000/tasks",{"_index":1227,"title":{},"body":{"injectables/TaskService.html":{}}}],["http://localhost:3000/users",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":1438,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["httpheaders",{"_index":1010,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["httpinterceptorfn",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpservice",{"_index":640,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["icon",{"_index":994,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["id",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"interfaces/userDialogData.html":{}}}],["id).subscribe",{"_index":1159,"title":{},"body":{"components/TaskListComponent.html":{}}}],["identifier",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["if(currentrole",{"_index":1042,"title":{},"body":{"guards/RoleGuard.html":{}}}],["if(user",{"_index":1349,"title":{},"body":{"pipes/UserNamePipe.html":{}}}],["implements",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/DuedatePipe.html":{},"components/Notification.html":{},"components/ProjectListComponent.html":{},"guards/RoleGuard.html":{},"pipes/UserNamePipe.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["important",{"_index":558,"title":{},"body":{"components/DashboardComponent.html":{}}}],["importprovidersfrom(reactiveformsmodule",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":13,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["includes",{"_index":1447,"title":{},"body":{"index.html":{}}}],["including",{"_index":1489,"title":{},"body":{"index.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"interfaces/userDialogData.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"interfaces/userDialogData.html":{}}}],["information",{"_index":1488,"title":{},"body":{"index.html":{}}}],["initchartdata",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inject",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/ToasterComponent.html":{},"components/UserForm.html":{}}}],["inject(authservice",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(commonservice",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{},"components/Notification.html":{}}}],["inject(formbuilder",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{}}}],["inject(mat_dialog_data",{"_index":797,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["inject(mat_snack_bar_data",{"_index":1238,"title":{},"body":{"components/ToasterComponent.html":{}}}],["inject(ngzone",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{}}}],["inject(notificationservice",{"_index":732,"title":{},"body":{"components/Notification.html":{}}}],["inject(platform_id",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(router",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{}}}],["injectable",{"_index":106,"title":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":605,"title":{},"body":{"components/Header.html":{},"components/SearchInput.html":{}}}],["input'},{'name",{"_index":74,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["input.html",{"_index":1055,"title":{},"body":{"components/SearchInput.html":{}}}],["input.scss",{"_index":1056,"title":{},"body":{"components/SearchInput.html":{}}}],["input.ts",{"_index":1051,"title":{},"body":{"components/SearchInput.html":{},"coverage.html":{}}}],["input.ts:14",{"_index":1059,"title":{},"body":{"components/SearchInput.html":{}}}],["input.ts:17",{"_index":1061,"title":{},"body":{"components/SearchInput.html":{}}}],["input/search",{"_index":1050,"title":{},"body":{"components/SearchInput.html":{},"coverage.html":{}}}],["inputs",{"_index":590,"title":{},"body":{"components/Header.html":{}}}],["insensitive",{"_index":259,"title":{},"body":{"injectables/CommonService.html":{}}}],["interceptor.ts",{"_index":1379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":649,"title":{"interfaces/Kpis.html":{},"interfaces/Notifications.html":{},"interfaces/Projects.html":{},"interfaces/Tasks.html":{},"interfaces/Users.html":{},"interfaces/userDialogData.html":{}},"body":{"interfaces/Kpis.html":{},"interfaces/Notifications.html":{},"interfaces/Projects.html":{},"interfaces/Tasks.html":{},"interfaces/Users.html":{},"coverage.html":{},"interfaces/userDialogData.html":{}}}],["interfaces",{"_index":650,"title":{},"body":{"interfaces/Kpis.html":{},"interfaces/Notifications.html":{},"interfaces/Projects.html":{},"interfaces/Tasks.html":{},"interfaces/Users.html":{},"overview.html":{},"interfaces/userDialogData.html":{}}}],["invalid",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthenticated",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloading",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["ismobile",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{}}}],["isplatformbrowser",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["it's",{"_index":376,"title":{},"body":{"injectables/CronService.html":{}}}],["item",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{},"components/TaskListComponent.html":{}}}],["item.label",{"_index":465,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item.status.tolowercase",{"_index":498,"title":{},"body":{"components/DashboardComponent.html":{}}}],["items",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["items.reduce((acc",{"_index":497,"title":{},"body":{"components/DashboardComponent.html":{}}}],["join(import.meta.dirname",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/TopHeader.html":{}}}],["json.stringify(user",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":518,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["jwt",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1470,"title":{},"body":{"index.html":{}}}],["key",{"_index":496,"title":{},"body":{"components/DashboardComponent.html":{}}}],["keystosearch",{"_index":209,"title":{},"body":{"injectables/CommonService.html":{}}}],["keystosearch.some((key",{"_index":261,"title":{},"body":{"injectables/CommonService.html":{}}}],["kpi",{"_index":527,"title":{},"body":{"components/DashboardComponent.html":{}}}],["kpi.label",{"_index":503,"title":{},"body":{"components/DashboardComponent.html":{}}}],["kpi.value",{"_index":504,"title":{},"body":{"components/DashboardComponent.html":{}}}],["kpis",{"_index":404,"title":{"interfaces/Kpis.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/Kpis.html":{},"coverage.html":{}}}],["label",{"_index":467,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/Kpis.html":{}}}],["labels",{"_index":477,"title":{},"body":{"components/DashboardComponent.html":{}}}],["last",{"_index":237,"title":{},"body":{"injectables/CommonService.html":{}}}],["late",{"_index":235,"title":{},"body":{"injectables/CommonService.html":{}}}],["left",{"_index":584,"title":{},"body":{"pipes/DuedatePipe.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["legend",{"_index":47,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["list",{"_index":88,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"index.html":{}}}],["list'},{'name",{"_index":71,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["list.html",{"_index":866,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["list.scss",{"_index":865,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["list.ts",{"_index":862,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{},"coverage.html":{}}}],["list.ts:100",{"_index":1322,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:101",{"_index":1113,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:110",{"_index":1126,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:113",{"_index":882,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["list.ts:118",{"_index":1123,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:126",{"_index":891,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:127",{"_index":1320,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:137",{"_index":889,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:151",{"_index":881,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:155",{"_index":894,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:159",{"_index":885,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:31",{"_index":1327,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:32",{"_index":1130,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:33",{"_index":1328,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:34",{"_index":1129,"title":{},"body":{"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["list.ts:35",{"_index":1128,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:36",{"_index":1127,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:38",{"_index":1111,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:43",{"_index":901,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["list.ts:45",{"_index":1325,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:46",{"_index":1317,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:48",{"_index":1116,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:54",{"_index":897,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:55",{"_index":902,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["list.ts:57",{"_index":898,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:58",{"_index":906,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:59",{"_index":909,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:61",{"_index":905,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:62",{"_index":879,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:63",{"_index":1115,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:67",{"_index":1319,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:71",{"_index":1323,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:72",{"_index":886,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:82",{"_index":1119,"title":{},"body":{"components/TaskListComponent.html":{}}}],["list.ts:87",{"_index":1318,"title":{},"body":{"components/UserList.html":{}}}],["list.ts:88",{"_index":884,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["list.ts:92",{"_index":883,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.ts:98",{"_index":895,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list/project",{"_index":861,"title":{},"body":{"components/ProjectListComponent.html":{},"coverage.html":{}}}],["list/task",{"_index":1099,"title":{},"body":{"components/TaskListComponent.html":{},"coverage.html":{}}}],["list/user",{"_index":1315,"title":{},"body":{"components/UserList.html":{},"coverage.html":{}}}],["literal",{"_index":213,"title":{},"body":{"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/ProjectForm.html":{}}}],["loader",{"_index":514,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["loaderservice",{"_index":652,"title":{"injectables/LoaderService.html":{}},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["local",{"_index":1430,"title":{},"body":{"index.html":{}}}],["localstorage.clear",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('user",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":62,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["login(email",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(username",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":61,"title":{"components/LoginComponent.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["loginform",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"components/TopHeader.html":{}}}],["looking",{"_index":711,"title":{},"body":{"components/NotFound.html":{}}}],["low",{"_index":1076,"title":{},"body":{"components/TaskForm.html":{},"components/TaskListComponent.html":{},"interfaces/Tasks.html":{}}}],["main",{"_index":506,"title":{},"body":{"components/DashboardComponent.html":{}}}],["maintainaspectratio",{"_index":432,"title":{},"body":{"components/DashboardComponent.html":{}}}],["manager",{"_index":1285,"title":{},"body":{"components/UserForm.html":{}}}],["mangement",{"_index":1259,"title":{},"body":{"components/TopHeader.html":{}}}],["map",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"components/Notification.html":{}}}],["map((notifs",{"_index":751,"title":{},"body":{"components/Notification.html":{}}}],["map((result",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["margin",{"_index":545,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["markasread",{"_index":762,"title":{},"body":{"injectables/NotificationService.html":{}}}],["markasread(id",{"_index":767,"title":{},"body":{"injectables/NotificationService.html":{}}}],["mat",{"_index":993,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["mat_dialog_data",{"_index":807,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["mat_snack_bar_data",{"_index":1240,"title":{},"body":{"components/ToasterComponent.html":{}}}],["matbadgemodule",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":1069,"title":{},"body":{"components/TaskForm.html":{},"components/ToasterComponent.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":92,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/userDialogData.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matdialog",{"_index":878,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserList.html":{}}}],["matdialogmodule",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":789,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["matdividermodule",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["materialimports",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1052,"title":{},"body":{"components/SearchInput.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(diffms",{"_index":578,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["maticonmodule",{"_index":1054,"title":{},"body":{"components/SearchInput.html":{},"components/ToasterComponent.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":1053,"title":{},"body":{"components/SearchInput.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":1070,"title":{},"body":{"components/TaskForm.html":{},"miscellaneous/variables.html":{}}}],["matpaginator",{"_index":903,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["matpaginatormodule",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matsidenav",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{}}}],["matsidenavmodule",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":201,"title":{},"body":{"injectables/CommonService.html":{}}}],["matsort",{"_index":907,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["matsortmodule",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mattabledatasource",{"_index":896,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["mattabledatasource(this.users",{"_index":1324,"title":{},"body":{"components/UserList.html":{}}}],["mattablemodule",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":1075,"title":{},"body":{"components/TaskForm.html":{},"components/TaskListComponent.html":{},"interfaces/Tasks.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":223,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{}}}],["methods",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["min",{"_index":968,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["minmax(200px",{"_index":533,"title":{},"body":{"components/DashboardComponent.html":{}}}],["miscellaneous",{"_index":1499,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":1164,"title":{},"body":{"components/TaskListComponent.html":{}}}],["mmmm",{"_index":952,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["models/material.imports",{"_index":741,"title":{},"body":{"components/Notification.html":{},"components/TopHeader.html":{}}}],["models/notification.model",{"_index":737,"title":{},"body":{"components/Notification.html":{},"injectables/NotificationService.html":{}}}],["models/project.model",{"_index":247,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{}}}],["models/task.model",{"_index":248,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{}}}],["models/user.model",{"_index":249,"title":{},"body":{"injectables/CommonService.html":{}}}],["modify",{"_index":1443,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1494,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1487,"title":{},"body":{"index.html":{}}}],["move",{"_index":1191,"title":{},"body":{"components/TaskListComponent.html":{}}}],["moveiteminarray",{"_index":1131,"title":{},"body":{"components/TaskListComponent.html":{}}}],["moveiteminarray(this.tasks",{"_index":1152,"title":{},"body":{"components/TaskListComponent.html":{}}}],["msg",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"components/UserForm.html":{}}}],["msuntilmidnight",{"_index":318,"title":{},"body":{"injectables/CronService.html":{}}}],["n",{"_index":727,"title":{},"body":{"components/Notification.html":{}}}],["n.createdat",{"_index":758,"title":{},"body":{"components/Notification.html":{}}}],["n.id",{"_index":755,"title":{},"body":{"components/Notification.html":{}}}],["n.message",{"_index":757,"title":{},"body":{"components/Notification.html":{}}}],["n.read",{"_index":754,"title":{},"body":{"components/Notification.html":{}}}],["n.read).length",{"_index":753,"title":{},"body":{"components/Notification.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["namefor",{"_index":1451,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":1437,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1484,"title":{},"body":{"index.html":{}}}],["new",{"_index":239,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":324,"title":{},"body":{"injectables/CronService.html":{},"components/ProjectListComponent.html":{},"miscellaneous/variables.html":{}}}],["next(authreq).pipe",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nextmidnight",{"_index":312,"title":{},"body":{"injectables/CronService.html":{}}}],["nextmidnight.gettime",{"_index":319,"title":{},"body":{"injectables/CronService.html":{}}}],["ng",{"_index":1433,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":448,"title":{},"body":{"components/DashboardComponent.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":872,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["ngondestroy",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["ngoninit",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/Notification.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["ngzone",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{}}}],["none",{"_index":612,"title":{},"body":{"components/Header.html":{},"components/TaskListComponent.html":{}}}],["notfound",{"_index":63,"title":{"components/NotFound.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["notification",{"_index":65,"title":{"components/Notification.html":{}},"body":{"components/App.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["notification'},{'name",{"_index":66,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["notification.html",{"_index":718,"title":{},"body":{"components/Notification.html":{}}}],["notification.scss",{"_index":719,"title":{},"body":{"components/Notification.html":{}}}],["notifications",{"_index":721,"title":{"interfaces/Notifications.html":{}},"body":{"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"coverage.html":{}}}],["notificationservice",{"_index":299,"title":{"injectables/NotificationService.html":{}},"body":{"injectables/CronService.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"coverage.html":{}}}],["notifs.filter((n",{"_index":752,"title":{},"body":{"components/Notification.html":{}}}],["notifyuser",{"_index":787,"title":{},"body":{"components/ProjectForm.html":{}}}],["notifyuser(project",{"_index":793,"title":{},"body":{"components/ProjectForm.html":{}}}],["now",{"_index":282,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{}}}],["now.getdate",{"_index":315,"title":{},"body":{"injectables/CronService.html":{}}}],["now.getfullyear",{"_index":313,"title":{},"body":{"injectables/CronService.html":{}}}],["now.getmonth",{"_index":314,"title":{},"body":{"injectables/CronService.html":{}}}],["now.gettime",{"_index":320,"title":{},"body":{"injectables/CronService.html":{}}}],["nt",{"_index":1195,"title":{},"body":{"components/TaskListComponent.html":{}}}],["null",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/Kpis.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{}}}],["object",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/Notification.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"components/UserForm.html":{},"injectables/UserService.html":{}}}],["observer",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{}}}],["of(0",{"_index":734,"title":{},"body":{"components/Notification.html":{}}}],["ok",{"_index":228,"title":{},"body":{"injectables/CommonService.html":{},"components/ProjectForm.html":{},"components/TopHeader.html":{}}}],["ondelete",{"_index":873,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["ondelete(projectid",{"_index":887,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["ondelete(userid",{"_index":1321,"title":{},"body":{"components/UserList.html":{}}}],["ondestroy",{"_index":863,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["ondrop",{"_index":1107,"title":{},"body":{"components/TaskListComponent.html":{}}}],["ondrop(event",{"_index":1117,"title":{},"body":{"components/TaskListComponent.html":{}}}],["one",{"_index":1482,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":717,"title":{},"body":{"components/Notification.html":{},"components/ProjectListComponent.html":{}}}],["onsearchinputchange",{"_index":1057,"title":{},"body":{"components/SearchInput.html":{}}}],["onsearchinputchange(searchterm",{"_index":1060,"title":{},"body":{"components/SearchInput.html":{}}}],["onsubmit",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["oops",{"_index":708,"title":{},"body":{"components/NotFound.html":{},"components/UnAuthorize.html":{}}}],["opacity",{"_index":1208,"title":{},"body":{"components/TaskListComponent.html":{}}}],["open",{"_index":1436,"title":{},"body":{"index.html":{}}}],["openfailuresnackbar",{"_index":196,"title":{},"body":{"injectables/CommonService.html":{}}}],["openfailuresnackbar(message",{"_index":220,"title":{},"body":{"injectables/CommonService.html":{}}}],["openform",{"_index":874,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["openform(id",{"_index":890,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["openform(task",{"_index":1121,"title":{},"body":{"components/TaskListComponent.html":{}}}],["opennotification",{"_index":723,"title":{},"body":{"components/Notification.html":{}}}],["opennotification(n",{"_index":725,"title":{},"body":{"components/Notification.html":{}}}],["opens",{"_index":268,"title":{},"body":{"injectables/CommonService.html":{}}}],["opensuccesssnackbar",{"_index":197,"title":{},"body":{"injectables/CommonService.html":{}}}],["opensuccesssnackbar(message",{"_index":226,"title":{},"body":{"injectables/CommonService.html":{}}}],["optimizes",{"_index":1464,"title":{},"body":{"index.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["output",{"_index":606,"title":{},"body":{"components/Header.html":{}}}],["outputs",{"_index":593,"title":{},"body":{"components/Header.html":{}}}],["overdue",{"_index":353,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{}}}],["overduetoday",{"_index":332,"title":{},"body":{"injectables/CronService.html":{}}}],["overduetoday.foreach((task",{"_index":340,"title":{},"body":{"injectables/CronService.html":{}}}],["overflow",{"_index":511,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["overview",{"_index":505,"title":{"overview.html":{}},"body":{"components/DashboardComponent.html":{},"index.html":{},"overview.html":{}}}],["p",{"_index":1098,"title":{},"body":{"components/TaskForm.html":{},"components/TaskListComponent.html":{}}}],["p.id",{"_index":347,"title":{},"body":{"injectables/CronService.html":{}}}],["package",{"_index":1401,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":525,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["page",{"_index":709,"title":{},"body":{"components/NotFound.html":{},"components/UnAuthorize.html":{},"index.html":{}}}],["paginator",{"_index":869,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["panelclass",{"_index":275,"title":{},"body":{"injectables/CommonService.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["particular",{"_index":368,"title":{},"body":{"injectables/CronService.html":{}}}],["password",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{},"interfaces/Users.html":{}}}],["past",{"_index":378,"title":{},"body":{"injectables/CronService.html":{}}}],["path",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["people",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{}}}],["performance",{"_index":1465,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1274,"title":{},"body":{"components/UnAuthorize.html":{}}}],["pipe",{"_index":559,"title":{"pipes/DuedatePipe.html":{},"pipes/UserNamePipe.html":{}},"body":{"pipes/DuedatePipe.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"coverage.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":459,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["pipe.ts",{"_index":563,"title":{},"body":{"pipes/DuedatePipe.html":{},"pipes/UserNamePipe.html":{},"coverage.html":{}}}],["pipe.ts:10",{"_index":1345,"title":{},"body":{"pipes/UserNamePipe.html":{}}}],["pipe.ts:8",{"_index":567,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["pipes",{"_index":561,"title":{},"body":{"pipes/DuedatePipe.html":{},"pipes/UserNamePipe.html":{},"index.html":{},"overview.html":{}}}],["pipetransform",{"_index":568,"title":{},"body":{"pipes/DuedatePipe.html":{},"pipes/UserNamePipe.html":{}}}],["placeholder",{"_index":1211,"title":{},"body":{"components/TaskListComponent.html":{}}}],["platform_id",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["platformid",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["pointer",{"_index":980,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["position",{"_index":552,"title":{},"body":{"components/DashboardComponent.html":{}}}],["powerful",{"_index":1448,"title":{},"body":{"index.html":{}}}],["preview.task",{"_index":1207,"title":{},"body":{"components/TaskListComponent.html":{}}}],["priorities",{"_index":1071,"title":{},"body":{"components/TaskForm.html":{}}}],["priority",{"_index":613,"title":{},"body":{"components/Header.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"interfaces/Tasks.html":{}}}],["priorityorder",{"_index":1147,"title":{},"body":{"components/TaskListComponent.html":{}}}],["priorityorder[a.priority",{"_index":1150,"title":{},"body":{"components/TaskListComponent.html":{}}}],["priorityorder[b.priority",{"_index":1151,"title":{},"body":{"components/TaskListComponent.html":{}}}],["private",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"guards/RoleGuard.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["pro",{"_index":830,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["production",{"_index":1463,"title":{},"body":{"index.html":{}}}],["profile",{"_index":1263,"title":{},"body":{"components/TopHeader.html":{}}}],["progress",{"_index":478,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"interfaces/Tasks.html":{}}}],["project",{"_index":68,"title":{},"body":{"components/App.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"index.html":{}}}],["project.assignedto",{"_index":352,"title":{},"body":{"injectables/CronService.html":{},"components/ProjectForm.html":{}}}],["project.id",{"_index":356,"title":{},"body":{"injectables/CronService.html":{},"components/ProjectForm.html":{}}}],["project.name",{"_index":851,"title":{},"body":{"components/ProjectForm.html":{}}}],["projectchartdata",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{}}}],["projectdata",{"_index":783,"title":{},"body":{"components/ProjectForm.html":{}}}],["projectform",{"_index":67,"title":{"components/ProjectForm.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["projectid",{"_index":355,"title":{},"body":{"injectables/CronService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{}}}],["projectlistcomponent",{"_index":70,"title":{"components/ProjectListComponent.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["projectname",{"_index":888,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["projects",{"_index":215,"title":{"interfaces/Projects.html":{}},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"components/TaskListComponent.html":{},"coverage.html":{}}}],["projects/project",{"_index":306,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{}}}],["projectservice",{"_index":297,"title":{"injectables/ProjectService.html":{}},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["projectstatus",{"_index":487,"title":{},"body":{"components/DashboardComponent.html":{}}}],["projectstatus['done",{"_index":490,"title":{},"body":{"components/DashboardComponent.html":{}}}],["projectstatus['in",{"_index":491,"title":{},"body":{"components/DashboardComponent.html":{}}}],["projectstatus['to",{"_index":492,"title":{},"body":{"components/DashboardComponent.html":{}}}],["promise",{"_index":304,"title":{},"body":{"injectables/CronService.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/App.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"properties.html":{},"interfaces/userDialogData.html":{}}}],["protected",{"_index":21,"title":{},"body":{"components/App.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providecharts(withdefaultregisterables",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["providehttpclient",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providenativedateadapter",{"_index":777,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{},"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":776,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{}}}],["purpose",{"_index":370,"title":{},"body":{"injectables/CronService.html":{}}}],["r",{"_index":1312,"title":{},"body":{"components/UserForm.html":{}}}],["radius",{"_index":962,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["reactiveformsmodule",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["read",{"_index":359,"title":{},"body":{"injectables/CronService.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{}}}],["redirecttotask",{"_index":875,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["redirecttotask(id",{"_index":893,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["reference",{"_index":1493,"title":{},"body":{"index.html":{}}}],["references",{"_index":1491,"title":{},"body":{"index.html":{}}}],["regex",{"_index":256,"title":{},"body":{"injectables/CommonService.html":{}}}],["regex.test(item[key",{"_index":262,"title":{},"body":{"injectables/CommonService.html":{}}}],["regexp(escapedterm",{"_index":257,"title":{},"body":{"injectables/CommonService.html":{}}}],["registerables",{"_index":446,"title":{},"body":{"components/DashboardComponent.html":{}}}],["relative",{"_index":553,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reload",{"_index":1441,"title":{},"body":{"index.html":{}}}],["rendermode",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repeat(auto",{"_index":531,"title":{},"body":{"components/DashboardComponent.html":{}}}],["req",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqhandler",{"_index":1398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestidlecallback",{"_index":462,"title":{},"body":{"components/DashboardComponent.html":{}}}],["res",{"_index":941,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["res.map",{"_index":834,"title":{},"body":{"components/ProjectForm.html":{}}}],["reschedule",{"_index":385,"title":{},"body":{"injectables/CronService.html":{}}}],["resources",{"_index":1486,"title":{},"body":{"index.html":{}}}],["response",{"_index":828,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["response.status",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.subscribe",{"_index":841,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["responsive",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{}}}],["result",{"_index":646,"title":{},"body":{"injectables/HttpService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["result.assignedto",{"_index":846,"title":{},"body":{"components/ProjectForm.html":{}}}],["result.filter((t",{"_index":1140,"title":{},"body":{"components/TaskListComponent.html":{}}}],["result.sort",{"_index":1143,"title":{},"body":{"components/TaskListComponent.html":{}}}],["result[0",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["result[0].id",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["result[0].role",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":91,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/userDialogData.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["rgba(0",{"_index":1172,"title":{},"body":{"components/TaskListComponent.html":{}}}],["role",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/UserForm.html":{},"components/UserList.html":{},"interfaces/Users.html":{}}}],["roleguard",{"_index":1019,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":1278,"title":{},"body":{"components/UserForm.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"guards/RoleGuard.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":53,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["route",{"_index":1030,"title":{},"body":{"guards/RoleGuard.html":{},"components/TaskListComponent.html":{}}}],["router",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"guards/RoleGuard.html":{}}}],["routermodule",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{},"components/NotFound.html":{},"components/UnAuthorize.html":{}}}],["routeroutlet",{"_index":14,"title":{},"body":{"components/App.html":{},"components/HomeComponent.html":{}}}],["routerstatesnapshot",{"_index":1028,"title":{},"body":{"guards/RoleGuard.html":{}}}],["row",{"_index":970,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["row.assignedto",{"_index":948,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["row.creationdate",{"_index":1342,"title":{},"body":{"components/UserList.html":{}}}],["row.deadlinedate",{"_index":955,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["row.description",{"_index":956,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["row.fullname",{"_index":1339,"title":{},"body":{"components/UserList.html":{}}}],["row.id",{"_index":946,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["row.name",{"_index":947,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["row.password",{"_index":1341,"title":{},"body":{"components/UserList.html":{}}}],["row.role",{"_index":1343,"title":{},"body":{"components/UserList.html":{}}}],["row.startdate",{"_index":950,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["row.status",{"_index":949,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["row.username",{"_index":1340,"title":{},"body":{"components/UserList.html":{}}}],["row:hover",{"_index":977,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["run",{"_index":1431,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1472,"title":{},"body":{"index.html":{}}}],["running",{"_index":1435,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{},"components/Notification.html":{}}}],["s",{"_index":583,"title":{},"body":{"pipes/DuedatePipe.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["sans",{"_index":989,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["scaffolding",{"_index":1446,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":323,"title":{},"body":{"injectables/CronService.html":{}}}],["schedulemidnightcheck",{"_index":295,"title":{},"body":{"injectables/CronService.html":{}}}],["scheduletaskatparticulartime",{"_index":371,"title":{},"body":{"injectables/CronService.html":{}}}],["schematics",{"_index":1453,"title":{},"body":{"index.html":{}}}],["screensize.matches",{"_index":634,"title":{},"body":{"components/HomeComponent.html":{}}}],["search",{"_index":73,"title":{},"body":{"components/App.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["searchinput",{"_index":72,"title":{"components/SearchInput.html":{}},"body":{"components/App.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["searchterm",{"_index":211,"title":{},"body":{"injectables/CommonService.html":{},"components/SearchInput.html":{}}}],["searchterm?.trim",{"_index":253,"title":{},"body":{"injectables/CommonService.html":{}}}],["section",{"_index":528,"title":{},"body":{"components/DashboardComponent.html":{}}}],["segments",{"_index":1034,"title":{},"body":{"guards/RoleGuard.html":{}}}],["selectedfilter",{"_index":592,"title":{},"body":{"components/Header.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["serif",{"_index":990,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["serveonce",{"_index":1434,"title":{},"body":{"index.html":{}}}],["server",{"_index":1409,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":43,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["service.ts",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/NotificationService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":763,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["service.ts:11",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["service.ts:12",{"_index":1000,"title":{},"body":{"injectables/ProjectService.html":{}}}],["service.ts:13",{"_index":305,"title":{},"body":{"injectables/CronService.html":{},"injectables/HttpService.html":{}}}],["service.ts:14",{"_index":202,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["service.ts:15",{"_index":1224,"title":{},"body":{"injectables/TaskService.html":{}}}],["service.ts:16",{"_index":1004,"title":{},"body":{"injectables/ProjectService.html":{}}}],["service.ts:18",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["service.ts:19",{"_index":238,"title":{},"body":{"injectables/CommonService.html":{}}}],["service.ts:20",{"_index":1006,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{}}}],["service.ts:22",{"_index":765,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["service.ts:24",{"_index":230,"title":{},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{}}}],["service.ts:27",{"_index":1358,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:28",{"_index":210,"title":{},"body":{"injectables/CommonService.html":{}}}],["service.ts:29",{"_index":1008,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{}}}],["service.ts:32",{"_index":1355,"title":{},"body":{"injectables/UserService.html":{}}}],["service.ts:34",{"_index":1003,"title":{},"body":{"injectables/ProjectService.html":{}}}],["service.ts:35",{"_index":1223,"title":{},"body":{"injectables/TaskService.html":{}}}],["service.ts:43",{"_index":204,"title":{},"body":{"injectables/CommonService.html":{}}}],["service.ts:44",{"_index":300,"title":{},"body":{"injectables/CronService.html":{}}}],["service.ts:46",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["service.ts:47",{"_index":206,"title":{},"body":{"injectables/CommonService.html":{}}}],["service.ts:51",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["service.ts:53",{"_index":227,"title":{},"body":{"injectables/CommonService.html":{}}}],["service.ts:59",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["service.ts:6",{"_index":654,"title":{},"body":{"injectables/LoaderService.html":{}}}],["service.ts:64",{"_index":303,"title":{},"body":{"injectables/CronService.html":{}}}],["service.ts:66",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["service.ts:69",{"_index":222,"title":{},"body":{"injectables/CommonService.html":{}}}],["service.ts:74",{"_index":302,"title":{},"body":{"injectables/CronService.html":{}}}],["service.ts:85",{"_index":212,"title":{},"body":{"injectables/CommonService.html":{}}}],["service.ts:9",{"_index":644,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.ts:90",{"_index":219,"title":{},"body":{"injectables/CommonService.html":{}}}],["service.ts:98",{"_index":216,"title":{},"body":{"injectables/CommonService.html":{}}}],["services/commonservice/common",{"_index":738,"title":{},"body":{"components/Notification.html":{},"components/TopHeader.html":{}}}],["services/notification",{"_index":736,"title":{},"body":{"components/Notification.html":{}}}],["set",{"_index":571,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["setheaders",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settimeout",{"_index":321,"title":{},"body":{"injectables/CronService.html":{}}}],["shadow",{"_index":972,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["shared",{"_index":251,"title":{},"body":{"injectables/CommonService.html":{}}}],["shared/components/header/header",{"_index":913,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["shared/components/toaster",{"_index":245,"title":{},"body":{"injectables/CommonService.html":{}}}],["shared/pipes/duedate",{"_index":914,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["shared/pipes/user",{"_index":915,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["sharereplay",{"_index":242,"title":{},"body":{"injectables/CommonService.html":{},"components/Notification.html":{}}}],["sharereplay(1",{"_index":234,"title":{},"body":{"injectables/CommonService.html":{},"components/Notification.html":{}}}],["short",{"_index":759,"title":{},"body":{"components/Notification.html":{}}}],["sidenav",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":539,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["snackbar",{"_index":200,"title":{},"body":{"injectables/CommonService.html":{}}}],["solid",{"_index":1175,"title":{},"body":{"components/TaskListComponent.html":{}}}],["something",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"components/ProjectForm.html":{}}}],["sort",{"_index":611,"title":{},"body":{"components/Header.html":{},"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["sortby",{"_index":1124,"title":{},"body":{"components/TaskListComponent.html":{}}}],["sortfield",{"_index":1102,"title":{},"body":{"components/TaskListComponent.html":{}}}],["sorttasks",{"_index":1108,"title":{},"body":{"components/TaskListComponent.html":{}}}],["sorttasks(sortby",{"_index":1122,"title":{},"body":{"components/TaskListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"index.html":{},"interfaces/userDialogData.html":{}}}],["space",{"_index":964,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["special",{"_index":265,"title":{},"body":{"injectables/CommonService.html":{}}}],["speed",{"_index":1466,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handlehttp",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../material.imports.ts",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":1364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1371,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:11",{"_index":27,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:15",{"_index":38,"title":{},"body":{"components/App.html":{}}}],["src/app/auth/authservice/auth",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/gaurds/auth.guard.ts",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/gaurds/auth.guard.ts:11",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/gaurds/auth.guard.ts:8",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/gaurds/role.guard.ts",{"_index":1020,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/auth/gaurds/role.guard.ts:15",{"_index":1024,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/auth/gaurds/role.guard.ts:18",{"_index":1038,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/auth/gaurds/role.guard.ts:30",{"_index":1029,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/auth/gaurds/role.guard.ts:38",{"_index":1036,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/auth/gaurds/role.guard.ts:46",{"_index":1032,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/auth/login",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/core/components/notification/notification.ts",{"_index":716,"title":{},"body":{"components/Notification.html":{},"coverage.html":{}}}],["src/app/core/components/notification/notification.ts:24",{"_index":733,"title":{},"body":{"components/Notification.html":{}}}],["src/app/core/components/notification/notification.ts:25",{"_index":728,"title":{},"body":{"components/Notification.html":{}}}],["src/app/core/components/notification/notification.ts:26",{"_index":730,"title":{},"body":{"components/Notification.html":{}}}],["src/app/core/components/notification/notification.ts:28",{"_index":731,"title":{},"body":{"components/Notification.html":{}}}],["src/app/core/components/notification/notification.ts:29",{"_index":735,"title":{},"body":{"components/Notification.html":{}}}],["src/app/core/components/notification/notification.ts:31",{"_index":724,"title":{},"body":{"components/Notification.html":{}}}],["src/app/core/components/notification/notification.ts:50",{"_index":726,"title":{},"body":{"components/Notification.html":{}}}],["src/app/core/http",{"_index":641,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/core/interceptors/handlehttp",{"_index":1378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/dashboard.model.ts",{"_index":651,"title":{},"body":{"interfaces/Kpis.html":{},"coverage.html":{}}}],["src/app/core/models/dialogdata.model.ts",{"_index":1381,"title":{},"body":{"coverage.html":{},"interfaces/userDialogData.html":{}}}],["src/app/core/models/material.imports.ts",{"_index":1382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/notification.model.ts",{"_index":772,"title":{},"body":{"interfaces/Notifications.html":{},"coverage.html":{}}}],["src/app/core/models/project.model.ts",{"_index":1018,"title":{},"body":{"interfaces/Projects.html":{},"coverage.html":{}}}],["src/app/core/models/task.model.ts",{"_index":1232,"title":{},"body":{"interfaces/Tasks.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1359,"title":{},"body":{"interfaces/Users.html":{},"coverage.html":{}}}],["src/app/core/services/commonservice/common",{"_index":189,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/core/services/cron",{"_index":290,"title":{},"body":{"injectables/CronService.html":{},"coverage.html":{}}}],["src/app/core/services/loader",{"_index":653,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/core/services/notification",{"_index":760,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/top",{"_index":1245,"title":{},"body":{"components/TopHeader.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/projects/project",{"_index":773,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.ts",{"_index":585,"title":{},"body":{"components/Header.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.ts:14",{"_index":599,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:16",{"_index":598,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:18",{"_index":597,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:20",{"_index":596,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:22",{"_index":602,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:24",{"_index":601,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:26",{"_index":603,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/header/header.ts:31",{"_index":604,"title":{},"body":{"components/Header.html":{}}}],["src/app/shared/components/home",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/not",{"_index":701,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["src/app/shared/components/search",{"_index":1049,"title":{},"body":{"components/SearchInput.html":{},"coverage.html":{}}}],["src/app/shared/components/toaster",{"_index":1233,"title":{},"body":{"components/ToasterComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/un",{"_index":1264,"title":{},"body":{"components/UnAuthorize.html":{},"coverage.html":{}}}],["src/app/shared/pipes/duedate",{"_index":562,"title":{},"body":{"pipes/DuedatePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/user",{"_index":1344,"title":{},"body":{"pipes/UserNamePipe.html":{},"coverage.html":{}}}],["src/app/tasks/task",{"_index":1067,"title":{},"body":{"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/users/user",{"_index":1277,"title":{},"body":{"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":1393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":1395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectListComponent.html":{},"components/ToasterComponent.html":{}}}],["start",{"_index":856,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"index.html":{}}}],["startdate",{"_index":817,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"interfaces/Projects.html":{}}}],["started",{"_index":1423,"title":{"index.html":{}},"body":{}}],["state",{"_index":1027,"title":{},"body":{"guards/RoleGuard.html":{}}}],["statements",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"interfaces/Projects.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"interfaces/Tasks.html":{}}}],["statuses",{"_index":784,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["statusfilter",{"_index":1103,"title":{},"body":{"components/TaskListComponent.html":{}}}],["store",{"_index":1459,"title":{},"body":{"index.html":{}}}],["string",{"_index":33,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"interfaces/userDialogData.html":{}}}],["style",{"_index":1199,"title":{},"body":{"components/TaskListComponent.html":{}}}],["styles",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/App.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["styleurls",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["sub",{"_index":1316,"title":{},"body":{"components/UserList.html":{}}}],["subject",{"_index":240,"title":{},"body":{"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["subscribe",{"_index":362,"title":{},"body":{"injectables/CronService.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{}}}],["subscribe(([users",{"_index":460,"title":{},"body":{"components/DashboardComponent.html":{}}}],["subscribe((term",{"_index":917,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["subscribers",{"_index":236,"title":{},"body":{"injectables/CommonService.html":{}}}],["subscription",{"_index":1326,"title":{},"body":{"components/UserList.html":{}}}],["success",{"_index":269,"title":{},"body":{"injectables/CommonService.html":{}}}],["successfully",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/TopHeader.html":{}}}],["such",{"_index":1454,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1483,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":740,"title":{},"body":{"components/Notification.html":{}}}],["t",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{}}}],["t.status",{"_index":1141,"title":{},"body":{"components/TaskListComponent.html":{}}}],["table",{"_index":966,"title":{},"body":{"components/ProjectListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":310,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["tap",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{}}}],["tap((response",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{}}}],["target",{"_index":372,"title":{},"body":{"injectables/CronService.html":{}}}],["target.gettime",{"_index":383,"title":{},"body":{"injectables/CronService.html":{}}}],["target.setdate(target.getdate",{"_index":381,"title":{},"body":{"injectables/CronService.html":{}}}],["target.sethours(3",{"_index":373,"title":{},"body":{"injectables/CronService.html":{}}}],["targetdate",{"_index":569,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["targetdate.gettime",{"_index":576,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["targetdate.sethours(0",{"_index":574,"title":{},"body":{"pipes/DuedatePipe.html":{}}}],["task",{"_index":76,"title":{},"body":{"components/App.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["task.description",{"_index":1166,"title":{},"body":{"components/TaskListComponent.html":{}}}],["task.duedate",{"_index":334,"title":{},"body":{"injectables/CronService.html":{},"components/TaskListComponent.html":{}}}],["task.id",{"_index":358,"title":{},"body":{"injectables/CronService.html":{}}}],["task.name",{"_index":354,"title":{},"body":{"injectables/CronService.html":{},"components/TaskListComponent.html":{}}}],["task.priority",{"_index":1165,"title":{},"body":{"components/TaskListComponent.html":{}}}],["task.projectid",{"_index":348,"title":{},"body":{"injectables/CronService.html":{}}}],["task.status",{"_index":287,"title":{},"body":{"injectables/CommonService.html":{},"components/TaskListComponent.html":{}}}],["task.status.tolowercase",{"_index":335,"title":{},"body":{"injectables/CronService.html":{}}}],["taskchartdata",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskform",{"_index":75,"title":{"components/TaskForm.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["taskid",{"_index":357,"title":{},"body":{"injectables/CronService.html":{},"interfaces/Notifications.html":{},"components/TaskForm.html":{}}}],["tasklistcomponent",{"_index":77,"title":{"components/TaskListComponent.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["tasks",{"_index":218,"title":{"interfaces/Tasks.html":{}},"body":{"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"coverage.html":{}}}],["tasks.filter((task",{"_index":284,"title":{},"body":{"injectables/CommonService.html":{}}}],["tasks/task",{"_index":307,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{}}}],["taskservice",{"_index":298,"title":{"injectables/TaskService.html":{}},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["taskstatus",{"_index":474,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskstatus['done",{"_index":480,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskstatus['in",{"_index":481,"title":{},"body":{"components/DashboardComponent.html":{}}}],["taskstatus['to",{"_index":482,"title":{},"body":{"components/DashboardComponent.html":{}}}],["td",{"_index":987,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["term",{"_index":231,"title":{},"body":{"injectables/CommonService.html":{},"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["test",{"_index":1471,"title":{},"body":{"index.html":{}}}],["testing",{"_index":366,"title":{},"body":{"injectables/CronService.html":{},"index.html":{}}}],["testrunning",{"_index":1475,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1468,"title":{},"body":{"index.html":{}}}],["text",{"_index":205,"title":{},"body":{"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["text.replace(/[.*+?^${}()|[\\]\\\\]/g",{"_index":263,"title":{},"body":{"injectables/CommonService.html":{}}}],["th",{"_index":986,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.add.emit",{"_index":610,"title":{},"body":{"components/Header.html":{}}}],["this.apiurl",{"_index":1230,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiurl}?projectid=${projectid",{"_index":1229,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.authservice",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.getuserrole",{"_index":1041,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.authservice.isauthenticated",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.logout",{"_index":1254,"title":{},"body":{"components/TopHeader.html":{}}}],["this.builddashboard",{"_index":463,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.canactivate(route",{"_index":1048,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.canedit",{"_index":1289,"title":{},"body":{"components/UserForm.html":{}}}],["this.cdr.detectchanges",{"_index":464,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["this.checkaccess(route.data?.['role",{"_index":1047,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.checkaccess(route.data['role",{"_index":1045,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.checkoverduetasks",{"_index":322,"title":{},"body":{"injectables/CronService.html":{}}}],["this.commonservice.fetchusers().subscribe((next",{"_index":922,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.commonservice.fetchusers().subscribe((res",{"_index":833,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.commonservice.filteredsearchdata",{"_index":919,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.commonservice.getcurrentuser",{"_index":729,"title":{},"body":{"components/Notification.html":{}}}],["this.commonservice.getoverdueprojects(this.projects).length",{"_index":473,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.commonservice.getoverduetasks(this.tasks).length",{"_index":471,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.commonservice.openfailuresnackbar",{"_index":848,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.commonservice.openfailuresnackbar('something",{"_index":1097,"title":{},"body":{"components/TaskForm.html":{},"components/UserForm.html":{}}}],["this.commonservice.openfailuresnackbar(err.msg",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.commonservice.openfailuresnackbar(response.msg",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.commonservice.opensuccesssnackbar",{"_index":942,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.commonservice.opensuccesssnackbar('logout",{"_index":1255,"title":{},"body":{"components/TopHeader.html":{}}}],["this.commonservice.opensuccesssnackbar('user",{"_index":1335,"title":{},"body":{"components/UserList.html":{}}}],["this.commonservice.opensuccesssnackbar(`task",{"_index":1157,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.commonservice.opensuccesssnackbar(message",{"_index":845,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{}}}],["this.commonservice.opensuccesssnackbar(msg",{"_index":1310,"title":{},"body":{"components/UserForm.html":{}}}],["this.commonservice.opensuccesssnackbar(response.msg",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.commonservice.search",{"_index":916,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.commonservice.search$.subscribe((term",{"_index":1330,"title":{},"body":{"components/UserList.html":{}}}],["this.commonservice.triggersearch(searchterm",{"_index":1066,"title":{},"body":{"components/SearchInput.html":{}}}],["this.countbystatus(this.projects",{"_index":488,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.countbystatus(this.tasks",{"_index":475,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.createnotification(task",{"_index":342,"title":{},"body":{"injectables/CronService.html":{}}}],["this.currentdate",{"_index":819,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.currentuser?.id",{"_index":742,"title":{},"body":{"components/Notification.html":{}}}],["this.data",{"_index":810,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["this.data.canedit",{"_index":1290,"title":{},"body":{"components/UserForm.html":{}}}],["this.data.id",{"_index":811,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["this.data.projectid",{"_index":1094,"title":{},"body":{"components/TaskForm.html":{}}}],["this.data.snackbar.dismiss",{"_index":1242,"title":{},"body":{"components/ToasterComponent.html":{}}}],["this.datasource.data",{"_index":920,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.datasource.paginator",{"_index":923,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.datasource.sort",{"_index":925,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.destroy$.complete",{"_index":502,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["this.destroy$.next",{"_index":501,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["this.dialog.open(projectform",{"_index":937,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.dialog.open(taskform",{"_index":1155,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.dialog.open(userform",{"_index":1257,"title":{},"body":{"components/TopHeader.html":{},"components/UserList.html":{}}}],["this.dialogref.close",{"_index":1304,"title":{},"body":{"components/UserForm.html":{}}}],["this.dialogref.close(true",{"_index":842,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["this.emitfilter.emit(this.selectedfilter",{"_index":609,"title":{},"body":{"components/Header.html":{}}}],["this.errormsg$.next('something",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errormsg$.next(response.msg",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.escaperegexp(searchterm.trim",{"_index":255,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.fb.group",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["this.fetchdata",{"_index":327,"title":{},"body":{"injectables/CronService.html":{}}}],["this.fetchprojects",{"_index":921,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.fetchtasks(this.projectid",{"_index":1135,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.fetchusers",{"_index":1332,"title":{},"body":{"components/UserList.html":{}}}],["this.filterdata",{"_index":1138,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.filteredtasks",{"_index":1137,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.form",{"_index":815,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["this.form.get('fullname')?.disable",{"_index":1297,"title":{},"body":{"components/UserForm.html":{}}}],["this.form.get('password')?.disable",{"_index":1299,"title":{},"body":{"components/UserForm.html":{}}}],["this.form.get('role')?.disable",{"_index":1300,"title":{},"body":{"components/UserForm.html":{}}}],["this.form.get('username')?.disable",{"_index":1298,"title":{},"body":{"components/UserForm.html":{}}}],["this.form.setvalue(pro",{"_index":831,"title":{},"body":{"components/ProjectForm.html":{},"components/UserForm.html":{}}}],["this.form.valid",{"_index":835,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["this.form.value",{"_index":837,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["this.getproject",{"_index":813,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.getuser",{"_index":1292,"title":{},"body":{"components/UserForm.html":{}}}],["this.getusers",{"_index":814,"title":{},"body":{"components/ProjectForm.html":{},"components/ProjectListComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${id",{"_index":1017,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}/${id",{"_index":1012,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${this.apiurl}?username=${email}&password=${password}`).pipe",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.baseurl}?userid=${userid}&_sort",{"_index":769,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(`${this.baseurl}projects",{"_index":647,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(apiurl",{"_index":267,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.http.get(this.apiurl",{"_index":1011,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["this.http.get(url",{"_index":1231,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.patch(`${this.apiurl}/${id",{"_index":1016,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.http.patch(`${this.baseurl}/${id",{"_index":770,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(this.apiurl",{"_index":1015,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["this.http.post(this.baseurl",{"_index":771,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.initchartdata",{"_index":437,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.isloading",{"_index":457,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["this.ismobile",{"_index":635,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.kpis",{"_index":466,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.loginform.value",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ngzone.run",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notifications",{"_index":743,"title":{},"body":{"components/Notification.html":{}}}],["this.notifications$.pipe",{"_index":750,"title":{},"body":{"components/Notification.html":{}}}],["this.notifications$.pipe(map",{"_index":747,"title":{},"body":{"components/Notification.html":{}}}],["this.notificationservice",{"_index":349,"title":{},"body":{"injectables/CronService.html":{},"components/ProjectForm.html":{}}}],["this.notificationservice.getnotifications(this.currentuser.id",{"_index":749,"title":{},"body":{"components/Notification.html":{}}}],["this.notificationservice.markasread(n.id).subscribe",{"_index":756,"title":{},"body":{"components/Notification.html":{}}}],["this.notifyuser(result",{"_index":847,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.observer.observe(['(max",{"_index":632,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.paginator",{"_index":924,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.projectchartdata",{"_index":489,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.projectdata",{"_index":829,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectdata.assignedto",{"_index":823,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectdata.deadlinedate",{"_index":821,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectdata.description",{"_index":826,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectdata.id",{"_index":838,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectdata.name",{"_index":816,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectdata.startdate",{"_index":818,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectdata.status",{"_index":824,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectid",{"_index":812,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskListComponent.html":{}}}],["this.projects",{"_index":331,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["this.projects.find((p",{"_index":346,"title":{},"body":{"injectables/CronService.html":{}}}],["this.projects.length",{"_index":472,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.projectservice.addproject(updatedproject",{"_index":840,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectservice.deleteproject(projectid).subscribe",{"_index":940,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectservice.fetchprojects",{"_index":344,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{}}}],["this.projectservice.fetchprojects().subscribe",{"_index":933,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectservice.getproject(this.projectid).subscribe",{"_index":827,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.projectservice.updateproject(updatedproject",{"_index":839,"title":{},"body":{"components/ProjectForm.html":{}}}],["this.route.snapshot.parammap.get('projectid",{"_index":1134,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/projects",{"_index":945,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.router.navigate(['/unauthorized",{"_index":1046,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.router.navigate(['login",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.schedulemidnightcheck",{"_index":311,"title":{},"body":{"injectables/CronService.html":{}}}],["this.scheduletaskatparticulartime",{"_index":384,"title":{},"body":{"injectables/CronService.html":{}}}],["this.searchinput.asobservable().pipe",{"_index":232,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.searchinput.next(term",{"_index":252,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.snackbar",{"_index":272,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.snackbar.openfromcomponent(toastercomponent",{"_index":271,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.sort",{"_index":926,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.sort.active",{"_index":928,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.sort.direction",{"_index":929,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.sort.sortchange.emit",{"_index":931,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.sortfield",{"_index":1142,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.statusfilter",{"_index":1139,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.sub",{"_index":1329,"title":{},"body":{"components/UserList.html":{}}}],["this.sub?.unsubscribe",{"_index":1337,"title":{},"body":{"components/UserList.html":{}}}],["this.taskchartdata",{"_index":476,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.taskid",{"_index":1086,"title":{},"body":{"components/TaskForm.html":{}}}],["this.tasks",{"_index":345,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/TaskListComponent.html":{}}}],["this.tasks.filter((task",{"_index":333,"title":{},"body":{"injectables/CronService.html":{}}}],["this.tasks.length",{"_index":470,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.taskservice.addtasks(updatedtask",{"_index":1096,"title":{},"body":{"components/TaskForm.html":{}}}],["this.taskservice.deletetasks(id).subscribe((res",{"_index":1156,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.fetchtasks",{"_index":343,"title":{},"body":{"injectables/CronService.html":{},"components/DashboardComponent.html":{}}}],["this.taskservice.fetchtasks(projectid).subscribe((res",{"_index":1136,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.updatetasks",{"_index":1158,"title":{},"body":{"components/TaskListComponent.html":{}}}],["this.taskservice.updatetasks(updatedtask",{"_index":1095,"title":{},"body":{"components/TaskForm.html":{}}}],["this.unreadcount",{"_index":746,"title":{},"body":{"components/Notification.html":{}}}],["this.updatedatasource",{"_index":934,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.userdata",{"_index":1302,"title":{},"body":{"components/UserForm.html":{}}}],["this.userdata.fullname",{"_index":1293,"title":{},"body":{"components/UserForm.html":{}}}],["this.userdata.password",{"_index":1295,"title":{},"body":{"components/UserForm.html":{}}}],["this.userdata.role",{"_index":1296,"title":{},"body":{"components/UserForm.html":{}}}],["this.userdata.username",{"_index":1294,"title":{},"body":{"components/UserForm.html":{}}}],["this.userid",{"_index":1288,"title":{},"body":{"components/UserForm.html":{}}}],["this.users",{"_index":461,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["this.users.length",{"_index":468,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.userservice.adduser(updateduser",{"_index":1308,"title":{},"body":{"components/UserForm.html":{}}}],["this.userservice.deleteuser(userid).subscribe",{"_index":1334,"title":{},"body":{"components/UserList.html":{}}}],["this.userservice.fetchusers",{"_index":458,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.userservice.fetchusers().subscribe",{"_index":1333,"title":{},"body":{"components/UserList.html":{}}}],["this.userservice.getuser(this.userid).subscribe",{"_index":1301,"title":{},"body":{"components/UserForm.html":{}}}],["this.userservice.updateuser(updateduser",{"_index":1306,"title":{},"body":{"components/UserForm.html":{}}}],["throwerror",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":369,"title":{},"body":{"injectables/CronService.html":{},"pipes/DuedatePipe.html":{}}}],["timer",{"_index":739,"title":{},"body":{"components/Notification.html":{}}}],["timer(0",{"_index":744,"title":{},"body":{"components/Notification.html":{}}}],["title",{"_index":22,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/ProjectListComponent.html":{}}}],["toaster",{"_index":79,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["toastercomponent",{"_index":78,"title":{"components/ToasterComponent.html":{}},"body":{"components/App.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["today",{"_index":328,"title":{},"body":{"injectables/CronService.html":{},"pipes/DuedatePipe.html":{}}}],["today.gettime",{"_index":338,"title":{},"body":{"injectables/CronService.html":{},"pipes/DuedatePipe.html":{}}}],["today.sethours(0",{"_index":329,"title":{},"body":{"injectables/CronService.html":{},"pipes/DuedatePipe.html":{}}}],["token",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["tomato",{"_index":1198,"title":{},"body":{"components/TaskListComponent.html":{}}}],["tomorrow",{"_index":380,"title":{},"body":{"injectables/CronService.html":{}}}],["tools",{"_index":1449,"title":{},"body":{"index.html":{}}}],["top",{"_index":81,"title":{},"body":{"components/App.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["topheader",{"_index":80,"title":{"components/TopHeader.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["total",{"_index":469,"title":{},"body":{"components/DashboardComponent.html":{}}}],["trackbylabel",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{}}}],["trackbylabel(index",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{}}}],["transform",{"_index":565,"title":{},"body":{"pipes/DuedatePipe.html":{},"components/TaskListComponent.html":{},"pipes/UserNamePipe.html":{}}}],["transform(value",{"_index":566,"title":{},"body":{"pipes/DuedatePipe.html":{},"pipes/UserNamePipe.html":{}}}],["transition",{"_index":983,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["triggersearch",{"_index":198,"title":{},"body":{"injectables/CommonService.html":{}}}],["triggersearch(term",{"_index":229,"title":{},"body":{"injectables/CommonService.html":{}}}],["true",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectListComponent.html":{},"guards/RoleGuard.html":{},"components/ToasterComponent.html":{},"components/UserForm.html":{}}}],["try",{"_index":224,"title":{},"body":{"injectables/CommonService.html":{},"components/ProjectForm.html":{}}}],["tslib",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["txt",{"_index":1196,"title":{},"body":{"components/TaskListComponent.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/App.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"interfaces/Projects.html":{},"guards/RoleGuard.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"interfaces/Tasks.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"interfaces/userDialogData.html":{},"miscellaneous/variables.html":{}}}],["u.id",{"_index":1348,"title":{},"body":{"pipes/UserNamePipe.html":{}}}],["un",{"_index":83,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["unauthorize",{"_index":82,"title":{"components/UnAuthorize.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["undefined",{"_index":1291,"title":{},"body":{"components/UserForm.html":{}}}],["unit",{"_index":1467,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1346,"title":{},"body":{"pipes/UserNamePipe.html":{}}}],["unreadcount",{"_index":722,"title":{},"body":{"components/Notification.html":{}}}],["update",{"_index":859,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["updated",{"_index":843,"title":{},"body":{"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/UserForm.html":{}}}],["updatedatasource",{"_index":876,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["updatedproject",{"_index":836,"title":{},"body":{"components/ProjectForm.html":{}}}],["updatedtask",{"_index":1093,"title":{},"body":{"components/TaskForm.html":{}}}],["updateduser",{"_index":1305,"title":{},"body":{"components/UserForm.html":{}}}],["updateduser['creationdate",{"_index":1307,"title":{},"body":{"components/UserForm.html":{}}}],["updateproject",{"_index":999,"title":{},"body":{"injectables/ProjectService.html":{}}}],["updateproject(project",{"_index":1007,"title":{},"body":{"injectables/ProjectService.html":{}}}],["updatestatus",{"_index":1109,"title":{},"body":{"components/TaskListComponent.html":{}}}],["updatestatus(id",{"_index":1125,"title":{},"body":{"components/TaskListComponent.html":{}}}],["updatetasks",{"_index":1220,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetasks(project",{"_index":1226,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateuser",{"_index":1352,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(user",{"_index":1357,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":1228,"title":{},"body":{"injectables/TaskService.html":{}}}],["urlsegment",{"_index":1035,"title":{},"body":{"guards/RoleGuard.html":{}}}],["use",{"_index":364,"title":{},"body":{"injectables/CronService.html":{},"index.html":{}}}],["used",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":86,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{}}}],["user.fullname",{"_index":858,"title":{},"body":{"components/ProjectForm.html":{},"pipes/UserNamePipe.html":{}}}],["user?.role",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata",{"_index":1279,"title":{},"body":{"components/UserForm.html":{}}}],["userdialogdata",{"_index":1281,"title":{"interfaces/userDialogData.html":{}},"body":{"components/UserForm.html":{},"coverage.html":{},"interfaces/userDialogData.html":{}}}],["userform",{"_index":85,"title":{"components/UserForm.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["userid",{"_index":351,"title":{},"body":{"injectables/CronService.html":{},"injectables/NotificationService.html":{},"interfaces/Notifications.html":{},"components/ProjectForm.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["userlist",{"_index":87,"title":{"components/UserList.html":{}},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{},"coverage.html":{}}}],["username",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"interfaces/Users.html":{}}}],["usernamepipe",{"_index":864,"title":{"pipes/UserNamePipe.html":{}},"body":{"components/ProjectListComponent.html":{},"pipes/UserNamePipe.html":{},"coverage.html":{}}}],["users",{"_index":153,"title":{"interfaces/Users.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{}}}],["users.find(u",{"_index":1347,"title":{},"body":{"pipes/UserNamePipe.html":{}}}],["users/user",{"_index":450,"title":{},"body":{"components/DashboardComponent.html":{},"components/TopHeader.html":{}}}],["userservice",{"_index":414,"title":{"injectables/UserService.html":{}},"body":{"components/DashboardComponent.html":{},"components/UserForm.html":{},"components/UserList.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":1426,"title":{},"body":{"index.html":{}}}],["validators",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["validators.required",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/TaskForm.html":{},"components/UserForm.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/App.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"pipes/DuedatePipe.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/Kpis.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"injectables/NotificationService.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectService.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/UserForm.html":{},"components/UserList.html":{},"pipes/UserNamePipe.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":51,"title":{},"body":{"components/App.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFound.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UnAuthorize.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["variable",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1500,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1428,"title":{},"body":{"index.html":{},"properties.html":{}}}],["verticalposition",{"_index":278,"title":{},"body":{"injectables/CommonService.html":{}}}],["view",{"_index":1262,"title":{},"body":{"components/TopHeader.html":{}}}],["viewchild",{"_index":444,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["viewchild(basechartdirective",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{}}}],["viewchild(matpaginator",{"_index":904,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["viewchild(matsidenav",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(matsort",{"_index":908,"title":{},"body":{"components/ProjectListComponent.html":{},"components/UserList.html":{}}}],["viewprofile",{"_index":1247,"title":{},"body":{"components/TopHeader.html":{}}}],["visibility",{"_index":1261,"title":{},"body":{"components/TopHeader.html":{}}}],["visit",{"_index":1492,"title":{},"body":{"index.html":{}}}],["void",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CronService.html":{},"components/DashboardComponent.html":{},"components/Header.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/Notification.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/SearchInput.html":{},"components/TaskForm.html":{},"components/TaskListComponent.html":{},"components/ToasterComponent.html":{},"components/TopHeader.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["weight",{"_index":543,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{}}}],["went",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["whenever",{"_index":1442,"title":{},"body":{"index.html":{}}}],["white",{"_index":1190,"title":{},"body":{"components/TaskListComponent.html":{}}}],["width",{"_index":557,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/TopHeader.html":{},"components/UserList.html":{}}}],["withinterceptors([handlehttpinterceptor",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrap",{"_index":1170,"title":{},"body":{"components/TaskListComponent.html":{}}}],["wrapper",{"_index":551,"title":{},"body":{"components/DashboardComponent.html":{}}}],["wrong",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProjectForm.html":{},"components/ProjectListComponent.html":{},"components/TaskForm.html":{},"components/UserForm.html":{},"components/UserList.html":{}}}],["x",{"_index":967,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["y",{"_index":512,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{}}}],["yes",{"_index":892,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"injectables/TaskService.html":{},"components/UserList.html":{}}}],["you're",{"_index":710,"title":{},"body":{"components/NotFound.html":{}}}],["you\\'re",{"_index":715,"title":{},"body":{"components/NotFound.html":{}}}],["you’ve",{"_index":849,"title":{},"body":{"components/ProjectForm.html":{}}}],["yy",{"_index":953,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TaskListComponent.html":{},"components/UserList.html":{}}}],["z",{"_index":1210,"title":{},"body":{"components/TaskListComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cronService: CronService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cronService\n                                                  \n                                                        \n                                                                        CronService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'angular-assesment'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CronService } from './core/services/cron-service';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  constructor(private cronService: CronService) {\n\n  }\n  protected title = 'angular-assesment';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/gaurds/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/gaurds/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/gaurds/auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../authService/auth-service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authService/auth-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                getUserRole\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, platformId: Object, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/authService/auth-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/authService/auth-service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUserRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/authService/auth-service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/authService/auth-service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/authService/auth-service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/authService/auth-service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authService/auth-service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ChangeDetectorRef, Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError, map, Observable, of } from 'rxjs';\nimport { Users } from '../../core/models/user.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  public apiUrl = 'http://localhost:3000/users';\n  constructor(\n    private router: Router,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private http: HttpClient,\n  ) {}\n\n  public login(\n  email: string,\n  password: string\n): Observable {\n  return this.http.get(`${this.apiUrl}?userName=${email}&password=${password}`).pipe(\n    map((result) => {\n      if (result[0]) {\n        const fakeToken = 'dummy-jwt-token';\n        const user = {\n          id: result[0].id,\n          role: result[0].role,\n        };\n\n        if (isPlatformBrowser(this.platformId)) {\n          localStorage.setItem('token', fakeToken);\n          localStorage.setItem('user', JSON.stringify(user));\n        }\n\n        return { msg: 'Login Successfully', status: 200 };\n      } else {\n        return { msg: 'Invalid Credentials', status: 401 };\n      }\n    }),\n    catchError(() => of({ msg: 'Something went wrong', status: 500 }))\n  );\n}\n\n\n  public logout() {\n    localStorage.clear();\n    this.router.navigate(['/login']);\n  }\n\n  public getUserRole(): string | null {\n      if (isPlatformBrowser(this.platformId)) {\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    return user?.role || null;\n    }\n    return null\n  }\n\n  public isAuthenticated(): boolean {\n    if (isPlatformBrowser(this.platformId)) {\n      return !!localStorage.getItem('token');\n    }\n    return false;\n  }\n\n  public getToken() {\n      if (isPlatformBrowser(this.platformId)) {\n      return localStorage.getItem('token');\n    }\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/commonService/common-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search$\n                            \n                            \n                                    Private\n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                escapeRegExp\n                            \n                            \n                                    Public\n                                fetchUsers\n                            \n                            \n                                    Public\n                                filteredSearchData\n                            \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getOverdueProjects\n                            \n                            \n                                    Public\n                                getOverdueTasks\n                            \n                            \n                                    Public\n                                openFailureSnackBar\n                            \n                            \n                                    Public\n                                openSuccessSnackBar\n                            \n                            \n                                    Public\n                                triggerSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/commonService/common-service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        escapeRegExp\n                        \n                    \n                \n            \n            \n                \n                        \n                    escapeRegExp(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filteredSearchData\n                        \n                    \n                \n            \n            \n                \n                        \n                    filteredSearchData(searchTerm: string, data: any, keysToSearch: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keysToSearch\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOverdueProjects\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOverdueProjects(projects: Projects[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projects\n                                            \n                                                            Projects[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Projects[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOverdueTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOverdueTasks(tasks: Tasks[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tasks\n                                            \n                                                            Tasks[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Tasks[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openFailureSnackBar\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFailureSnackBar(message: string, action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'try again!'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openSuccessSnackBar\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSuccessSnackBar(message: string, action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'ok'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        triggerSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    triggerSearch(term: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/commonService/common-service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                term\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        search$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.searchInput.asObservable().pipe(\n    debounceTime(500),\n    shareReplay(1) // So late subscribers get the last value\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/commonService/common-service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/commonService/common-service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { debounceTime, Observable, shareReplay, Subject } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToasterComponent } from '../../../shared/components/toaster-component/toaster-component';\nimport { Projects } from '../../models/project.model';\nimport { Tasks } from '../../models/task.model';\nimport { Users } from '../../models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommonService {\n  private searchInput = new Subject();\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  // Debounced, shared observable\n  public search$: Observable = this.searchInput.asObservable().pipe(\n    debounceTime(500),\n    shareReplay(1) // So late subscribers get the last value\n  );\n\n  public triggerSearch(term: string) {\n    this.searchInput.next(term);\n  }\n\n  public filteredSearchData(\n    searchTerm: string,\n    data: any,\n    keysToSearch: string[]\n  ) {\n    if (!searchTerm?.trim()) return data;\n\n    const escapedTerm = this.escapeRegExp(searchTerm.trim());\n    const regex = new RegExp(escapedTerm, 'i'); // 'i' for case-insensitive\n\n    return data.filter((item: any) =>\n      keysToSearch.some((key) => regex.test(item[key]))\n    );\n  }\n\n  private escapeRegExp(text: string): string {\n    return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // escape special regex chars\n  }\n\n  public fetchUsers(): Observable {\n    const apiUrl = 'http://localhost:3000/users';\n    return this.http.get(apiUrl);\n  }\n\n  //Snackbar that opens with success background\n  public openSuccessSnackBar(message: string, action: string = 'ok') {\n    this.snackBar.openFromComponent(ToasterComponent,\n      {\n     data: {\n      message: message,\n      action: action,\n      type: 'success',\n      snackBar: this.snackBar\n     },\n      duration: 3000,\n      panelClass: ['success-snackbar'],\n      horizontalPosition: 'center',\n      verticalPosition: 'top',\n    });\n  }\n  //Snackbar that opens with failure background\n  public openFailureSnackBar(message: string, action: string = 'try again!') {\n    this.snackBar.openFromComponent(ToasterComponent,\n      {\n     data: {\n      message: message,\n      action: action,\n      type: 'error',\n      snackBar: this.snackBar\n     },\n      duration: 3000000,\n      panelClass: 'error-snackbar',\n      horizontalPosition: 'center',\n      verticalPosition: 'top',\n    });\n  }\n\n  public getCurrentUser(): { id: string; role: string } {\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    return user;\n  }\n\n  public getOverdueTasks(tasks: Tasks[]): Tasks[] {\n    const now = new Date();\n    return tasks.filter((task) => {\n      const due = new Date(task.dueDate);\n      return task.status !== 'Done' && due  {\n      const due = new Date(task.deadlineDate);\n      return task.status !== 'Done' && due \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronService.html":{"url":"injectables/CronService.html","title":"injectable - CronService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CronService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cron-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkOverdueTasks\n                            \n                            \n                                    Private\n                                createNotification\n                            \n                            \n                                    Public\n                                    Async\n                                fetchData\n                            \n                            \n                                    Private\n                                scheduleMidnightCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, taskService: TaskService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/cron-service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkOverdueTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkOverdueTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cron-service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNotification(task: Tasks)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cron-service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Tasks\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        fetchData\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cron-service.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scheduleMidnightCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    scheduleMidnightCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cron-service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Projects[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cron-service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cron-service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectService } from '../../projects/project-service';\nimport { TaskService } from '../../tasks/task-service';\nimport { firstValueFrom, forkJoin, takeUntil } from 'rxjs';\nimport { NotificationService } from './notification-service';\nimport { Projects } from '../models/project.model';\nimport { Tasks } from '../models/task.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CronService {\n  public tasks: Tasks[] = [];\n  public projects: Projects[] = [];\n\n  constructor(\n    private projectService: ProjectService,\n    private taskService: TaskService,\n    private notificationService: NotificationService\n  ) {\n    this.scheduleMidnightCheck();\n  }\n\n  private scheduleMidnightCheck() {\n    const now = new Date();\n    const nextMidnight = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate() + 1,\n      0,\n      0,\n      0,\n      0\n    );\n\n    const msUntilMidnight = nextMidnight.getTime() - now.getTime();\n\n    setTimeout(() => {\n      this.checkOverdueTasks();\n      this.scheduleMidnightCheck(); // schedule again for the next day\n    }, msUntilMidnight);\n  }\n\n  public async checkOverdueTasks() {\n    await this.fetchData();\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    console.log(this.tasks, this.projects);\n    const overdueToday = this.tasks.filter((task) => {\n      if (!task.dueDate || task.status.toLowerCase() === 'Done') return false;\n\n      const due = new Date(task.dueDate);\n      due.setHours(0, 0, 0, 0);\n      console.log(due.getTime() === today.getTime());\n      return due.getTime() === today.getTime();\n    });\n\n    overdueToday.forEach((task) => {\n      console.log(task);\n      this.createNotification(task);\n    });\n  }\n\n  public async fetchData(): Promise {\n    const [tasks, projects] = await firstValueFrom(\n      forkJoin([\n        this.taskService.fetchTasks(),\n        this.projectService.fetchProjects(),\n      ])\n    );\n    this.tasks = tasks;\n    this.projects = projects;\n  }\n  private createNotification(task: Tasks) {\n    const project = this.projects.find((p) => p.id == task.projectId);\n\n    if (project) {\n      this.notificationService\n        .create({\n          userId: project.assignedTo,\n          type: 'task-overdue',\n          message: `Task ${task.name} will be overdue today`,\n          projectId: project.id,\n          taskId: task.id,\n          read: false,\n          createdAt: new Date().toISOString(),\n        })\n        .subscribe();\n    }\n  }\n\n  // this function use forn testing that it emit at particular time for testing purpose \n\n  // private scheduleTaskAtParticularTime() {\n  //   const now = new Date();\n  //   const target = new Date();\n\n  //   target.setHours(3, 46, 0, 0); // 3:46 AM today\n\n  //   // If it's already past 3:21 AM, schedule for tomorrow\n  //   if (now > target) {\n  //     target.setDate(target.getDate() + 1);\n  //   }\n\n  //   const delay = target.getTime() - now.getTime();\n\n  //   setTimeout(() => {\n  //     this.checkOverdueTasks();\n  //     this.scheduleTaskAtParticularTime(); // Reschedule for the next day\n  //   }, delay);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard-component/dashboard-component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            BaseChartDirective\n                                materialImports\n                \n            \n\n            \n                styleUrls\n                ./dashboard-component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard-component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                chart\n                            \n                            \n                                    Public\n                                chartOptions\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                kpis\n                            \n                            \n                                    Public\n                                projectChartData\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                taskChartData\n                            \n                            \n                                    Public\n                                tasks\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildDashboard\n                            \n                            \n                                    Private\n                                countByStatus\n                            \n                            \n                                    Private\n                                initChartData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackByLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, projectService: ProjectService, taskService: TaskService, commonService: CommonService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildDashboard\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildDashboard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        countByStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    countByStatus(items: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:143\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initChartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:153\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByLabel\n                        \n                    \n                \n            \n            \n                \ntrackByLabel(index: number, item: Kpis)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                            Kpis\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BaseChartDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(BaseChartDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ChartOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    responsive: true,\n    maintainAspectRatio: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        kpis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kpis[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectChartData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.initChartData()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Projects[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskChartData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.initChartData()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard-component/dashboard-component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ViewChild,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Chart, ChartDataset, ChartOptions, registerables } from 'chart.js';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { UserService } from '../../users/user-service';\nimport { ProjectService } from '../../projects/project-service';\nimport { TaskService } from '../../tasks/task-service';\nimport { CommonService } from '../../core/services/commonService/common-service';\nimport { Kpis } from '../../core/models/dashboard.model';\nimport { forkJoin, Subject, takeUntil } from 'rxjs';\nimport { materialImports } from '../../core/models/material.imports';\nimport { Projects } from '../../core/models/project.model';\nimport { Tasks } from '../../core/models/task.model';\nimport { Users } from '../../core/models/user.model';\n\nChart.register(...registerables);\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, BaseChartDirective, materialImports],\n  templateUrl: './dashboard-component.html',\n  styleUrls: ['./dashboard-component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardComponent {\n  public users: Users[] = [];\n  public tasks: Tasks[] = [];\n  public projects: Projects[] = [];\n  public kpis: Kpis[] = [];\n  public isLoading: boolean = false;\n\n  public taskChartData = this.initChartData();\n  public projectChartData = this.initChartData();\n\n  public chartOptions: ChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n  };\n  private destroy$ = new Subject();\n\n  @ViewChild(BaseChartDirective) chart?: BaseChartDirective;\n\n  constructor(\n    private userService: UserService,\n    private projectService: ProjectService,\n    private taskService: TaskService,\n    private commonService: CommonService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    forkJoin([\n      this.userService.fetchUsers(),\n      this.taskService.fetchTasks(),\n      this.projectService.fetchProjects(),\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([users, tasks, projects]) => {\n        this.users = users;\n        this.tasks = tasks;\n        this.projects = projects;\n\n        requestIdleCallback(() => {\n          this.buildDashboard();\n          this.isLoading = false;\n          this.cdr.detectChanges();\n        });\n      });\n  }\n\n  trackByLabel(index: number, item: Kpis): string {\n    return item.label;\n  }\n\n  private buildDashboard(): void {\n    // KPIs\n    this.kpis = [\n      { label: 'Users', value: this.users.length },\n      { label: 'Total Tasks', value: this.tasks.length },\n      {\n        label: 'Overdue Tasks',\n        value: this.commonService.getOverdueTasks(this.tasks).length,\n      },\n      { label: 'Total Projects', value: this.projects.length },\n      {\n        label: 'Overdue Projects',\n        value: this.commonService.getOverdueProjects(this.projects).length,\n      },\n    ];\n\n    // Tasks Chart\n    const taskStatus = this.countByStatus(this.tasks);\n    this.taskChartData = {\n      labels: ['Done', 'In Progress', 'To Do'],\n      datasets: [\n        {\n          data: [\n            taskStatus['done'] || 0,\n            taskStatus['in progress'] || 0,\n            taskStatus['to do'] || 0,\n          ],\n          backgroundColor: ['#32a864', '#8ba832', '#3432a8'],\n        },\n      ],\n    };\n\n    // Projects Chart\n    const projectStatus = this.countByStatus(this.projects);\n    this.projectChartData = {\n      labels: ['Done', 'In Progress', 'To Do'],\n      datasets: [\n        {\n          data: [\n            projectStatus['done'] || 0,\n            projectStatus['in progress'] || 0,\n            projectStatus['to do'] || 0,\n          ],\n          backgroundColor: ['#66BB6A', '#FFA726', '#EF5350'],\n        },\n      ],\n    };\n  }\n\n  private initChartData(): { labels: string[]; datasets: ChartDataset[] } {\n    return {\n      labels: ['Done', 'In Progress', 'To Do'],\n      datasets: [\n        {\n          data: [],\n          backgroundColor: ['#66BB6A', '#FFA726', '#EF5350'],\n        },\n      ],\n    };\n  }\n\n  private countByStatus(\n    items: T[]\n  ): { [key: string]: number } {\n    return items.reduce((acc, item) => {\n      const key = item.status.toLowerCase();\n      acc[key] = (acc[key] || 0) + 1;\n      return acc;\n    }, {} as { [key: string]: number });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      {{ kpi.label }}\n      {{ kpi.value }}\n    \n  \n\n  \n  \n\n    \n      Projects Status Overview\n      \n      \n      \n      \n    \n\n    \n        Tasks Status Overview\n      \n      \n      \n      \n    \n  \n\n\n  \n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./dashboard-component.scss\n                \n                .main-container {\n  height: calc(100% - 70px);\n  overflow-y: auto;\n\n  .loader {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .dashboard-container {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    padding: 24px;\n\n    .kpi-section {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n      gap: 16px;\n\n      .kpi-card {\n        padding: 16px;\n        text-align: center;\n        background: #f5f7fa;\n\n        .kpi-title {\n          font-size: 14px;\n          color: #777;\n        }\n\n        .kpi-value {\n          font-size: 24px;\n          font-weight: bold;\n          margin-top: 8px;\n        }\n      }\n    }\n\n    .charts-section {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 24px;\n\n      .chart-card {\n        padding: 16px;\n\n        .chart-title {\n          font-size: 18px;\n          font-weight: 600;\n          text-align: center;\n          margin: 12px 0 0 0;\n          color: #424242;\n        }\n\n        .chart-wrapper {\n          position: relative;\n          height: 300px;\n\n\n          canvas {\n            display: block;\n            width: 100% !important;\n            height: 100% !important;\n          }\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ kpi.label }}      {{ kpi.value }}                    Projects Status Overview                                        Tasks Status Overview                                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DuedatePipe.html":{"url":"pipes/DuedatePipe.html","title":"pipe - DuedatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DuedatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/duedate-pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        duedate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/duedate-pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'duedate'\n})\nexport class DuedatePipe implements PipeTransform {\n\n  transform(value: string | Date): string {\n    if (!value) return '-';\n\n    const targetDate = new Date(value);\n    const today = new Date();\n\n    // Set time to 0 to compare only dates\n    targetDate.setHours(0, 0, 0, 0);\n    today.setHours(0, 0, 0, 0);\n\n    const diffMs = targetDate.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffMs / (1000 * 60 * 60 * 24));\n\n    if (diffDays > 0) {\n      return `${diffDays} day${diffDays > 1 ? 's' : ''} left`;\n    } else if (diffDays  1 ? 's' : ''} overdue`;\n    } else {\n      return 'Today';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Header.html":{"url":"components/Header.html","title":"component - Header","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.html\n            \n\n\n\n            \n                styleUrl\n                ./header.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emit\n                            \n                            \n                                    Public\n                                emitAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                search\n                            \n                            \n                                selectedFilter\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                emitFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedFilter\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emitFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        emitAdd\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitAdd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/header/header.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { materialImports } from '../../../core/models/material.imports';\n\n@Component({\n  selector: 'app-header',\n  imports: [CommonModule, FormsModule, materialImports],\n  templateUrl: './header.html',\n  styleUrl: './header.scss'\n})\nexport class Header {\n\n  @Input() title: string = '';\n\n  @Input() selectedFilter: string = '';\n\n  @Input() search: boolean = false;\n\n  @Input() filter: boolean = false;\n\n@Output() emitFilter = new EventEmitter();\n\n@Output() add = new EventEmitter();\n\n  public emit() {\n    console.log('skjsjsjj')\n    this.emitFilter.emit(this.selectedFilter)\n  }\n\n  public emitAdd() {\n     this.add.emit()\n  }\n\n}\n\n    \n\n    \n         \n    \n        {{title}}\n       \n     \n    Sort\n    \n      None\n      Due Date\n      Priority\n    \n  \n    \n    \n        \n        add\n        Add New\n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             {{title}}                Sort          None      Due Date      Priority                              add        Add New            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Header'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/home-component/home-component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-component\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            RouterOutlet\n                                Notification\n                                TopHeader\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home-component.html\n            \n\n\n\n            \n                styleUrl\n                ./home-component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observer: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/home-component/home-component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observer\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/home-component/home-component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/home-component/home-component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSidenav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/home-component/home-component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { RouterModule, RouterOutlet } from '@angular/router';\nimport { Notification } from '../../../core/components/notification/notification';\nimport { TopHeader } from '../../../core/top-header/top-header';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { CommonModule } from '@angular/common';\nimport { materialImports } from '../../../core/models/material.imports';\n\n@Component({\n  selector: 'app-home-component',\n  imports: [\n    CommonModule,\n    RouterModule,\n    RouterOutlet,\n    Notification,\n    TopHeader,\n    materialImports,\n  ],\n  templateUrl: './home-component.html',\n  styleUrl: './home-component.scss',\n})\nexport class HomeComponent {\n  public isMobile: boolean = true;\n  @ViewChild(MatSidenav)\n  sidenav!: MatSidenav;\n\n  constructor(private observer: BreakpointObserver) {}\n\n  ngOnInit() {\n    this.observer.observe(['(max-width: 800px)']).subscribe((screenSize) => {\n      if (screenSize.matches) {\n        this.isMobile = true;\n      } else {\n        this.isMobile = false;\n      }\n      console.log(this.isMobile);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n    \n     analytics Dashboard\n     assignment Projects\n     people Users\n    \n  \n\n  \n    \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               analytics Dashboard     assignment Projects     people Users                      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http-service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getProjects\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/http-service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/http-service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n   public baseUrl = 'http://localhost:3000/';\n\n  constructor(private http: HttpClient) { }\n\n  public async getProjects() {\n    \n     const result = await this.http.get(`${this.baseUrl}projects`)\n    \n     console.log(result)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Kpis.html":{"url":"interfaces/Kpis.html","title":"interface - Kpis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Kpis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/dashboard.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Kpis {\n    label: string,\n    value: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader-service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader-service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login-component/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                commonService\n                            \n                            \n                                    Public\n                                errorMsg$\n                            \n                            \n                                    Private\n                                fb\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Private\n                                ngZone\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login-component/login.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-component/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-component/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-component/login.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-component/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    username: ['', [Validators.required]],\n    password: ['', Validators.required],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-component/login.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ngZone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgZone)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-component/login.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login-component/login.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  NgZone,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../authService/auth-service';\nimport { CommonService } from '../../core/services/commonService/common-service';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { materialImports } from '../../core/models/material.imports';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, materialImports],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  private fb = inject(FormBuilder);\n  private authService = inject(AuthService);\n  private router = inject(Router);\n  private commonService = inject(CommonService);\n  private ngZone = inject(NgZone);\n\n  public loginForm = this.fb.group({\n    username: ['', [Validators.required]],\n    password: ['', Validators.required],\n  });\n\n  public errorMsg$ = new BehaviorSubject(null);\n\n  public onSubmit(): void {\n    const { username, password } = this.loginForm.value;\n\n    this.authService\n      .login(username as string, password as string)\n      .pipe(\n        tap((response) => {\n          if (response.status === 200) {\n            this.commonService.openSuccessSnackBar(response.msg);\n            this.router.navigate(['/dashboard']);\n          } else {\n            this.ngZone.run(() => this.errorMsg$.next(response.msg));\n            this.commonService.openFailureSnackBar(response.msg);\n          }\n        }),\n        catchError((err) => {\n          this.commonService.openFailureSnackBar(err.msg || 'Login failed');\n          this.errorMsg$.next('Something went wrong');\n          return of();\n        })\n      )\n      .subscribe();\n  }\n}\n\n    \n\n    \n        \n  Login\n  \n    \n      \n        \n          \n        \n      \n\n      \n        \n          \n        \n      \n\n      \n        {{\n          error\n        }}\n      \n\n      \n        Login\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Login                                                                                                {{          error        }}                    Login            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFound.html":{"url":"components/NotFound.html","title":"component - NotFound","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/not-found/not-found.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  imports: [RouterModule],\n  templateUrl: './not-found.html',\n  styleUrl: './not-found.scss'\n})\nexport class NotFound {\n\n}\n\n    \n\n    \n        \n\n         404 \n        \n            Oops! The page you're\n            looking for is not here.\n        \n        \n            Go Back to Home\n        \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         404                     Oops! The page you\\'re            looking for is not here.                            Go Back to Home                '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFound'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Notification.html":{"url":"components/Notification.html","title":"component - Notification","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/notification/notification.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./notification.html\n            \n\n\n\n            \n                styleUrl\n                ./notification.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonService\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Public\n                                notifications$\n                            \n                            \n                                    Private\n                                notificationService\n                            \n                            \n                                    Public\n                                unreadCount$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/components/notification/notification.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    openNotification(n: Notifications)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/components/notification/notification.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            Notifications\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CommonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/notification/notification.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.commonService.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/notification/notification.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notifications$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : of([])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/notification/notification.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notificationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NotificationService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/notification/notification.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        unreadCount$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : of(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/notification/notification.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  inject,\n  OnInit,\n} from '@angular/core';\nimport { NotificationService } from '../../services/notification-service';\nimport { Notifications } from '../../models/notification.model';\nimport { CommonModule } from '@angular/common';\nimport { CommonService } from '../../services/commonService/common-service';\nimport { timer, Observable, of } from 'rxjs';\nimport { switchMap, map, shareReplay } from 'rxjs/operators';\nimport { materialImports } from '../../models/material.imports';\n\n@Component({\n  selector: 'app-notification',\n  standalone: true,\n  imports: [CommonModule, materialImports],\n  templateUrl: './notification.html',\n  styleUrl: './notification.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Notification implements OnInit {\n  private notificationService = inject(NotificationService);\n  private commonService = inject(CommonService);\n  private currentUser = this.commonService.getCurrentUser();\n\n  public notifications$: Observable = of([]);\n  public unreadCount$: Observable = of(0);\n\n  ngOnInit(): void {\n    if (!this.currentUser?.id) {\n      this.notifications$ = timer(0, 1000 * 30).pipe(map(() => []));\n      this.unreadCount$ = this.notifications$.pipe(map(() => 0));\n      return;\n    }\n\n    this.notifications$ = timer(0, 1000 * 30).pipe(\n      switchMap(() =>\n        this.notificationService.getNotifications(this.currentUser.id)\n      ),\n      shareReplay(1)\n    );\n\n    this.unreadCount$ = this.notifications$.pipe(\n      map((notifs) => notifs.filter((n) => !n.read).length)\n    );\n  }\n\n  public openNotification(n: Notifications): void {\n    if (!n.read && n.id) {\n      this.notificationService.markAsRead(n.id).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    notifications\n  \n\n\n\n  \n    \n    \n      {{ n.message }}\n      {{ n.createdAt | date: 'short' }}\n    \n    \n  \n\n  \n    No notifications\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      notifications                  {{ n.message }}      {{ n.createdAt | date: \\'short\\' }}                No notifications  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Notification'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                getNotifications\n                            \n                            \n                                    Public\n                                markAsRead\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notification-service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(notification: Notifications)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification-service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                notification\n                                            \n                                                            Notifications\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getNotifications\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNotifications(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification-service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        markAsRead\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAsRead(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/notification-service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/notifications'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Notifications } from '../models/notification.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private baseUrl = 'http://localhost:3000/notifications';\n\n  constructor(private http: HttpClient) {}\n\n public getNotifications(userId: string) {\n    return this.http.get(`${this.baseUrl}?userId=${userId}&_sort=-createdAt`);\n  }\n\n public markAsRead(id: string) {\n    return this.http.patch(`${this.baseUrl}/${id}`, { read: true });\n  }\n\n public create(notification: Notifications) {\n    return this.http.post(this.baseUrl, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notifications.html":{"url":"interfaces/Notifications.html","title":"interface - Notifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/notification.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            read\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            taskId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        read\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        read:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taskId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Notifications {\n  id?: string;\n  userId: string;\n  type: string;\n  message: string;\n  projectId?: string;\n  taskId?: string;\n  read: boolean;\n  createdAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectForm.html":{"url":"components/ProjectForm.html","title":"component - ProjectForm","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/project-form/project-form.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNativeDateAdapter()\n                \n            \n\n\n            \n                selector\n                app-project-form\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./project-form.html\n            \n\n\n\n            \n                styleUrl\n                ./project-form.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentDate\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                projectData\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statuses\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getProject\n                            \n                            \n                                    Private\n                                getUsers\n                            \n                            \n                                    Private\n                                notifyUser\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, data: any, dialogRef: MatDialogRef, projectService: ProjectService, commonService: CommonService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/project-form/project-form.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getProject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-form/project-form.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-form/project-form.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notifyUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyUser(project: Projects)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-form/project-form.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            Projects\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-form/project-form.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-form/project-form.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-form/project-form.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-form/project-form.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-form/project-form.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as Projects\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-form/project-form.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-form/project-form.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['To Do', 'In Progress', 'Done']\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-form/project-form.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [{ id: '', fullName: '' }]\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-form/project-form.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { provideNativeDateAdapter } from '@angular/material/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ProjectService } from '../project-service';\nimport { CommonService } from '../../core/services/commonService/common-service';\nimport { NotificationService } from '../../core/services/notification-service';\nimport { materialImports } from '../../core/models/material.imports';\nimport { Projects } from '../../core/models/project.model';\n\n@Component({\n  selector: 'app-project-form',\n  imports: [CommonModule, ReactiveFormsModule, materialImports],\n  providers: [provideNativeDateAdapter()],\n  templateUrl: './project-form.html',\n  styleUrl: './project-form.scss',\n})\nexport class ProjectForm {\n  public form: FormGroup;\n  public currentDate: Date = new Date();\n  public projectId: number = 0;\n  public users: { id: string; fullName: string }[] = [{ id: '', fullName: '' }];\n  public statuses = ['To Do', 'In Progress', 'Done'];\n  public projectData = {} as Projects;\n\n  constructor(\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef,\n    private projectService: ProjectService,\n    private commonService: CommonService,\n    private notificationService: NotificationService\n  ) {\n    if (this.data && this.data.id) {\n      this.projectId = this.data.id;\n      this.getProject();\n    }\n    this.getUsers();\n    this.form = this.fb.group({\n      name: [this.projectData.name || '', Validators.required],\n      startDate: [\n        this.projectData.startDate || this.currentDate,\n        Validators.required,\n      ],\n      deadlineDate: [this.projectData.deadlineDate || ''],\n      assignedTo: [this.projectData.assignedTo || '', Validators.required],\n      status: [this.projectData.status || '', Validators.required],\n      description: [this.projectData.description || '', [Validators.required]],\n    });\n  }\n\n  private getProject() {\n    this.projectService.getProject(this.projectId).subscribe(\n      (response) => {\n        this.projectData = response;\n        const { id, ...pro } = response;\n        this.form.setValue(pro);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  private getUsers() {\n    this.commonService.fetchUsers().subscribe((res) => {\n      this.users = res.map(({ id, fullName }) => ({ id, fullName }));\n    });\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      const UpdatedProject = { ...this.form.value, id: this.projectData.id };\n\n      const response = this.projectId\n        ? this.projectService.updateProject(UpdatedProject, this.projectId)\n        : this.projectService.addProject(UpdatedProject);\n\n      response.subscribe(\n        (result) => {\n          if (result) {\n            this.dialogRef.close(true);\n            const message = this.projectId\n              ? 'Project Updated'\n              : 'Project Created';\n            this.commonService.openSuccessSnackBar(message, 'ok');\n            if (result.assignedTo !== this.projectData.assignedTo) {\n              this.notifyUser(result);\n            }\n          }\n        },\n        (error) => {\n          this.commonService.openFailureSnackBar(\n            'something went wrong',\n            'try again!'\n          );\n        }\n      );\n    }\n  }\n\n  private notifyUser(project: Projects) {\n    this.notificationService\n      .create({\n        userId: project.assignedTo,\n        type: 'new-assignment',\n        message: `You’ve been assigned to Project ${project.name}`,\n        projectId: project.id,\n        read: false,\n        createdAt: new Date().toISOString(),\n      })\n      .subscribe(\n        () => {},\n        (err) => {\n          this.commonService.openFailureSnackBar(\n            'something went wrong',\n            'try again!'\n          );\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n  \n  {{projectId ? 'Edit' : 'Add'}}{{form.value.name ? form.value.name : 'New Project'}}\n  \n  \n    \n\n      \n        Name\n        \n      \n\n      \n        Start Date\n        \n        \n        \n      \n\n      \n        Deadline\n        \n        \n        \n      \n\n      \n        Assigned\n        \n          {{ user.fullName }}\n        \n      \n\n      \n        Status\n        \n          {{ s }}\n        \n      \n\n      \n        Description\n        \n      \n\n      \n        \n          {{projectId ? 'Update' : 'Add'}}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{projectId ? \\'Edit\\' : \\'Add\\'}}{{form.value.name ? form.value.name : \\'New Project\\'}}                      Name                            Start Date                                            Deadline                                            Assigned                  {{ user.fullName }}                            Status                  {{ s }}                            Description                                      {{projectId ? \\'Update\\' : \\'Add\\'}}                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectListComponent.html":{"url":"components/ProjectListComponent.html","title":"component - ProjectListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/project-list/project-list.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                                ProjectForm\n                                Header\n                            DuedatePipe\n                                materialImports\n                            UserNamePipe\n                \n            \n\n            \n                styleUrls\n                ./project-list.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-list.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    \n                                paginator\n                            \n                            \n                                    Private\n                                projects\n                            \n                            \n                                    \n                                sort\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addNew\n                            \n                            \n                                    Private\n                                fetchProjects\n                            \n                            \n                                    Private\n                                getUsers\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDelete\n                            \n                            \n                                    Public\n                                openForm\n                            \n                            \n                                    Public\n                                redirectToTask\n                            \n                            \n                                    Private\n                                updateDatasource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, commonService: CommonService, projectService: ProjectService, router: Router, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/project-list/project-list.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addNew\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNew()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchProjects\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:159\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDelete(projectId: number, projectName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projectName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    openForm(id?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        redirectToTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    redirectToTask(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateDatasource\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDatasource()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-list/project-list.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource([])\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-list/project-list.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-list/project-list.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'id',\n    'name',\n    'assignTo',\n    'status',\n    'startDate',\n    'deadline',\n    'description',\n    'actions',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-list/project-list.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-list/project-list.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-list/project-list.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Projects[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-list/project-list.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-list/project-list.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-list/project-list.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ProjectForm } from '../project-form/project-form';\nimport { Header } from '../../shared/components/header/header';\nimport { CommonService } from '../../core/services/commonService/common-service';\nimport { DuedatePipe } from '../../shared/pipes/duedate-pipe';\nimport { ProjectService } from '../project-service';\nimport { Router } from '@angular/router';\nimport { UserNamePipe } from '../../shared/pipes/user-name-pipe';\nimport { materialImports } from '../../core/models/material.imports';\nimport { Projects } from '../../core/models/project.model';\nimport { Users } from '../../core/models/user.model';\n\n@Component({\n  selector: 'app-project-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProjectForm,\n    Header,\n    DuedatePipe,\n    materialImports,\n    UserNamePipe,\n  ],\n  templateUrl: './project-list.html',\n  styleUrls: ['./project-list.scss'],\n})\nexport class ProjectListComponent implements OnInit, OnDestroy {\n  public displayedColumns: string[] = [\n    'id',\n    'name',\n    'assignTo',\n    'status',\n    'startDate',\n    'deadline',\n    'description',\n    'actions',\n  ];\n\n  public dataSource = new MatTableDataSource([]);\n  public isLoading = false;\n\n  private destroy$ = new Subject();\n  private projects: Projects[] = [];\n  public users: Users[] = [];\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private dialog: MatDialog,\n    private commonService: CommonService,\n    private projectService: ProjectService,\n    private router: Router,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.commonService.search$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((term) => {\n        const filtered = this.commonService.filteredSearchData(\n          term,\n          this.projects,\n          ['name', 'status']\n        );\n        this.dataSource.data = filtered;\n        this.cdr.detectChanges();\n      });\n\n    this.getUsers();\n  }\n\n  ngAfterViewInit(): void {\n    this.fetchProjects();\n  }\n\n  private getUsers() {\n    this.commonService.fetchUsers().subscribe((next) => {\n      this.users = next;\n    });\n  }\n\n  private updateDatasource() {\n    this.dataSource.data = this.projects;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // Default sort: ID ascending\n    this.sort.active = 'id';\n    this.sort.direction = 'asc';\n\n    this.sort.sortChange.emit({\n      active: this.sort.active,\n      direction: this.sort.direction,\n    });\n  }\n\n  private fetchProjects(): void {\n    this.projectService.fetchProjects().subscribe({\n      next: (projects) => {\n        this.projects = projects;\n        this.updateDatasource();\n      },\n      error: (err) => {\n        console.error('Failed to fetch projects:', err);\n        this.isLoading = false;\n      },\n    });\n  }\n\n  public openForm(id?: number): void {\n    const dialogRef = this.dialog.open(ProjectForm, {\n      data: { id },\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.fetchProjects();\n    });\n  }\n\n  public onDelete(projectId: number, projectName: string): void {\n    this.projectService.deleteProject(projectId).subscribe({\n      next: (res) => {\n        if (res) {\n          this.fetchProjects();\n          this.commonService.openSuccessSnackBar(\n            `${projectName} Project Deleted`\n          );\n        }\n      },\n      error: () => alert('Something went wrong'),\n    });\n  }\n\n  public addNew(): void {\n    this.dialog.open(ProjectForm, { width: '400px' });\n  }\n\n  public redirectToTask(id: string): void {\n    this.router.navigate(['/projects', id, 'tasks']);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n\n\n\n  \n    \n\n      \n        ID\n        {{ row.id }}\n      \n\n\n      \n      \n        Project Name\n        {{ row.name || '-' }}\n      \n\n      \n      \n        AssignedTo\n        {{ row.assignedTo | userName: users }}\n      \n\n      \n      \n        Status\n        {{ row.status || '-' }}\n      \n\n      \n      \n        Start Date\n        {{ row.startDate | date: 'dd MMMM yy' }}\n      \n\n      \n      \n        DeadLine\n        {{ row.status === 'Done' ? 'Completed' :  row.deadlineDate | duedate }}\n      \n\n      \n      \n        Description\n        {{ row.description || '-' }}\n      \n\n      \n      \n        Actions\n        \n          \n            edit\n          \n          \n            delete\n          \n        \n      \n\n      \n      \n      \n    \n      No projects available.\n    \n  \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./project-list.scss\n                \n                .top-container {\n  height: calc(100% - 70px);\n  display: flex;\n  overflow-y: auto;\n  flex-direction: column;\n\n  .loader {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .project-card {\n    overflow-y: auto;\n    height: 100%;\n    margin-bottom: 4px;\n    border-radius: 0;\n    background-color: #fafafa;\n\n    .header {\n      display: flex;\n      justify-content: space-between;\n\n      .title {\n        margin: 0\n      }\n    }\n  }\n\n  .table-container {\n    overflow-x: auto;\n\n    table {\n      width: 100%;\n      min-width: 600px;\n\n      .data-row {\n        box-shadow: 0px 0px 1px 2px #e0dada;\n      }\n\n      .data-row:hover {\n        background-color: #fefff9;\n        cursor: pointer;\n        box-shadow: 0px 0px 6px 4px #e9e3e3;\n        transition: box-shadow 0.2s ease;\n\n      }\n\n      .no-data {\n        text-align: center;\n      }\n    }\n\n    th,\n    td {\n      padding: 8px 16px;\n      text-align: left;\n      font-family: sans-serif;\n      color: #514f4f;\n    }\n\n    th {\n      font-weight: 600;\n      color: #2a2929;\n    }\n\n    mat-icon {\n      font-size: 20px;\n    }\n\n    .edit {\n      color: #4b4bbb\n    }\n\n    .delete {\n      color: #e34545\n    }\n  }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            ID        {{ row.id }}                          Project Name        {{ row.name || \\'-\\' }}                          AssignedTo        {{ row.assignedTo | userName: users }}                          Status        {{ row.status || \\'-\\' }}                          Start Date        {{ row.startDate | date: \\'dd MMMM yy\\' }}                          DeadLine        {{ row.status === \\'Done\\' ? \\'Completed\\' :  row.deadlineDate | duedate }}                          Description        {{ row.description || \\'-\\' }}                          Actions                              edit                                delete                                                    No projects available.                '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/projects/project-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addProject\n                            \n                            \n                                    Public\n                                deleteProject\n                            \n                            \n                                    Public\n                                fetchProjects\n                            \n                            \n                                    Public\n                                getProject\n                            \n                            \n                                    Public\n                                updateProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/project-service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addProject\n                        \n                    \n                \n            \n            \n                \n                        \n                    addProject(project: Projects)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            Projects\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteProject\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProject(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchProjects\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProject(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateProject\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProject(project: Projects, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/projects/project-service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            Projects\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/projects'\n                    \n                \n                    \n                        \n                                Defined in src/app/projects/project-service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Projects } from '../core/models/project.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  public apiUrl = 'http://localhost:3000/projects';\n\n  constructor(private http: HttpClient) { }\n\n  public fetchProjects(): Observable {\n        return this.http.get(this.apiUrl);\n    }\n\n     public getProject(id: number): Observable {\n        return this.http.get(`${this.apiUrl}/${id}`);\n    }\n\n  public addProject(project: Projects): Observable {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        return this.http.post(this.apiUrl, project, { headers });\n    }\n\n  public updateProject(project: Projects, id: number): Observable {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        return this.http.patch(`${this.apiUrl}/${id}`, project, { headers });\n    }\n\n  public deleteProject(id: number): Observable {\n        return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Projects.html":{"url":"interfaces/Projects.html","title":"interface - Projects","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Projects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/project.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assignedTo\n                                        \n                                \n                                \n                                        \n                                            deadlineDate\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            startDate\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assignedTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assignedTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deadlineDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deadlineDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Projects {\n    id: string,\n    name: string,\n    status: string,\n    startDate: Date,\n    deadlineDate: Date,\n    description: string,\n    assignedTo: string\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/gaurds/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                            \n                                canLoad\n                            \n                            \n                                    Private\n                                checkAccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/gaurds/role.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/gaurds/role.guard.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivateChild\n                        \n                    \n                \n            \n            \n                \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/gaurds/role.guard.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canLoad\n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route, segments: UrlSegment[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/gaurds/role.guard.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        Route\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                segments\n                                            \n                                                        UrlSegment[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAccess(expectedRoles: string[] | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/gaurds/role.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expectedRoles\n                                            \n                                                        string[] | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  CanLoad,\n  CanActivateChild,\n  Route,\n  UrlSegment,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from '../authService/auth-service';\n\n@Injectable({ providedIn: 'root' })\nexport class RoleGuard implements CanActivate, CanLoad, CanActivateChild {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  private checkAccess(expectedRoles: string[] | string): boolean {\n    const currentRole = this.authService.getUserRole();\nif(currentRole) {\n    if (Array.isArray(expectedRoles)) {\n      return expectedRoles.includes(currentRole);\n    } else {\n      return currentRole === expectedRoles;\n    }\n  }\n  return false\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (!this.checkAccess(route.data['role'])) {\n      this.router.navigate(['/unauthorized']);\n      return false;\n    }\n    return true;\n  }\n\n  canLoad(route: Route, segments: UrlSegment[]): boolean {\n    if (!this.checkAccess(route.data?.['role'])) {\n      this.router.navigate(['/unauthorized']);\n      return false;\n    }\n    return true;\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInput.html":{"url":"components/SearchInput.html","title":"component - SearchInput","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/search-input/search-input.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-input\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-input.html\n            \n\n\n\n            \n                styleUrl\n                ./search-input.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSearchInputChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/search-input/search-input.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSearchInputChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSearchInputChange(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/search-input/search-input.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { CommonService } from '../../../core/services/commonService/common-service';\n\n@Component({\n  selector: 'app-search-input',\n  imports: [FormsModule, MatFormFieldModule, MatInputModule, MatIconModule],\n  templateUrl: './search-input.html',\n  styleUrl: './search-input.scss',\n})\nexport class SearchInput {\n  constructor(private commonService: CommonService) {}\n\n  public onSearchInputChange(searchTerm: string) {\n    this.commonService.triggerSearch(searchTerm);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    search\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          search  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInput'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskForm.html":{"url":"components/TaskForm.html","title":"component - TaskForm","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-form/task-form.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-form\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            CommonModule\n                            ReactiveFormsModule\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./task-form.html\n            \n\n\n\n            \n                styleUrl\n                ./task-form.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                priorities\n                            \n                            \n                                    Public\n                                statuses\n                            \n                            \n                                    Public\n                                taskId\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, data: Tasks, dialogRef: MatDialogRef, taskService: TaskService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-form/task-form.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Tasks\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-form/task-form.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tasks\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-form/task-form.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-form/task-form.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-form/task-form.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        priorities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['High', 'Medium', 'Low']\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-form/task-form.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statuses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['To Do', 'In Progress', 'Done']\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-form/task-form.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-form/task-form.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Alice', 'Bob', 'Charlie']\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-form/task-form.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Inject } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { TaskService } from '../task-service';\nimport { CommonService } from '../../core/services/commonService/common-service';\nimport { materialImports } from '../../core/models/material.imports';\nimport { Tasks } from '../../core/models/task.model';\n\n@Component({\n  selector: 'app-task-form',\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    CommonModule,\n    ReactiveFormsModule,\n    materialImports,\n  ],\n  templateUrl: './task-form.html',\n  styleUrl: './task-form.scss',\n})\nexport class TaskForm {\n  public form: FormGroup;\n  public taskId: string = '';\n  public users = ['Alice', 'Bob', 'Charlie'];\n  public statuses = ['To Do', 'In Progress', 'Done'];\n  public priorities = ['High', 'Medium', 'Low'];\n\n  constructor(\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: Tasks,\n    public dialogRef: MatDialogRef,\n    private taskService: TaskService,\n    private commonService: CommonService\n  ) {\n    const defaultData = this.data || {};\n\n    if (defaultData) {\n      this.taskId = defaultData.id;\n    }\n\n    this.form = this.fb.group({\n      name: [defaultData.name || '', Validators.required],\n      dueDate: [defaultData.dueDate || ''],\n      status: [defaultData.status || 'To Do', Validators.required],\n      priority: [defaultData.priority || 'Low', Validators.required],\n      description: [defaultData.description || '', [Validators.required]],\n    });\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      const UpdatedTask = {\n        ...this.form.value,\n        id: this.taskId,\n        projectId: this.data.projectId,\n      };\n\n      const response = this.taskId\n        ? this.taskService.updateTasks(UpdatedTask, this.taskId)\n        : this.taskService.addTasks(UpdatedTask);\n\n      response.subscribe(\n        (result) => {\n          if (result) {\n            this.dialogRef.close(true);\n            const message = this.taskId ? 'Task Updated' : 'Task Created';\n            this.commonService.openSuccessSnackBar(message);\n          }\n        },\n        (error) => {\n          this.commonService.openFailureSnackBar('something went wrong');\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  {{taskId ? 'Edit' : 'Add'}}{{form.value.name ? form.value.name : 'New Task'}}\n  \n  \n    \n\n      \n        Name\n        \n      \n\n      \n        DueDate\n        \n        \n        \n      \n\n      \n        Status\n        \n          {{ s }}\n        \n      \n\n      \n        Priority\n        \n          {{ p }}\n        \n      \n\n      \n        Description\n        \n      \n\n      \n        \n          {{taskId ? 'Update' : 'Add'}}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{taskId ? \\'Edit\\' : \\'Add\\'}}{{form.value.name ? form.value.name : \\'New Task\\'}}                      Name                            DueDate                                            Status                  {{ s }}                            Priority                  {{ p }}                            Description                                      {{taskId ? \\'Update\\' : \\'Add\\'}}                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListComponent.html":{"url":"components/TaskListComponent.html","title":"component - TaskListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/task-list/task-list.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            DragDropModule\n                                Header\n                                materialImports\n                \n            \n\n            \n                styleUrls\n                ./task-list.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filteredTasks\n                            \n                            \n                                    Private\n                                projectId\n                            \n                            \n                                sortField\n                            \n                            \n                                statusFilter\n                            \n                            \n                                    Public\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteTask\n                            \n                            \n                                    Private\n                                fetchTasks\n                            \n                            \n                                    Public\n                                filterData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDrop\n                            \n                            \n                                    Public\n                                openForm\n                            \n                            \n                                    Public\n                                sortTasks\n                            \n                            \n                                    Public\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, cdr: ChangeDetectorRef, route: ActivatedRoute, taskService: TaskService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-list/task-list.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTask(id: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-list/task-list.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchTasks(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-list/task-list.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterData\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-list/task-list.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-list/task-list.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDrop(event: CdkDragDrop)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-list/task-list.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            CdkDragDrop\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    openForm(task?: Tasks)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-list/task-list.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Tasks\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sortTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    sortTasks(sortBy: \"dueDate\" | \"priority\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-list/task-list.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sortBy\n                                            \n                                                        \"dueDate\" | \"priority\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-list/task-list.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filteredTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list/task-list.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list/task-list.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list/task-list.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list/task-list.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-list/task-list.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component } from '@angular/core';\nimport {\n  CdkDragDrop,\n  DragDropModule,\n  moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { TaskForm } from '../task-form/task-form';\nimport { Header } from '../../shared/components/header/header';\nimport { ActivatedRoute } from '@angular/router';\nimport { TaskService } from '../task-service';\nimport { CommonService } from '../../core/services/commonService/common-service';\nimport { materialImports } from '../../core/models/material.imports';\nimport { Tasks } from '../../core/models/task.model';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.html',\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    DragDropModule,\n    Header,\n    materialImports,\n  ],\n  styleUrls: ['./task-list.scss'],\n})\nexport class TaskListComponent {\n  public tasks: Tasks[] = [];\n\n  statusFilter: string = '';\n  sortField: string = '';\n  private projectId: string = '';\n\n  public filteredTasks: Tasks[] = [];\n\n  constructor(\n    private dialog: MatDialog,\n    private cdr: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private taskService: TaskService,\n    private commonService: CommonService\n  ) {}\n\n  ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('projectId') || '';\n    if (this.projectId) {\n      this.fetchTasks(this.projectId);\n    }\n  }\n\n  private fetchTasks(projectId: string) {\n    this.taskService.fetchTasks(projectId).subscribe((res) => {\n      this.tasks = res;\n      this.filteredTasks = this.filterData();\n      this.cdr.detectChanges();\n    });\n  }\n\n  public filterData() {\n    let result = [...this.tasks];\n    if (this.statusFilter) {\n      result = result.filter((t) => t.status === this.statusFilter);\n    }\n    if (this.sortField === 'dueDate') {\n      result.sort(\n        (a, b) => new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime()\n      );\n    }\n    if (this.sortField === 'priority') {\n      const priorityOrder = { High: 1, Medium: 2, Low: 3 };\n      result.sort(\n        (a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]\n      );\n    }\n    return result;\n  }\n\n  public onDrop(event: CdkDragDrop) {\n    this.sortField = '';\n    moveItemInArray(this.tasks, event.previousIndex, event.currentIndex);\n    this.filteredTasks = this.filterData();\n  }\n\n  public openForm(task?: Tasks) {\n    const dialogRef = this.dialog.open(TaskForm, {\n      data: { ...task, projectId: this.projectId },\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.fetchTasks(this.projectId);\n      }\n    });\n  }\n\n  public deleteTask(id: string, name: string) {\n    this.taskService.deleteTasks(id).subscribe((res) => {\n      if (res) {\n        this.fetchTasks(this.projectId);\n        this.commonService.openSuccessSnackBar(`Task deleted`);\n      }\n    });\n  }\n\n  public updateStatus(id: string, status: string) {\n    const updated = { status };\n    this.taskService.updateTasks({ status } as Tasks, id).subscribe(\n      (res) => console.log('status change'),\n      (err) => console.log(err)\n    );\n  }\n\n  public sortTasks(sortBy: 'dueDate' | 'priority') {\n    this.sortField = sortBy;\n    this.filteredTasks = this.filterData();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n    \n      \n        \n          drag_handle\n          {{ task.name }}\n        \n        \n          \n            edit\n          \n          \n            delete\n          \n        \n      \n      \n        Status: {{ task.status }}\n        \n          Due: {{ task.dueDate | date: 'dd MMM yy'\n          }}\n        \n        Priority: {{ task.priority }}\n        Description: {{ task.description }}\n      \n    \n  \n\n  \n    \n      Currently no task available for this projects\n      \n        Add New\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.scss\n                \n                .container {\n  height: calc(100% - 70px);\n  display: flex;\n  overflow-y: auto;\n  flex-direction: column;\n\n  .body-content {\n    overflow-y: auto;\n    height: 100%;\n    gap: 16px;\n    margin: 7px;\n    border-radius: 0;\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .task-card {\n    background: #fafafa;\n    border-radius: 12px;\n    box-shadow: 2px 2px 9px rgba(0, 0, 0, 0.1);\n    padding: 5px 8px 8px 8px;\n    border: 1px solid #e7dddd;\n    width: calc(50% - 30px);\n    height: calc(50% - 20px);\n\n    .task-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      overflow-x: auto;\n      overflow-y: hidden;\n\n      .left-header {\n        display: flex;\n        gap: 8px;\n        align-items: center;\n\n        mat-icon {\n          color: grey;\n          cursor: grabbing;\n        }\n      }\n\n      .actions {\n        display: flex;\n        gap: 10px;\n\n        .status-btn {\n          background-color: #fafafa;\n          padding: 5px 20px;\n          box-shadow: 0px 0px 2px 1px gray;\n\n        }\n      }\n    }\n\n    .task-body {\n      overflow: auto;\n      height: calc(100% - 42px);\n\n      p {\n        margin: 5px;\n        color: #1c1a1a;\n        font-size: 20px;\n\n        .heading {\n          color: #5c5757;\n          font-size: 20px;\n        }\n      }\n    }\n  }\n}\n\n.project-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n}\n\n\n\n.task-list {\n  padding: 10px;\n  min-height: 100px;\n}\n\n.task-item {\n  background: white;\n  border-radius: 8px;\n  padding: 8px 12px;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  cursor: move;\n}\n\n.drag-handle {\n  color: #888;\n}\n\n.edit {\n  color: #4b4bbb\n}\n\n.delete {\n  color: #e34545\n}\n\n.no-task {\n  height: 100%;\n  display: flex;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 10px;\n\n  .nt-txt {\n    padding: 5px;\n    font-size: 25px;\n    color: tomato;\n  }\n\n  .nt-btn {\n    padding: 9px;\n    border-style: none;\n    border-radius: 27px;\n    box-shadow: 0px 0px 5px 5px #e5e5e5;\n    width: 20%;\n    height: 10%;\n    font-size: 20px;\n    color: #2e2eec;\n    background-color: #cdd8ff;\n    cursor: pointer;\n  }\n}\n\n.cdk-drag-preview.task-card {\n  background: #fafafa;\n  border-radius: 12px;\n  box-shadow: 2px 2px 9px rgba(0, 0, 0, 0.1);\n  padding: 5px 8px 8px 8px;\n  width: calc(50% - 30px);\n  height: calc(50% - 20px);\n  opacity: 0.95;\n  z-index: 1000;\n  border: 1px solid #e7dddd;\n\n  .task-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n\n    .left-header {\n      display: flex;\n      gap: 8px;\n      align-items: center;\n\n      mat-icon {\n        color: grey;\n        cursor: grabbing;\n      }\n    }\n\n    .actions {\n      display: flex;\n      gap: 10px;\n    }\n  }\n\n  .task-body {\n    overflow: auto;\n    height: calc(100% - 42px);\n\n    p {\n      margin: 5px;\n      color: #1c1a1a;\n      font-size: 20px;\n\n      .heading {\n        color: #5c5757;\n        font-size: 20px;\n      }\n    }\n  }\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  drag_handle          {{ task.name }}                                      edit                                delete                                      Status: {{ task.status }}                  Due: {{ task.dueDate | date: \\'dd MMM yy\\'          }}                Priority: {{ task.priority }}        Description: {{ task.description }}                        Currently no task available for this projects              Add New            '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/task-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTasks\n                            \n                            \n                                    Public\n                                deleteTasks\n                            \n                            \n                                    Public\n                                fetchTasks\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Public\n                                updateTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/task-service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTasks(project: Tasks)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            Tasks\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTasks(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchTasks(projectId?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTasks(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTasks(project: Tasks, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/tasks/task-service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            Tasks\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/tasks'\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/task-service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Tasks } from '../core/models/task.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n public apiUrl = 'http://localhost:3000/tasks';\n\n  constructor(private http: HttpClient) { }\n\n  public fetchTasks(projectId?: string): Observable {\n     const url = projectId ? `${this.apiUrl}?projectId=${projectId}` : this.apiUrl\n        return this.http.get(url);\n    }\n\n     public getTasks(id: string): Observable {\n        return this.http.get(`${this.apiUrl}/${id}`);\n    }\n\n  public addTasks(project: Tasks): Observable {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        return this.http.post(this.apiUrl, project, { headers });\n    }\n\n  public updateTasks(project: Tasks, id: string): Observable {\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n        return this.http.patch(`${this.apiUrl}/${id}`, project, { headers });\n    }\n    \n\n  public deleteTasks(id: string): Observable {\n        return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tasks.html":{"url":"interfaces/Tasks.html","title":"interface - Tasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/task.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:     \"Low\" | \"Medium\" | \"High\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Low\" | \"Medium\" | \"High\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"To Do\" | \"In Progress\" | \"Done\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"To Do\" | \"In Progress\" | \"Done\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Tasks {\n  id: string;\n  name: string;\n  dueDate: string;\n  priority: 'Low' | 'Medium' | 'High';\n  status: 'To Do' | 'In Progress' | 'Done';\n  description: string;\n  projectId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToasterComponent.html":{"url":"components/ToasterComponent.html","title":"component - ToasterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToasterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toaster-component/toaster-component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toaster-component\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatIconModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toaster-component.html\n            \n\n\n\n            \n                styleUrl\n                ./toaster-component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dismiss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/toaster-component/toaster-component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                        \n                    dismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/toaster-component/toaster-component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toaster-component/toaster-component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-toaster-component',\n  standalone: true,\n  imports: [CommonModule, MatIconModule, MatButtonModule],\n  templateUrl: './toaster-component.html',\n  styleUrl: './toaster-component.scss',\n})\nexport class ToasterComponent {\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) {}\n\n  public dismiss() {\n    this.data.snackBar.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{data.message}}\n  \n  {{data.action}}\n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{data.message}}    {{data.action}}        '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToasterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopHeader.html":{"url":"components/TopHeader.html","title":"component - TopHeader","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/top-header/top-header.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-header\n            \n\n\n            \n                imports\n                \n                                Notification\n                            CommonModule\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./top-header.html\n            \n\n\n\n            \n                styleUrl\n                ./top-header.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logOut\n                            \n                            \n                                    Public\n                                viewProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, commonService: CommonService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/top-header/top-header.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    logOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/top-header/top-header.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    viewProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/top-header/top-header.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Notification } from '../components/notification/notification';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../auth/authService/auth-service';\nimport { CommonService } from '../services/commonService/common-service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UserForm } from '../../users/user-form/user-form';\nimport { materialImports } from '../models/material.imports';\n\n@Component({\n  selector: 'app-top-header',\n  imports: [Notification, CommonModule, materialImports],\n  templateUrl: './top-header.html',\n  styleUrl: './top-header.scss',\n})\nexport class TopHeader {\n  constructor(\n    private authService: AuthService,\n    private commonService: CommonService,\n    private dialog: MatDialog\n  ) {}\n\n  public logOut() {\n    this.authService.logout();\n    this.commonService.openSuccessSnackBar('LogOut successfully', 'ok');\n  }\n\n  public viewProfile() {\n    const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n    if (currentUser.id) {\n      const dialogRef = this.dialog.open(UserForm, {\n        data: { id: currentUser.id, canEdit: false },\n        width: '400px',\n      });\n      dialogRef.afterClosed().subscribe((result) => {});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Project Mangement\n  \n  \n    \n    \n      \n        account_circle\n      \n\n      \n        \n          logout\n          Logout\n        \n        \n          visibility\n          View profile\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Project Mangement                          account_circle                              logout          Logout                          visibility          View profile                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopHeader'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UnAuthorize.html":{"url":"components/UnAuthorize.html","title":"component - UnAuthorize","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UnAuthorize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/un-authorize/un-authorize.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-un-authorize\n            \n\n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./un-authorize.html\n            \n\n\n\n            \n                styleUrl\n                ./un-authorize.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-un-authorize',\n  imports: [RouterModule],\n  templateUrl: './un-authorize.html',\n  styleUrl: './un-authorize.scss'\n})\nexport class UnAuthorize {\n\n}\n\n    \n\n    \n        \n    \n        403 - ACCESS DENIED\n    \n\n    \n        Oops, You don't have permission to access this page.\n    \n\n    \n        Go to homepage\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            403 - ACCESS DENIED                Oops, You don\\'t have permission to access this page.                Go to homepage    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UnAuthorize'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserForm.html":{"url":"components/UserForm.html","title":"component - UserForm","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/user-form/user-form.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNativeDateAdapter()\n                \n            \n\n\n            \n                selector\n                app-user-form\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-form.html\n            \n\n\n\n            \n                styleUrl\n                ./user-form.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canEdit\n                            \n                            \n                                    Public\n                                currentDate\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                roles\n                            \n                            \n                                    Public\n                                userData\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getUser\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, data: userDialogData, dialogRef: MatDialogRef, userService: UserService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-form/user-form.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        userDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-form/user-form.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-form/user-form.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canEdit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-form/user-form.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-form/user-form.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         userDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-form/user-form.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-form/user-form.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Admin', 'Project Manager', 'Developer']\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-form/user-form.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as Users\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-form/user-form.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-form/user-form.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Inject } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { provideNativeDateAdapter } from '@angular/material/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UserService } from '../user-service';\nimport { Observable } from 'rxjs';\nimport { userDialogData } from '../../core/models/dialogData.model';\nimport { CommonService } from '../../core/services/commonService/common-service';\nimport { materialImports } from '../../core/models/material.imports';\nimport { Users } from '../../core/models/user.model';\n\n@Component({\n  selector: 'app-user-form',\n  imports: [CommonModule, ReactiveFormsModule, materialImports],\n  providers: [provideNativeDateAdapter()],\n  templateUrl: './user-form.html',\n  styleUrl: './user-form.scss',\n})\nexport class UserForm {\n  public form: FormGroup;\n  public currentDate: Date = new Date();\n  public userId: string = '';\n  public roles = ['Admin', 'Project Manager', 'Developer'];\n  public userData = {} as Users;\n  public canEdit: boolean = true;\n\n  constructor(\n    private fb: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: userDialogData,\n    private dialogRef: MatDialogRef,\n    private userService: UserService,\n    private commonService: CommonService\n  ) {\n    if (this.data && this.data.id) {\n      this.userId = this.data.id;\n      this.canEdit = this.data.canEdit !== undefined ? this.data.canEdit : true;\n      this.getUser();\n    }\n\n    this.form = this.fb.group({\n      fullName: [this.userData.fullName || '', Validators.required],\n      userName: [this.userData.userName || '', Validators.required],\n      password: [this.userData.password || '', Validators.required],\n      role: [this.userData.role || '', Validators.required],\n    });\n\n    if (!this.canEdit) {\n      this.form.get('fullName')?.disable();\n      this.form.get('userName')?.disable();\n      this.form.get('password')?.disable();\n      this.form.get('role')?.disable();\n    }\n  }\n\n  private getUser() {\n    this.userService.getUser(this.userId).subscribe(\n      (response) => {\n        this.userData = response;\n        const { id, creationDate, ...pro } = response;\n        this.form.setValue(pro);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  public onSubmit(): void {\n    if (!this.canEdit) {\n      this.dialogRef.close();\n    }\n    if (this.form.valid) {\n      let response: Observable;\n\n      let UpdatedUser: Users = this.form.value;\n\n      if (this.userId) {\n        response = this.userService.updateUser(UpdatedUser, this.userId);\n      } else {\n        UpdatedUser['creationDate'] = new Date();\n        response = this.userService.addUser(UpdatedUser);\n      }\n\n      response.subscribe(\n        (result) => {\n          if (result) {\n            this.dialogRef.close(true);\n            const msg = this.userId ? 'User Updated' : 'User Added';\n            this.commonService.openSuccessSnackBar(msg);\n          }\n        },\n        (error) => {\n          this.commonService.openFailureSnackBar('something went wrong');\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{userId ? 'Edit' : 'Add'}}\n    {{form.get('fullName')?.value || 'New User'}}\n  \n  \n    \n      \n         FullName\n        \n      \n\n      \n        UserName\n        \n      \n\n      \n        Password\n        \n      \n\n      \n        Role\n        \n          {{ r }}\n        \n      \n\n      \n        \n          {{canEdit ? userId ? 'Update' : 'Add' : 'Close'}}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{userId ? \\'Edit\\' : \\'Add\\'}}    {{form.get(\\'fullName\\')?.value || \\'New User\\'}}                       FullName                            UserName                            Password                            Role                  {{ r }}                                      {{canEdit ? userId ? \\'Update\\' : \\'Add\\' : \\'Close\\'}}                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserList.html":{"url":"components/UserList.html","title":"component - UserList","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/user-list/user-list.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                                Header\n                            DuedatePipe\n                                materialImports\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-list.html\n            \n\n\n\n            \n                styleUrl\n                ./user-list.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    \n                                paginator\n                            \n                            \n                                    \n                                sort\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchUsers\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDelete\n                            \n                            \n                                    Public\n                                openForm\n                            \n                            \n                                    Private\n                                updateDatasource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, commonService: CommonService, cdr: ChangeDetectorRef, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-list/user-list.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-list/user-list.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-list/user-list.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-list/user-list.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-list/user-list.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDelete(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-list/user-list.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    openForm(id?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-list/user-list.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateDatasource\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateDatasource()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-list/user-list.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource(this.users)\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-list/user-list.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'id',\n    'name',\n    'userName',\n    'creationDate',\n    'password',\n    'role',\n    'actions',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-list/user-list.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-list/user-list.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-list/user-list.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-list/user-list.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-list/user-list.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Subscription } from 'rxjs';\nimport { CommonService } from '../../core/services/commonService/common-service';\nimport { Header } from '../../shared/components/header/header';\nimport { DuedatePipe } from '../../shared/pipes/duedate-pipe';\nimport { UserForm } from '../user-form/user-form';\nimport { UserService } from '../user-service';\nimport { materialImports } from '../../core/models/material.imports';\nimport { Users } from '../../core/models/user.model';\n\n@Component({\n  selector: 'app-user-list',\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Header,\n    DuedatePipe,\n    materialImports,\n  ],\n  templateUrl: './user-list.html',\n  styleUrl: './user-list.scss',\n})\nexport class UserList {\n  private sub!: Subscription;\n\n  public users: Users[] = [];\n  public displayedColumns: string[] = [\n    'id',\n    'name',\n    'userName',\n    'creationDate',\n    'password',\n    'role',\n    'actions',\n  ];\n  public dataSource = new MatTableDataSource(this.users);\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private dialog: MatDialog,\n    private commonService: CommonService,\n    private cdr: ChangeDetectorRef,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.sub = this.commonService.search$.subscribe((term) => {\n      const filteredData = this.commonService.filteredSearchData(\n        term,\n        this.users,\n        ['id', 'fullName', 'userName', 'password', 'role']\n      );\n      this.dataSource.data = filteredData;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.fetchUsers();\n  }\n\n  private updateDatasource() {\n    this.dataSource.data = this.users;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    // Default sort: ID ascending\n    this.sort.active = 'id';\n    this.sort.direction = 'asc';\n\n    this.sort.sortChange.emit({\n      active: this.sort.active,\n      direction: this.sort.direction,\n    });\n    this.cdr.detectChanges();\n  }\n\n  private fetchUsers() {\n    this.userService.fetchUsers().subscribe(\n      (response) => {\n        this.users = response;\n\n        this.updateDatasource();\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  public openForm(id?: string) {\n    const dialogRef = this.dialog.open(UserForm, {\n      data: { id },\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.fetchUsers();\n      }\n    });\n  }\n\n  public onDelete(userId: string) {\n    this.userService.deleteUser(userId).subscribe(\n      (res) => {\n        if (res) {\n          this.fetchUsers();\n          this.commonService.openSuccessSnackBar('User Deleted');\n        }\n      },\n      (err) => {\n        console.log('something went wrong', err);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n      \n        \n          ID\n          {{ row.id }}\n        \n\n        \n        \n          Full Name\n          {{ row.fullName || '-' }}\n        \n\n        \n        \n          UserName\n          {{ row.userName || '-' }}\n        \n\n        \n        \n          PassWord\n          {{ row.password || '-' }}\n        \n\n        \n        \n          \n            Created Date\n          \n          \n            {{ row.creationDate | date: 'dd MMMM yy' }}\n          \n        \n\n        \n        \n          Role\n          {{ row.role || '-' }}\n        \n\n        \n        \n          Actions\n          \n            \n              edit\n            \n            \n              delete\n            \n          \n        \n\n        \n        \n        \n          \n            No Users Added.\n          \n        \n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  ID          {{ row.id }}                                  Full Name          {{ row.fullName || \\'-\\' }}                                  UserName          {{ row.userName || \\'-\\' }}                                  PassWord          {{ row.password || \\'-\\' }}                                              Created Date                                {{ row.creationDate | date: \\'dd MMMM yy\\' }}                                            Role          {{ row.role || \\'-\\' }}                                  Actions                                    edit                                      delete                                                                            No Users Added.                                    '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'Header', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home-component'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFound', 'selector': 'app-not-found'},{'name': 'Notification', 'selector': 'app-notification'},{'name': 'ProjectForm', 'selector': 'app-project-form'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'SearchInput', 'selector': 'app-search-input'},{'name': 'TaskForm', 'selector': 'app-task-form'},{'name': 'TaskListComponent', 'selector': 'app-task-list'},{'name': 'ToasterComponent', 'selector': 'app-toaster-component'},{'name': 'TopHeader', 'selector': 'app-top-header'},{'name': 'UnAuthorize', 'selector': 'app-un-authorize'},{'name': 'UserForm', 'selector': 'app-user-form'},{'name': 'UserList', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserList'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UserNamePipe.html":{"url":"pipes/UserNamePipe.html","title":"pipe - UserNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UserNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/user-name-pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        userName\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, users: Users[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/user-name-pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                users\n                                            \n                                                            Users[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Users } from '../../core/models/user.model';\n\n\n@Pipe({\n  name: 'userName'\n})\nexport class UserNamePipe implements PipeTransform {\n\n  transform(value: unknown, users: Users[]): string {\n\n    const user = users.find(u => u.id == value);\n    if(user) {\n      return user.fullName;\n    }\n    return '-';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/user-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUser\n                            \n                            \n                                    Public\n                                deleteUser\n                            \n                            \n                                    Public\n                                fetchUsers\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUser(User: Users)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                User\n                                            \n                                                            Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(User: Users, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                User\n                                            \n                                                            Users\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Users } from '../core/models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  public apiUrl = 'http://localhost:3000/users';\n\n  constructor(private http: HttpClient) {}\n\n  public fetchUsers(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  public getUser(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n\n  public addUser(User: Users): Observable {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post(this.apiUrl, User, { headers });\n  }\n\n  public updateUser(User: Users, id: string): Observable {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.patch(`${this.apiUrl}/${id}`, User, { headers });\n  }\n\n  public deleteUser(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Users.html":{"url":"interfaces/Users.html","title":"interface - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creationDate\n                                        \n                                \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Users {\n      id: string,\n      fullName: string,\n      userName: string,\n      password: string,\n      creationDate: Date,\n      role: string\n    }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/authService/auth-service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/gaurds/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/gaurds/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/login-component/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/components/notification/notification.ts\n            \n            component\n            Notification\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/http-service.ts\n            \n            injectable\n            HttpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/handlehttp-interceptor.ts\n            \n            variable\n            handlehttpInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/models/dashboard.model.ts\n            \n            interface\n            Kpis\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/dialogData.model.ts\n            \n            interface\n            userDialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/core/models/material.imports.ts\n            \n            variable\n            materialImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/models/notification.model.ts\n            \n            interface\n            Notifications\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/models/project.model.ts\n            \n            interface\n            Projects\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/task.model.ts\n            \n            interface\n            Tasks\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            Users\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/commonService/common-service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/core/services/cron-service.ts\n            \n            injectable\n            CronService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/loader-service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/notification-service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/top-header/top-header.ts\n            \n            component\n            TopHeader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard-component/dashboard-component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/projects/project-form/project-form.ts\n            \n            component\n            ProjectForm\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/projects/project-list/project-list.ts\n            \n            component\n            ProjectListComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/projects/project-service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/header/header.ts\n            \n            component\n            Header\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/home-component/home-component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/not-found/not-found.ts\n            \n            component\n            NotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/search-input/search-input.ts\n            \n            component\n            SearchInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/toaster-component/toaster-component.ts\n            \n            component\n            ToasterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/un-authorize/un-authorize.ts\n            \n            component\n            UnAuthorize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/duedate-pipe.ts\n            \n            pipe\n            DuedatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/user-name-pipe.ts\n            \n            pipe\n            UserNamePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/task-form/task-form.ts\n            \n            component\n            TaskForm\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/tasks/task-list/task-list.ts\n            \n            component\n            TaskListComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/tasks/task-service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/users/user-form/user-form.ts\n            \n            component\n            UserForm\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/users/user-list/user-list.ts\n            \n            component\n            UserList\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/users/user-service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.1\n        \n            chart.js : ^4.5.0\n        \n            express : ^5.1.0\n        \n            json-server-auth : ^2.1.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularAssesment\nThis project was generated using Angular CLI version 20.0.1.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/userDialogData.html":{"url":"interfaces/userDialogData.html","title":"interface - userDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  userDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/dialogData.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canEdit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canEdit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canEdit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface userDialogData {\n    id: string;\n    canEdit: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            handlehttpInterceptor   (src/.../handlehttp-interceptor.ts)\n                        \n                        \n                            materialImports   (src/.../material.imports.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n    provideRouter(routes), provideClientHydration(withEventReplay()),\n    provideHttpClient( withInterceptors([handlehttpInterceptor])),\n    importProvidersFrom(ReactiveFormsModule),\n    provideNativeDateAdapter(),\n    provideCharts(withDefaultRegisterables())\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/handlehttp-interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handlehttpInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const authService = inject(AuthService);\n  const AuthToken = authService.getToken();\n\n  if (AuthToken) {\n    const authreq = req.clone({\n      setHeaders: {\n        Authorization: `BEARER ${AuthToken}`,\n      },\n    });\n    return next(authreq).pipe(\n      catchError((error) => {\n        if (error.status === 401) {\n          authService.logout();\n        }\n        return throwError(() => error);\n      })\n    );\n  }\n  return next(req);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/models/material.imports.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        materialImports\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MatCardModule,\n  MatInputModule,\n  MatButtonModule,\n  MatIconModule,\n  MatMenuModule,\n  MatBadgeModule,\n  MatProgressSpinnerModule,\n  MatTableModule,\n  MatDividerModule,\n  MatDialogModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatDatepickerModule,\n  MatSidenavModule\n]\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
